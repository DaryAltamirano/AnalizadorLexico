Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    ELSE
    MOD
    OR
    PUNTOYCOMA
    SALTOLINEA
    THEN
    WHILE

Grammar

Rule 0     S' -> todoConLinea
Rule 1     todoConLinea -> repetodo
Rule 2     todo -> lista
Rule 3     todo -> variable
Rule 4     todo -> conjunto
Rule 5     todo -> pair
Rule 6     todo -> control
Rule 7     todo -> adicionales
Rule 8     todo -> funcion
Rule 9     todo -> sublist
Rule 10    todo -> readline
Rule 11    todo -> prin
Rule 12    todo -> contador
Rule 13    todo -> retor
Rule 14    repetodo -> todo
Rule 15    repetodo -> todo repetodo
Rule 16    lista -> ListaConTipo
Rule 17    lista -> ListaSinTipo
Rule 18    variable -> variableConTipo
Rule 19    variable -> variableSinTipo
Rule 20    conjunto -> ConjuntoConTipo
Rule 21    conjunto -> ConjuntoSinTipo
Rule 22    variableConTipo -> valovar VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA
Rule 23    variableConTipo -> valovar VARIABLE DOSPUNTOS INT IGUAL NUMBER
Rule 24    variableConTipo -> valovar VARIABLE DOSPUNTOS BOOLEAN IGUAL
Rule 25    variableSinTipo -> valovar VARIABLE IGUAL datosprimitivos
Rule 26    variableSinTipo -> valovar VARIABLE IGUAL repeOper
Rule 27    ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN
Rule 28    ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN
Rule 29    ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN
Rule 30    ListaSinTipo -> valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN
Rule 31    ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN
Rule 32    ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN
Rule 33    ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN
Rule 34    ConjuntoSinTipo -> valovar VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN
Rule 35    pair -> valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN
Rule 36    datosprimitivos -> NUMBER
Rule 37    datosprimitivos -> STRINGPALABRA
Rule 38    datosprimitivos -> BOOLEANPALABRA
Rule 39    datosprimitivos -> VARIABLE
Rule 40    valovar -> VAR
Rule 41    valovar -> VAL
Rule 42    repeInt -> valor
Rule 43    repeInt -> valor COMA repeInt
Rule 44    valor -> NUMBER
Rule 45    valor -> VARIABLE
Rule 46    repeString -> String
Rule 47    repeString -> String COMA repeString
Rule 48    String -> STRINGPALABRA
Rule 49    String -> VARIABLE
Rule 50    repeBool -> bool
Rule 51    repeBool -> bool COMA repeBool
Rule 52    bool -> BOOLEANPALABRA
Rule 53    bool -> VARIABLE
Rule 54    repeCualquier -> datosprimitivos
Rule 55    repeCualquier -> datosprimitivos COMA repeCualquier
Rule 56    comparacion -> valor operadoresComp valor
Rule 57    operadoresComp -> MAYORQUE
Rule 58    operadoresComp -> DIFERENTE
Rule 59    operadoresComp -> MENORQUE
Rule 60    operadoresComp -> ESIGUAL
Rule 61    tipoDato -> INT
Rule 62    tipoDato -> STRING
Rule 63    tipoDato -> BOOLEAN
Rule 64    argumento -> tipoDato VARIABLE
Rule 65    repeArg -> argumento
Rule 66    repeArg -> argumento COMA repeArg
Rule 67    control -> if
Rule 68    control -> when
Rule 69    control -> for
Rule 70    if -> ifBoolean
Rule 71    if -> ifComparacion
Rule 72    if -> ifVariable
Rule 73    when -> whenVacio
Rule 74    when -> whenVariable
Rule 75    for -> forRango
Rule 76    for -> forVariable
Rule 77    ifBoolean -> IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE
Rule 78    ifComparacion -> IF LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE
Rule 79    ifVariable -> IF LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE
Rule 80    whenVariable -> WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE
Rule 81    whenVacio -> WHEN LLLAVE repetodo RLLAVE
Rule 82    forVariable -> FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE
Rule 83    forRango -> FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE
Rule 84    funcion -> funConSalidaArg
Rule 85    funcion -> funConSalida
Rule 86    funcion -> funSinSalidaArg
Rule 87    funcion -> funSinSalida
Rule 88    funConSalida -> FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
Rule 89    funSinSalida -> FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE
Rule 90    funConSalidaArg -> FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
Rule 91    funSinSalidaArg -> FUN VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE
Rule 92    adicionales -> size
Rule 93    adicionales -> rindex
Rule 94    adicionales -> sublist
Rule 95    adicionales -> contains
Rule 96    size -> VARIABLE PUNTO SIZE
Rule 97    contains -> <empty>
Rule 98    contains -> VARIABLE PUNTO CONTAINS LPAREN datosprimitivos RPAREN
Rule 99    contains -> STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN
Rule 100   contains -> STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE RPAREN
Rule 101   rindex -> STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier RPAREN
Rule 102   rindex -> VARIABLE PUNTO RINDEX LPAREN repeCualquier RPAREN
Rule 103   sublist -> sublistIndex
Rule 104   sublist -> sublistInicio
Rule 105   sublist -> sublistFinal
Rule 106   sublist -> sublistVar
Rule 107   sublistIndex -> VARIABLE LCLASP NUMBER DOSPUNTOS NUMBER RCLASP
Rule 108   sublistInicio -> VARIABLE LCLASP DOSPUNTOS NUMBER RCLASP
Rule 109   sublistFinal -> VARIABLE LCLASP NUMBER DOSPUNTOS RCLASP
Rule 110   sublistVar -> VARIABLE LCLASP VARIABLE RCLASP
Rule 111   readline -> VARIABLE IGUAL READLINE
Rule 112   readline -> valovar VARIABLE IGUAL READLINE
Rule 113   prin -> PRINT LPAREN datosprimitivos RPAREN
Rule 114   prin -> PRINTLN LPAREN datosprimitivos RPAREN
Rule 115   contador -> VARIABLE PLUS PLUS
Rule 116   retor -> RETURN VARIABLE
Rule 117   repeOper -> operacion
Rule 118   repeOper -> operacion repeOper
Rule 119   operacion -> suma
Rule 120   operacion -> resta
Rule 121   operacion -> multiplicacion
Rule 122   operacion -> division
Rule 123   suma -> NUMBER PLUS NUMBER
Rule 124   resta -> NUMBER MINUS NUMBER
Rule 125   multiplicacion -> NUMBER TIMES NUMBER
Rule 126   division -> NUMBER DIVIDE NUMBER

Terminals, with rules where they appear

AND                  : 
BOOLEAN              : 24 29 33 63
BOOLEANPALABRA       : 38 52 77
COMA                 : 35 43 47 51 55 66
CONTAINS             : 98 99 100
DIFERENTE            : 58
DIVIDE               : 126
DOSPUNTOS            : 22 23 24 27 28 29 31 32 33 88 90 107 108 109
ELSE                 : 
ESIGUAL              : 60
FOR                  : 82 83
FUN                  : 88 89 90 91
IF                   : 77 78 79
IGUAL                : 22 23 24 25 26 27 28 29 30 31 32 33 34 35 111 112
IN                   : 82 83
INT                  : 23 27 31 61
LCLASP               : 107 108 109 110
LIST                 : 27 28 29
LISTOF               : 27 28 29 30
LLLAVE               : 77 78 79 80 81 82 83 88 89 90 91
LPAREN               : 27 28 29 30 31 32 33 34 35 77 78 79 80 82 83 88 89 90 91 98 99 100 101 102 113 114
MAYORQUE             : 27 28 29 31 32 33 57
MENORQUE             : 27 28 29 31 32 33 59
MINUS                : 124
MOD                  : 
NUMBER               : 23 36 44 83 83 107 107 108 109 123 123 124 124 125 125 126 126
OR                   : 
PAIR                 : 35
PLUS                 : 115 115 123
PRINT                : 113
PRINTLN              : 114
PUNTO                : 83 83 96 98 99 100 101 102
PUNTOYCOMA           : 
RCLASP               : 107 108 109 110
READLINE             : 111 112
RETURN               : 116
RINDEX               : 101 102
RLLAVE               : 77 78 79 80 81 82 83 88 89 90 91
RPAREN               : 27 28 29 30 31 32 33 34 35 77 78 79 80 82 83 88 89 90 91 98 99 100 101 102 113 114
SALTOLINEA           : 
SET                  : 31 32 33
SETOF                : 31 32 33 34
SIZE                 : 96
STRING               : 22 28 32 62
STRINGPALABRA        : 22 37 48 99 99 100 101
THEN                 : 
TIMES                : 125
VAL                  : 41
VAR                  : 40
VARIABLE             : 22 23 24 25 26 27 28 29 30 31 32 33 34 35 39 45 49 53 64 79 80 82 82 83 88 89 90 91 96 98 100 102 107 108 109 110 110 111 112 115 116
WHEN                 : 80 81
WHILE                : 
error                : 

Nonterminals, with rules where they appear

ConjuntoConTipo      : 20
ConjuntoSinTipo      : 21
ListaConTipo         : 16
ListaSinTipo         : 17
String               : 46 47
adicionales          : 7
argumento            : 65 66
bool                 : 50 51
comparacion          : 78
conjunto             : 4
contador             : 12
contains             : 95
control              : 6
datosprimitivos      : 25 35 35 54 55 98 113 114
division             : 122
for                  : 69
forRango             : 75
forVariable          : 76
funConSalida         : 85
funConSalidaArg      : 84
funSinSalida         : 87
funSinSalidaArg      : 86
funcion              : 8
if                   : 67
ifBoolean            : 70
ifComparacion        : 71
ifVariable           : 72
lista                : 2
multiplicacion       : 121
operacion            : 117 118
operadoresComp       : 56
pair                 : 5
prin                 : 11
readline             : 10
repeArg              : 66 88 89
repeBool             : 29 33 51
repeCualquier        : 30 34 55 101 102
repeInt              : 27 31 43
repeOper             : 26 118
repeString           : 28 32 47
repetodo             : 1 15 77 78 79 80 81 82 83 88 89 90 91
resta                : 120
retor                : 13
rindex               : 93
size                 : 92
sublist              : 9 94
sublistFinal         : 105
sublistIndex         : 103
sublistInicio        : 104
sublistVar           : 106
suma                 : 119
tipoDato             : 64 88 90
todo                 : 14 15
todoConLinea         : 0
valor                : 42 43 56 56
valovar              : 22 23 24 25 26 27 28 29 30 31 32 33 34 35 112
variable             : 3
variableConTipo      : 18
variableSinTipo      : 19
when                 : 68
whenVacio            : 73
whenVariable         : 74

Parsing method: LALR

state 0

    (0) S' -> . todoConLinea
    (1) todoConLinea -> . repetodo
    (14) repetodo -> . todo
    (15) repetodo -> . todo repetodo
    (2) todo -> . lista
    (3) todo -> . variable
    (4) todo -> . conjunto
    (5) todo -> . pair
    (6) todo -> . control
    (7) todo -> . adicionales
    (8) todo -> . funcion
    (9) todo -> . sublist
    (10) todo -> . readline
    (11) todo -> . prin
    (12) todo -> . contador
    (13) todo -> . retor
    (16) lista -> . ListaConTipo
    (17) lista -> . ListaSinTipo
    (18) variable -> . variableConTipo
    (19) variable -> . variableSinTipo
    (20) conjunto -> . ConjuntoConTipo
    (21) conjunto -> . ConjuntoSinTipo
    (35) pair -> . valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN
    (67) control -> . if
    (68) control -> . when
    (69) control -> . for
    (92) adicionales -> . size
    (93) adicionales -> . rindex
    (94) adicionales -> . sublist
    (95) adicionales -> . contains
    (84) funcion -> . funConSalidaArg
    (85) funcion -> . funConSalida
    (86) funcion -> . funSinSalidaArg
    (87) funcion -> . funSinSalida
    (103) sublist -> . sublistIndex
    (104) sublist -> . sublistInicio
    (105) sublist -> . sublistFinal
    (106) sublist -> . sublistVar
    (111) readline -> . VARIABLE IGUAL READLINE
    (112) readline -> . valovar VARIABLE IGUAL READLINE
    (113) prin -> . PRINT LPAREN datosprimitivos RPAREN
    (114) prin -> . PRINTLN LPAREN datosprimitivos RPAREN
    (115) contador -> . VARIABLE PLUS PLUS
    (116) retor -> . RETURN VARIABLE
    (27) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN
    (28) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN
    (29) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN
    (30) ListaSinTipo -> . valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN
    (22) variableConTipo -> . valovar VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA
    (23) variableConTipo -> . valovar VARIABLE DOSPUNTOS INT IGUAL NUMBER
    (24) variableConTipo -> . valovar VARIABLE DOSPUNTOS BOOLEAN IGUAL
    (25) variableSinTipo -> . valovar VARIABLE IGUAL datosprimitivos
    (26) variableSinTipo -> . valovar VARIABLE IGUAL repeOper
    (31) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN
    (32) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN
    (33) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN
    (34) ConjuntoSinTipo -> . valovar VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN
    (40) valovar -> . VAR
    (41) valovar -> . VAL
    (70) if -> . ifBoolean
    (71) if -> . ifComparacion
    (72) if -> . ifVariable
    (73) when -> . whenVacio
    (74) when -> . whenVariable
    (75) for -> . forRango
    (76) for -> . forVariable
    (96) size -> . VARIABLE PUNTO SIZE
    (101) rindex -> . STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier RPAREN
    (102) rindex -> . VARIABLE PUNTO RINDEX LPAREN repeCualquier RPAREN
    (97) contains -> .
    (98) contains -> . VARIABLE PUNTO CONTAINS LPAREN datosprimitivos RPAREN
    (99) contains -> . STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN
    (100) contains -> . STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE RPAREN
    (90) funConSalidaArg -> . FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (88) funConSalida -> . FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (91) funSinSalidaArg -> . FUN VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE
    (89) funSinSalida -> . FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE
    (107) sublistIndex -> . VARIABLE LCLASP NUMBER DOSPUNTOS NUMBER RCLASP
    (108) sublistInicio -> . VARIABLE LCLASP DOSPUNTOS NUMBER RCLASP
    (109) sublistFinal -> . VARIABLE LCLASP NUMBER DOSPUNTOS RCLASP
    (110) sublistVar -> . VARIABLE LCLASP VARIABLE RCLASP
    (77) ifBoolean -> . IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE
    (78) ifComparacion -> . IF LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE
    (79) ifVariable -> . IF LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE
    (81) whenVacio -> . WHEN LLLAVE repetodo RLLAVE
    (80) whenVariable -> . WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE
    (83) forRango -> . FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE
    (82) forVariable -> . FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for STRINGPALABRA resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHEN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    VARIABLE        shift and go to state 23
    PRINT           shift and go to state 38
    PRINTLN         shift and go to state 39
    RETURN          shift and go to state 40
    VAR             shift and go to state 42
    VAL             shift and go to state 43
    STRINGPALABRA   shift and go to state 41
    $end            reduce using rule 97 (contains -> .)
    FUN             shift and go to state 51
    IF              shift and go to state 52
    WHEN            shift and go to state 53
    FOR             shift and go to state 54

  ! VARIABLE        [ reduce using rule 97 (contains -> .) ]
  ! PRINT           [ reduce using rule 97 (contains -> .) ]
  ! PRINTLN         [ reduce using rule 97 (contains -> .) ]
  ! RETURN          [ reduce using rule 97 (contains -> .) ]
  ! VAR             [ reduce using rule 97 (contains -> .) ]
  ! VAL             [ reduce using rule 97 (contains -> .) ]
  ! STRINGPALABRA   [ reduce using rule 97 (contains -> .) ]
  ! FUN             [ reduce using rule 97 (contains -> .) ]
  ! IF              [ reduce using rule 97 (contains -> .) ]
  ! WHEN            [ reduce using rule 97 (contains -> .) ]
  ! FOR             [ reduce using rule 97 (contains -> .) ]

    todoConLinea                   shift and go to state 1
    repetodo                       shift and go to state 2
    todo                           shift and go to state 3
    lista                          shift and go to state 4
    variable                       shift and go to state 5
    conjunto                       shift and go to state 6
    pair                           shift and go to state 7
    control                        shift and go to state 8
    adicionales                    shift and go to state 9
    funcion                        shift and go to state 10
    sublist                        shift and go to state 11
    readline                       shift and go to state 12
    prin                           shift and go to state 13
    contador                       shift and go to state 14
    retor                          shift and go to state 15
    ListaConTipo                   shift and go to state 16
    ListaSinTipo                   shift and go to state 17
    variableConTipo                shift and go to state 18
    variableSinTipo                shift and go to state 19
    ConjuntoConTipo                shift and go to state 20
    ConjuntoSinTipo                shift and go to state 21
    valovar                        shift and go to state 22
    if                             shift and go to state 24
    when                           shift and go to state 25
    for                            shift and go to state 26
    size                           shift and go to state 27
    rindex                         shift and go to state 28
    contains                       shift and go to state 29
    funConSalidaArg                shift and go to state 30
    funConSalida                   shift and go to state 31
    funSinSalidaArg                shift and go to state 32
    funSinSalida                   shift and go to state 33
    sublistIndex                   shift and go to state 34
    sublistInicio                  shift and go to state 35
    sublistFinal                   shift and go to state 36
    sublistVar                     shift and go to state 37
    ifBoolean                      shift and go to state 44
    ifComparacion                  shift and go to state 45
    ifVariable                     shift and go to state 46
    whenVacio                      shift and go to state 47
    whenVariable                   shift and go to state 48
    forRango                       shift and go to state 49
    forVariable                    shift and go to state 50

state 1

    (0) S' -> todoConLinea .



state 2

    (1) todoConLinea -> repetodo .

    $end            reduce using rule 1 (todoConLinea -> repetodo .)


state 3

    (14) repetodo -> todo .
    (15) repetodo -> todo . repetodo
    (14) repetodo -> . todo
    (15) repetodo -> . todo repetodo
    (2) todo -> . lista
    (3) todo -> . variable
    (4) todo -> . conjunto
    (5) todo -> . pair
    (6) todo -> . control
    (7) todo -> . adicionales
    (8) todo -> . funcion
    (9) todo -> . sublist
    (10) todo -> . readline
    (11) todo -> . prin
    (12) todo -> . contador
    (13) todo -> . retor
    (16) lista -> . ListaConTipo
    (17) lista -> . ListaSinTipo
    (18) variable -> . variableConTipo
    (19) variable -> . variableSinTipo
    (20) conjunto -> . ConjuntoConTipo
    (21) conjunto -> . ConjuntoSinTipo
    (35) pair -> . valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN
    (67) control -> . if
    (68) control -> . when
    (69) control -> . for
    (92) adicionales -> . size
    (93) adicionales -> . rindex
    (94) adicionales -> . sublist
    (95) adicionales -> . contains
    (84) funcion -> . funConSalidaArg
    (85) funcion -> . funConSalida
    (86) funcion -> . funSinSalidaArg
    (87) funcion -> . funSinSalida
    (103) sublist -> . sublistIndex
    (104) sublist -> . sublistInicio
    (105) sublist -> . sublistFinal
    (106) sublist -> . sublistVar
    (111) readline -> . VARIABLE IGUAL READLINE
    (112) readline -> . valovar VARIABLE IGUAL READLINE
    (113) prin -> . PRINT LPAREN datosprimitivos RPAREN
    (114) prin -> . PRINTLN LPAREN datosprimitivos RPAREN
    (115) contador -> . VARIABLE PLUS PLUS
    (116) retor -> . RETURN VARIABLE
    (27) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN
    (28) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN
    (29) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN
    (30) ListaSinTipo -> . valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN
    (22) variableConTipo -> . valovar VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA
    (23) variableConTipo -> . valovar VARIABLE DOSPUNTOS INT IGUAL NUMBER
    (24) variableConTipo -> . valovar VARIABLE DOSPUNTOS BOOLEAN IGUAL
    (25) variableSinTipo -> . valovar VARIABLE IGUAL datosprimitivos
    (26) variableSinTipo -> . valovar VARIABLE IGUAL repeOper
    (31) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN
    (32) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN
    (33) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN
    (34) ConjuntoSinTipo -> . valovar VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN
    (40) valovar -> . VAR
    (41) valovar -> . VAL
    (70) if -> . ifBoolean
    (71) if -> . ifComparacion
    (72) if -> . ifVariable
    (73) when -> . whenVacio
    (74) when -> . whenVariable
    (75) for -> . forRango
    (76) for -> . forVariable
    (96) size -> . VARIABLE PUNTO SIZE
    (101) rindex -> . STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier RPAREN
    (102) rindex -> . VARIABLE PUNTO RINDEX LPAREN repeCualquier RPAREN
    (97) contains -> .
    (98) contains -> . VARIABLE PUNTO CONTAINS LPAREN datosprimitivos RPAREN
    (99) contains -> . STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN
    (100) contains -> . STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE RPAREN
    (90) funConSalidaArg -> . FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (88) funConSalida -> . FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (91) funSinSalidaArg -> . FUN VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE
    (89) funSinSalida -> . FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE
    (107) sublistIndex -> . VARIABLE LCLASP NUMBER DOSPUNTOS NUMBER RCLASP
    (108) sublistInicio -> . VARIABLE LCLASP DOSPUNTOS NUMBER RCLASP
    (109) sublistFinal -> . VARIABLE LCLASP NUMBER DOSPUNTOS RCLASP
    (110) sublistVar -> . VARIABLE LCLASP VARIABLE RCLASP
    (77) ifBoolean -> . IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE
    (78) ifComparacion -> . IF LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE
    (79) ifVariable -> . IF LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE
    (81) whenVacio -> . WHEN LLLAVE repetodo RLLAVE
    (80) whenVariable -> . WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE
    (83) forRango -> . FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE
    (82) forVariable -> . FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for STRINGPALABRA resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 14 (repetodo -> todo .)
  ! reduce/reduce conflict for RLLAVE resolved using rule 14 (repetodo -> todo .)
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHEN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    $end            reduce using rule 14 (repetodo -> todo .)
    RLLAVE          reduce using rule 14 (repetodo -> todo .)
    VARIABLE        shift and go to state 23
    PRINT           shift and go to state 38
    PRINTLN         shift and go to state 39
    RETURN          shift and go to state 40
    VAR             shift and go to state 42
    VAL             shift and go to state 43
    STRINGPALABRA   shift and go to state 41
    FUN             shift and go to state 51
    IF              shift and go to state 52
    WHEN            shift and go to state 53
    FOR             shift and go to state 54

  ! VARIABLE        [ reduce using rule 97 (contains -> .) ]
  ! PRINT           [ reduce using rule 97 (contains -> .) ]
  ! PRINTLN         [ reduce using rule 97 (contains -> .) ]
  ! RETURN          [ reduce using rule 97 (contains -> .) ]
  ! VAR             [ reduce using rule 97 (contains -> .) ]
  ! VAL             [ reduce using rule 97 (contains -> .) ]
  ! STRINGPALABRA   [ reduce using rule 97 (contains -> .) ]
  ! FUN             [ reduce using rule 97 (contains -> .) ]
  ! IF              [ reduce using rule 97 (contains -> .) ]
  ! WHEN            [ reduce using rule 97 (contains -> .) ]
  ! FOR             [ reduce using rule 97 (contains -> .) ]
  ! $end            [ reduce using rule 97 (contains -> .) ]
  ! RLLAVE          [ reduce using rule 97 (contains -> .) ]

    todo                           shift and go to state 3
    repetodo                       shift and go to state 55
    lista                          shift and go to state 4
    variable                       shift and go to state 5
    conjunto                       shift and go to state 6
    pair                           shift and go to state 7
    control                        shift and go to state 8
    adicionales                    shift and go to state 9
    funcion                        shift and go to state 10
    sublist                        shift and go to state 11
    readline                       shift and go to state 12
    prin                           shift and go to state 13
    contador                       shift and go to state 14
    retor                          shift and go to state 15
    ListaConTipo                   shift and go to state 16
    ListaSinTipo                   shift and go to state 17
    variableConTipo                shift and go to state 18
    variableSinTipo                shift and go to state 19
    ConjuntoConTipo                shift and go to state 20
    ConjuntoSinTipo                shift and go to state 21
    valovar                        shift and go to state 22
    if                             shift and go to state 24
    when                           shift and go to state 25
    for                            shift and go to state 26
    size                           shift and go to state 27
    rindex                         shift and go to state 28
    contains                       shift and go to state 29
    funConSalidaArg                shift and go to state 30
    funConSalida                   shift and go to state 31
    funSinSalidaArg                shift and go to state 32
    funSinSalida                   shift and go to state 33
    sublistIndex                   shift and go to state 34
    sublistInicio                  shift and go to state 35
    sublistFinal                   shift and go to state 36
    sublistVar                     shift and go to state 37
    ifBoolean                      shift and go to state 44
    ifComparacion                  shift and go to state 45
    ifVariable                     shift and go to state 46
    whenVacio                      shift and go to state 47
    whenVariable                   shift and go to state 48
    forRango                       shift and go to state 49
    forVariable                    shift and go to state 50

state 4

    (2) todo -> lista .

    VARIABLE        reduce using rule 2 (todo -> lista .)
    PRINT           reduce using rule 2 (todo -> lista .)
    PRINTLN         reduce using rule 2 (todo -> lista .)
    RETURN          reduce using rule 2 (todo -> lista .)
    VAR             reduce using rule 2 (todo -> lista .)
    VAL             reduce using rule 2 (todo -> lista .)
    STRINGPALABRA   reduce using rule 2 (todo -> lista .)
    FUN             reduce using rule 2 (todo -> lista .)
    IF              reduce using rule 2 (todo -> lista .)
    WHEN            reduce using rule 2 (todo -> lista .)
    FOR             reduce using rule 2 (todo -> lista .)
    $end            reduce using rule 2 (todo -> lista .)
    RLLAVE          reduce using rule 2 (todo -> lista .)


state 5

    (3) todo -> variable .

    VARIABLE        reduce using rule 3 (todo -> variable .)
    PRINT           reduce using rule 3 (todo -> variable .)
    PRINTLN         reduce using rule 3 (todo -> variable .)
    RETURN          reduce using rule 3 (todo -> variable .)
    VAR             reduce using rule 3 (todo -> variable .)
    VAL             reduce using rule 3 (todo -> variable .)
    STRINGPALABRA   reduce using rule 3 (todo -> variable .)
    FUN             reduce using rule 3 (todo -> variable .)
    IF              reduce using rule 3 (todo -> variable .)
    WHEN            reduce using rule 3 (todo -> variable .)
    FOR             reduce using rule 3 (todo -> variable .)
    $end            reduce using rule 3 (todo -> variable .)
    RLLAVE          reduce using rule 3 (todo -> variable .)


state 6

    (4) todo -> conjunto .

    VARIABLE        reduce using rule 4 (todo -> conjunto .)
    PRINT           reduce using rule 4 (todo -> conjunto .)
    PRINTLN         reduce using rule 4 (todo -> conjunto .)
    RETURN          reduce using rule 4 (todo -> conjunto .)
    VAR             reduce using rule 4 (todo -> conjunto .)
    VAL             reduce using rule 4 (todo -> conjunto .)
    STRINGPALABRA   reduce using rule 4 (todo -> conjunto .)
    FUN             reduce using rule 4 (todo -> conjunto .)
    IF              reduce using rule 4 (todo -> conjunto .)
    WHEN            reduce using rule 4 (todo -> conjunto .)
    FOR             reduce using rule 4 (todo -> conjunto .)
    $end            reduce using rule 4 (todo -> conjunto .)
    RLLAVE          reduce using rule 4 (todo -> conjunto .)


state 7

    (5) todo -> pair .

    VARIABLE        reduce using rule 5 (todo -> pair .)
    PRINT           reduce using rule 5 (todo -> pair .)
    PRINTLN         reduce using rule 5 (todo -> pair .)
    RETURN          reduce using rule 5 (todo -> pair .)
    VAR             reduce using rule 5 (todo -> pair .)
    VAL             reduce using rule 5 (todo -> pair .)
    STRINGPALABRA   reduce using rule 5 (todo -> pair .)
    FUN             reduce using rule 5 (todo -> pair .)
    IF              reduce using rule 5 (todo -> pair .)
    WHEN            reduce using rule 5 (todo -> pair .)
    FOR             reduce using rule 5 (todo -> pair .)
    $end            reduce using rule 5 (todo -> pair .)
    RLLAVE          reduce using rule 5 (todo -> pair .)


state 8

    (6) todo -> control .

    VARIABLE        reduce using rule 6 (todo -> control .)
    PRINT           reduce using rule 6 (todo -> control .)
    PRINTLN         reduce using rule 6 (todo -> control .)
    RETURN          reduce using rule 6 (todo -> control .)
    VAR             reduce using rule 6 (todo -> control .)
    VAL             reduce using rule 6 (todo -> control .)
    STRINGPALABRA   reduce using rule 6 (todo -> control .)
    FUN             reduce using rule 6 (todo -> control .)
    IF              reduce using rule 6 (todo -> control .)
    WHEN            reduce using rule 6 (todo -> control .)
    FOR             reduce using rule 6 (todo -> control .)
    $end            reduce using rule 6 (todo -> control .)
    RLLAVE          reduce using rule 6 (todo -> control .)


state 9

    (7) todo -> adicionales .

    VARIABLE        reduce using rule 7 (todo -> adicionales .)
    PRINT           reduce using rule 7 (todo -> adicionales .)
    PRINTLN         reduce using rule 7 (todo -> adicionales .)
    RETURN          reduce using rule 7 (todo -> adicionales .)
    VAR             reduce using rule 7 (todo -> adicionales .)
    VAL             reduce using rule 7 (todo -> adicionales .)
    STRINGPALABRA   reduce using rule 7 (todo -> adicionales .)
    FUN             reduce using rule 7 (todo -> adicionales .)
    IF              reduce using rule 7 (todo -> adicionales .)
    WHEN            reduce using rule 7 (todo -> adicionales .)
    FOR             reduce using rule 7 (todo -> adicionales .)
    $end            reduce using rule 7 (todo -> adicionales .)
    RLLAVE          reduce using rule 7 (todo -> adicionales .)


state 10

    (8) todo -> funcion .

    VARIABLE        reduce using rule 8 (todo -> funcion .)
    PRINT           reduce using rule 8 (todo -> funcion .)
    PRINTLN         reduce using rule 8 (todo -> funcion .)
    RETURN          reduce using rule 8 (todo -> funcion .)
    VAR             reduce using rule 8 (todo -> funcion .)
    VAL             reduce using rule 8 (todo -> funcion .)
    STRINGPALABRA   reduce using rule 8 (todo -> funcion .)
    FUN             reduce using rule 8 (todo -> funcion .)
    IF              reduce using rule 8 (todo -> funcion .)
    WHEN            reduce using rule 8 (todo -> funcion .)
    FOR             reduce using rule 8 (todo -> funcion .)
    $end            reduce using rule 8 (todo -> funcion .)
    RLLAVE          reduce using rule 8 (todo -> funcion .)


state 11

    (9) todo -> sublist .
    (94) adicionales -> sublist .

  ! reduce/reduce conflict for VARIABLE resolved using rule 9 (todo -> sublist .)
  ! reduce/reduce conflict for PRINT resolved using rule 9 (todo -> sublist .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 9 (todo -> sublist .)
  ! reduce/reduce conflict for RETURN resolved using rule 9 (todo -> sublist .)
  ! reduce/reduce conflict for VAR resolved using rule 9 (todo -> sublist .)
  ! reduce/reduce conflict for VAL resolved using rule 9 (todo -> sublist .)
  ! reduce/reduce conflict for STRINGPALABRA resolved using rule 9 (todo -> sublist .)
  ! reduce/reduce conflict for FUN resolved using rule 9 (todo -> sublist .)
  ! reduce/reduce conflict for IF resolved using rule 9 (todo -> sublist .)
  ! reduce/reduce conflict for WHEN resolved using rule 9 (todo -> sublist .)
  ! reduce/reduce conflict for FOR resolved using rule 9 (todo -> sublist .)
  ! reduce/reduce conflict for $end resolved using rule 9 (todo -> sublist .)
  ! reduce/reduce conflict for RLLAVE resolved using rule 9 (todo -> sublist .)
    VARIABLE        reduce using rule 9 (todo -> sublist .)
    PRINT           reduce using rule 9 (todo -> sublist .)
    PRINTLN         reduce using rule 9 (todo -> sublist .)
    RETURN          reduce using rule 9 (todo -> sublist .)
    VAR             reduce using rule 9 (todo -> sublist .)
    VAL             reduce using rule 9 (todo -> sublist .)
    STRINGPALABRA   reduce using rule 9 (todo -> sublist .)
    FUN             reduce using rule 9 (todo -> sublist .)
    IF              reduce using rule 9 (todo -> sublist .)
    WHEN            reduce using rule 9 (todo -> sublist .)
    FOR             reduce using rule 9 (todo -> sublist .)
    $end            reduce using rule 9 (todo -> sublist .)
    RLLAVE          reduce using rule 9 (todo -> sublist .)

  ! VARIABLE        [ reduce using rule 94 (adicionales -> sublist .) ]
  ! PRINT           [ reduce using rule 94 (adicionales -> sublist .) ]
  ! PRINTLN         [ reduce using rule 94 (adicionales -> sublist .) ]
  ! RETURN          [ reduce using rule 94 (adicionales -> sublist .) ]
  ! VAR             [ reduce using rule 94 (adicionales -> sublist .) ]
  ! VAL             [ reduce using rule 94 (adicionales -> sublist .) ]
  ! STRINGPALABRA   [ reduce using rule 94 (adicionales -> sublist .) ]
  ! FUN             [ reduce using rule 94 (adicionales -> sublist .) ]
  ! IF              [ reduce using rule 94 (adicionales -> sublist .) ]
  ! WHEN            [ reduce using rule 94 (adicionales -> sublist .) ]
  ! FOR             [ reduce using rule 94 (adicionales -> sublist .) ]
  ! $end            [ reduce using rule 94 (adicionales -> sublist .) ]
  ! RLLAVE          [ reduce using rule 94 (adicionales -> sublist .) ]


state 12

    (10) todo -> readline .

    VARIABLE        reduce using rule 10 (todo -> readline .)
    PRINT           reduce using rule 10 (todo -> readline .)
    PRINTLN         reduce using rule 10 (todo -> readline .)
    RETURN          reduce using rule 10 (todo -> readline .)
    VAR             reduce using rule 10 (todo -> readline .)
    VAL             reduce using rule 10 (todo -> readline .)
    STRINGPALABRA   reduce using rule 10 (todo -> readline .)
    FUN             reduce using rule 10 (todo -> readline .)
    IF              reduce using rule 10 (todo -> readline .)
    WHEN            reduce using rule 10 (todo -> readline .)
    FOR             reduce using rule 10 (todo -> readline .)
    $end            reduce using rule 10 (todo -> readline .)
    RLLAVE          reduce using rule 10 (todo -> readline .)


state 13

    (11) todo -> prin .

    VARIABLE        reduce using rule 11 (todo -> prin .)
    PRINT           reduce using rule 11 (todo -> prin .)
    PRINTLN         reduce using rule 11 (todo -> prin .)
    RETURN          reduce using rule 11 (todo -> prin .)
    VAR             reduce using rule 11 (todo -> prin .)
    VAL             reduce using rule 11 (todo -> prin .)
    STRINGPALABRA   reduce using rule 11 (todo -> prin .)
    FUN             reduce using rule 11 (todo -> prin .)
    IF              reduce using rule 11 (todo -> prin .)
    WHEN            reduce using rule 11 (todo -> prin .)
    FOR             reduce using rule 11 (todo -> prin .)
    $end            reduce using rule 11 (todo -> prin .)
    RLLAVE          reduce using rule 11 (todo -> prin .)


state 14

    (12) todo -> contador .

    VARIABLE        reduce using rule 12 (todo -> contador .)
    PRINT           reduce using rule 12 (todo -> contador .)
    PRINTLN         reduce using rule 12 (todo -> contador .)
    RETURN          reduce using rule 12 (todo -> contador .)
    VAR             reduce using rule 12 (todo -> contador .)
    VAL             reduce using rule 12 (todo -> contador .)
    STRINGPALABRA   reduce using rule 12 (todo -> contador .)
    FUN             reduce using rule 12 (todo -> contador .)
    IF              reduce using rule 12 (todo -> contador .)
    WHEN            reduce using rule 12 (todo -> contador .)
    FOR             reduce using rule 12 (todo -> contador .)
    $end            reduce using rule 12 (todo -> contador .)
    RLLAVE          reduce using rule 12 (todo -> contador .)


state 15

    (13) todo -> retor .

    VARIABLE        reduce using rule 13 (todo -> retor .)
    PRINT           reduce using rule 13 (todo -> retor .)
    PRINTLN         reduce using rule 13 (todo -> retor .)
    RETURN          reduce using rule 13 (todo -> retor .)
    VAR             reduce using rule 13 (todo -> retor .)
    VAL             reduce using rule 13 (todo -> retor .)
    STRINGPALABRA   reduce using rule 13 (todo -> retor .)
    FUN             reduce using rule 13 (todo -> retor .)
    IF              reduce using rule 13 (todo -> retor .)
    WHEN            reduce using rule 13 (todo -> retor .)
    FOR             reduce using rule 13 (todo -> retor .)
    $end            reduce using rule 13 (todo -> retor .)
    RLLAVE          reduce using rule 13 (todo -> retor .)


state 16

    (16) lista -> ListaConTipo .

    VARIABLE        reduce using rule 16 (lista -> ListaConTipo .)
    PRINT           reduce using rule 16 (lista -> ListaConTipo .)
    PRINTLN         reduce using rule 16 (lista -> ListaConTipo .)
    RETURN          reduce using rule 16 (lista -> ListaConTipo .)
    VAR             reduce using rule 16 (lista -> ListaConTipo .)
    VAL             reduce using rule 16 (lista -> ListaConTipo .)
    STRINGPALABRA   reduce using rule 16 (lista -> ListaConTipo .)
    FUN             reduce using rule 16 (lista -> ListaConTipo .)
    IF              reduce using rule 16 (lista -> ListaConTipo .)
    WHEN            reduce using rule 16 (lista -> ListaConTipo .)
    FOR             reduce using rule 16 (lista -> ListaConTipo .)
    $end            reduce using rule 16 (lista -> ListaConTipo .)
    RLLAVE          reduce using rule 16 (lista -> ListaConTipo .)


state 17

    (17) lista -> ListaSinTipo .

    VARIABLE        reduce using rule 17 (lista -> ListaSinTipo .)
    PRINT           reduce using rule 17 (lista -> ListaSinTipo .)
    PRINTLN         reduce using rule 17 (lista -> ListaSinTipo .)
    RETURN          reduce using rule 17 (lista -> ListaSinTipo .)
    VAR             reduce using rule 17 (lista -> ListaSinTipo .)
    VAL             reduce using rule 17 (lista -> ListaSinTipo .)
    STRINGPALABRA   reduce using rule 17 (lista -> ListaSinTipo .)
    FUN             reduce using rule 17 (lista -> ListaSinTipo .)
    IF              reduce using rule 17 (lista -> ListaSinTipo .)
    WHEN            reduce using rule 17 (lista -> ListaSinTipo .)
    FOR             reduce using rule 17 (lista -> ListaSinTipo .)
    $end            reduce using rule 17 (lista -> ListaSinTipo .)
    RLLAVE          reduce using rule 17 (lista -> ListaSinTipo .)


state 18

    (18) variable -> variableConTipo .

    VARIABLE        reduce using rule 18 (variable -> variableConTipo .)
    PRINT           reduce using rule 18 (variable -> variableConTipo .)
    PRINTLN         reduce using rule 18 (variable -> variableConTipo .)
    RETURN          reduce using rule 18 (variable -> variableConTipo .)
    VAR             reduce using rule 18 (variable -> variableConTipo .)
    VAL             reduce using rule 18 (variable -> variableConTipo .)
    STRINGPALABRA   reduce using rule 18 (variable -> variableConTipo .)
    FUN             reduce using rule 18 (variable -> variableConTipo .)
    IF              reduce using rule 18 (variable -> variableConTipo .)
    WHEN            reduce using rule 18 (variable -> variableConTipo .)
    FOR             reduce using rule 18 (variable -> variableConTipo .)
    $end            reduce using rule 18 (variable -> variableConTipo .)
    RLLAVE          reduce using rule 18 (variable -> variableConTipo .)


state 19

    (19) variable -> variableSinTipo .

    VARIABLE        reduce using rule 19 (variable -> variableSinTipo .)
    PRINT           reduce using rule 19 (variable -> variableSinTipo .)
    PRINTLN         reduce using rule 19 (variable -> variableSinTipo .)
    RETURN          reduce using rule 19 (variable -> variableSinTipo .)
    VAR             reduce using rule 19 (variable -> variableSinTipo .)
    VAL             reduce using rule 19 (variable -> variableSinTipo .)
    STRINGPALABRA   reduce using rule 19 (variable -> variableSinTipo .)
    FUN             reduce using rule 19 (variable -> variableSinTipo .)
    IF              reduce using rule 19 (variable -> variableSinTipo .)
    WHEN            reduce using rule 19 (variable -> variableSinTipo .)
    FOR             reduce using rule 19 (variable -> variableSinTipo .)
    $end            reduce using rule 19 (variable -> variableSinTipo .)
    RLLAVE          reduce using rule 19 (variable -> variableSinTipo .)


state 20

    (20) conjunto -> ConjuntoConTipo .

    VARIABLE        reduce using rule 20 (conjunto -> ConjuntoConTipo .)
    PRINT           reduce using rule 20 (conjunto -> ConjuntoConTipo .)
    PRINTLN         reduce using rule 20 (conjunto -> ConjuntoConTipo .)
    RETURN          reduce using rule 20 (conjunto -> ConjuntoConTipo .)
    VAR             reduce using rule 20 (conjunto -> ConjuntoConTipo .)
    VAL             reduce using rule 20 (conjunto -> ConjuntoConTipo .)
    STRINGPALABRA   reduce using rule 20 (conjunto -> ConjuntoConTipo .)
    FUN             reduce using rule 20 (conjunto -> ConjuntoConTipo .)
    IF              reduce using rule 20 (conjunto -> ConjuntoConTipo .)
    WHEN            reduce using rule 20 (conjunto -> ConjuntoConTipo .)
    FOR             reduce using rule 20 (conjunto -> ConjuntoConTipo .)
    $end            reduce using rule 20 (conjunto -> ConjuntoConTipo .)
    RLLAVE          reduce using rule 20 (conjunto -> ConjuntoConTipo .)


state 21

    (21) conjunto -> ConjuntoSinTipo .

    VARIABLE        reduce using rule 21 (conjunto -> ConjuntoSinTipo .)
    PRINT           reduce using rule 21 (conjunto -> ConjuntoSinTipo .)
    PRINTLN         reduce using rule 21 (conjunto -> ConjuntoSinTipo .)
    RETURN          reduce using rule 21 (conjunto -> ConjuntoSinTipo .)
    VAR             reduce using rule 21 (conjunto -> ConjuntoSinTipo .)
    VAL             reduce using rule 21 (conjunto -> ConjuntoSinTipo .)
    STRINGPALABRA   reduce using rule 21 (conjunto -> ConjuntoSinTipo .)
    FUN             reduce using rule 21 (conjunto -> ConjuntoSinTipo .)
    IF              reduce using rule 21 (conjunto -> ConjuntoSinTipo .)
    WHEN            reduce using rule 21 (conjunto -> ConjuntoSinTipo .)
    FOR             reduce using rule 21 (conjunto -> ConjuntoSinTipo .)
    $end            reduce using rule 21 (conjunto -> ConjuntoSinTipo .)
    RLLAVE          reduce using rule 21 (conjunto -> ConjuntoSinTipo .)


state 22

    (35) pair -> valovar . VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN
    (112) readline -> valovar . VARIABLE IGUAL READLINE
    (27) ListaConTipo -> valovar . VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN
    (28) ListaConTipo -> valovar . VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN
    (29) ListaConTipo -> valovar . VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN
    (30) ListaSinTipo -> valovar . VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN
    (22) variableConTipo -> valovar . VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA
    (23) variableConTipo -> valovar . VARIABLE DOSPUNTOS INT IGUAL NUMBER
    (24) variableConTipo -> valovar . VARIABLE DOSPUNTOS BOOLEAN IGUAL
    (25) variableSinTipo -> valovar . VARIABLE IGUAL datosprimitivos
    (26) variableSinTipo -> valovar . VARIABLE IGUAL repeOper
    (31) ConjuntoConTipo -> valovar . VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN
    (32) ConjuntoConTipo -> valovar . VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN
    (33) ConjuntoConTipo -> valovar . VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN
    (34) ConjuntoSinTipo -> valovar . VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN

    VARIABLE        shift and go to state 56


state 23

    (111) readline -> VARIABLE . IGUAL READLINE
    (115) contador -> VARIABLE . PLUS PLUS
    (96) size -> VARIABLE . PUNTO SIZE
    (102) rindex -> VARIABLE . PUNTO RINDEX LPAREN repeCualquier RPAREN
    (98) contains -> VARIABLE . PUNTO CONTAINS LPAREN datosprimitivos RPAREN
    (107) sublistIndex -> VARIABLE . LCLASP NUMBER DOSPUNTOS NUMBER RCLASP
    (108) sublistInicio -> VARIABLE . LCLASP DOSPUNTOS NUMBER RCLASP
    (109) sublistFinal -> VARIABLE . LCLASP NUMBER DOSPUNTOS RCLASP
    (110) sublistVar -> VARIABLE . LCLASP VARIABLE RCLASP

    IGUAL           shift and go to state 57
    PLUS            shift and go to state 58
    PUNTO           shift and go to state 59
    LCLASP          shift and go to state 60


state 24

    (67) control -> if .

    VARIABLE        reduce using rule 67 (control -> if .)
    PRINT           reduce using rule 67 (control -> if .)
    PRINTLN         reduce using rule 67 (control -> if .)
    RETURN          reduce using rule 67 (control -> if .)
    VAR             reduce using rule 67 (control -> if .)
    VAL             reduce using rule 67 (control -> if .)
    STRINGPALABRA   reduce using rule 67 (control -> if .)
    FUN             reduce using rule 67 (control -> if .)
    IF              reduce using rule 67 (control -> if .)
    WHEN            reduce using rule 67 (control -> if .)
    FOR             reduce using rule 67 (control -> if .)
    $end            reduce using rule 67 (control -> if .)
    RLLAVE          reduce using rule 67 (control -> if .)


state 25

    (68) control -> when .

    VARIABLE        reduce using rule 68 (control -> when .)
    PRINT           reduce using rule 68 (control -> when .)
    PRINTLN         reduce using rule 68 (control -> when .)
    RETURN          reduce using rule 68 (control -> when .)
    VAR             reduce using rule 68 (control -> when .)
    VAL             reduce using rule 68 (control -> when .)
    STRINGPALABRA   reduce using rule 68 (control -> when .)
    FUN             reduce using rule 68 (control -> when .)
    IF              reduce using rule 68 (control -> when .)
    WHEN            reduce using rule 68 (control -> when .)
    FOR             reduce using rule 68 (control -> when .)
    $end            reduce using rule 68 (control -> when .)
    RLLAVE          reduce using rule 68 (control -> when .)


state 26

    (69) control -> for .

    VARIABLE        reduce using rule 69 (control -> for .)
    PRINT           reduce using rule 69 (control -> for .)
    PRINTLN         reduce using rule 69 (control -> for .)
    RETURN          reduce using rule 69 (control -> for .)
    VAR             reduce using rule 69 (control -> for .)
    VAL             reduce using rule 69 (control -> for .)
    STRINGPALABRA   reduce using rule 69 (control -> for .)
    FUN             reduce using rule 69 (control -> for .)
    IF              reduce using rule 69 (control -> for .)
    WHEN            reduce using rule 69 (control -> for .)
    FOR             reduce using rule 69 (control -> for .)
    $end            reduce using rule 69 (control -> for .)
    RLLAVE          reduce using rule 69 (control -> for .)


state 27

    (92) adicionales -> size .

    VARIABLE        reduce using rule 92 (adicionales -> size .)
    PRINT           reduce using rule 92 (adicionales -> size .)
    PRINTLN         reduce using rule 92 (adicionales -> size .)
    RETURN          reduce using rule 92 (adicionales -> size .)
    VAR             reduce using rule 92 (adicionales -> size .)
    VAL             reduce using rule 92 (adicionales -> size .)
    STRINGPALABRA   reduce using rule 92 (adicionales -> size .)
    FUN             reduce using rule 92 (adicionales -> size .)
    IF              reduce using rule 92 (adicionales -> size .)
    WHEN            reduce using rule 92 (adicionales -> size .)
    FOR             reduce using rule 92 (adicionales -> size .)
    $end            reduce using rule 92 (adicionales -> size .)
    RLLAVE          reduce using rule 92 (adicionales -> size .)


state 28

    (93) adicionales -> rindex .

    VARIABLE        reduce using rule 93 (adicionales -> rindex .)
    PRINT           reduce using rule 93 (adicionales -> rindex .)
    PRINTLN         reduce using rule 93 (adicionales -> rindex .)
    RETURN          reduce using rule 93 (adicionales -> rindex .)
    VAR             reduce using rule 93 (adicionales -> rindex .)
    VAL             reduce using rule 93 (adicionales -> rindex .)
    STRINGPALABRA   reduce using rule 93 (adicionales -> rindex .)
    FUN             reduce using rule 93 (adicionales -> rindex .)
    IF              reduce using rule 93 (adicionales -> rindex .)
    WHEN            reduce using rule 93 (adicionales -> rindex .)
    FOR             reduce using rule 93 (adicionales -> rindex .)
    $end            reduce using rule 93 (adicionales -> rindex .)
    RLLAVE          reduce using rule 93 (adicionales -> rindex .)


state 29

    (95) adicionales -> contains .

    VARIABLE        reduce using rule 95 (adicionales -> contains .)
    PRINT           reduce using rule 95 (adicionales -> contains .)
    PRINTLN         reduce using rule 95 (adicionales -> contains .)
    RETURN          reduce using rule 95 (adicionales -> contains .)
    VAR             reduce using rule 95 (adicionales -> contains .)
    VAL             reduce using rule 95 (adicionales -> contains .)
    STRINGPALABRA   reduce using rule 95 (adicionales -> contains .)
    FUN             reduce using rule 95 (adicionales -> contains .)
    IF              reduce using rule 95 (adicionales -> contains .)
    WHEN            reduce using rule 95 (adicionales -> contains .)
    FOR             reduce using rule 95 (adicionales -> contains .)
    $end            reduce using rule 95 (adicionales -> contains .)
    RLLAVE          reduce using rule 95 (adicionales -> contains .)


state 30

    (84) funcion -> funConSalidaArg .

    VARIABLE        reduce using rule 84 (funcion -> funConSalidaArg .)
    PRINT           reduce using rule 84 (funcion -> funConSalidaArg .)
    PRINTLN         reduce using rule 84 (funcion -> funConSalidaArg .)
    RETURN          reduce using rule 84 (funcion -> funConSalidaArg .)
    VAR             reduce using rule 84 (funcion -> funConSalidaArg .)
    VAL             reduce using rule 84 (funcion -> funConSalidaArg .)
    STRINGPALABRA   reduce using rule 84 (funcion -> funConSalidaArg .)
    FUN             reduce using rule 84 (funcion -> funConSalidaArg .)
    IF              reduce using rule 84 (funcion -> funConSalidaArg .)
    WHEN            reduce using rule 84 (funcion -> funConSalidaArg .)
    FOR             reduce using rule 84 (funcion -> funConSalidaArg .)
    $end            reduce using rule 84 (funcion -> funConSalidaArg .)
    RLLAVE          reduce using rule 84 (funcion -> funConSalidaArg .)


state 31

    (85) funcion -> funConSalida .

    VARIABLE        reduce using rule 85 (funcion -> funConSalida .)
    PRINT           reduce using rule 85 (funcion -> funConSalida .)
    PRINTLN         reduce using rule 85 (funcion -> funConSalida .)
    RETURN          reduce using rule 85 (funcion -> funConSalida .)
    VAR             reduce using rule 85 (funcion -> funConSalida .)
    VAL             reduce using rule 85 (funcion -> funConSalida .)
    STRINGPALABRA   reduce using rule 85 (funcion -> funConSalida .)
    FUN             reduce using rule 85 (funcion -> funConSalida .)
    IF              reduce using rule 85 (funcion -> funConSalida .)
    WHEN            reduce using rule 85 (funcion -> funConSalida .)
    FOR             reduce using rule 85 (funcion -> funConSalida .)
    $end            reduce using rule 85 (funcion -> funConSalida .)
    RLLAVE          reduce using rule 85 (funcion -> funConSalida .)


state 32

    (86) funcion -> funSinSalidaArg .

    VARIABLE        reduce using rule 86 (funcion -> funSinSalidaArg .)
    PRINT           reduce using rule 86 (funcion -> funSinSalidaArg .)
    PRINTLN         reduce using rule 86 (funcion -> funSinSalidaArg .)
    RETURN          reduce using rule 86 (funcion -> funSinSalidaArg .)
    VAR             reduce using rule 86 (funcion -> funSinSalidaArg .)
    VAL             reduce using rule 86 (funcion -> funSinSalidaArg .)
    STRINGPALABRA   reduce using rule 86 (funcion -> funSinSalidaArg .)
    FUN             reduce using rule 86 (funcion -> funSinSalidaArg .)
    IF              reduce using rule 86 (funcion -> funSinSalidaArg .)
    WHEN            reduce using rule 86 (funcion -> funSinSalidaArg .)
    FOR             reduce using rule 86 (funcion -> funSinSalidaArg .)
    $end            reduce using rule 86 (funcion -> funSinSalidaArg .)
    RLLAVE          reduce using rule 86 (funcion -> funSinSalidaArg .)


state 33

    (87) funcion -> funSinSalida .

    VARIABLE        reduce using rule 87 (funcion -> funSinSalida .)
    PRINT           reduce using rule 87 (funcion -> funSinSalida .)
    PRINTLN         reduce using rule 87 (funcion -> funSinSalida .)
    RETURN          reduce using rule 87 (funcion -> funSinSalida .)
    VAR             reduce using rule 87 (funcion -> funSinSalida .)
    VAL             reduce using rule 87 (funcion -> funSinSalida .)
    STRINGPALABRA   reduce using rule 87 (funcion -> funSinSalida .)
    FUN             reduce using rule 87 (funcion -> funSinSalida .)
    IF              reduce using rule 87 (funcion -> funSinSalida .)
    WHEN            reduce using rule 87 (funcion -> funSinSalida .)
    FOR             reduce using rule 87 (funcion -> funSinSalida .)
    $end            reduce using rule 87 (funcion -> funSinSalida .)
    RLLAVE          reduce using rule 87 (funcion -> funSinSalida .)


state 34

    (103) sublist -> sublistIndex .

    VARIABLE        reduce using rule 103 (sublist -> sublistIndex .)
    PRINT           reduce using rule 103 (sublist -> sublistIndex .)
    PRINTLN         reduce using rule 103 (sublist -> sublistIndex .)
    RETURN          reduce using rule 103 (sublist -> sublistIndex .)
    VAR             reduce using rule 103 (sublist -> sublistIndex .)
    VAL             reduce using rule 103 (sublist -> sublistIndex .)
    STRINGPALABRA   reduce using rule 103 (sublist -> sublistIndex .)
    FUN             reduce using rule 103 (sublist -> sublistIndex .)
    IF              reduce using rule 103 (sublist -> sublistIndex .)
    WHEN            reduce using rule 103 (sublist -> sublistIndex .)
    FOR             reduce using rule 103 (sublist -> sublistIndex .)
    $end            reduce using rule 103 (sublist -> sublistIndex .)
    RLLAVE          reduce using rule 103 (sublist -> sublistIndex .)


state 35

    (104) sublist -> sublistInicio .

    VARIABLE        reduce using rule 104 (sublist -> sublistInicio .)
    PRINT           reduce using rule 104 (sublist -> sublistInicio .)
    PRINTLN         reduce using rule 104 (sublist -> sublistInicio .)
    RETURN          reduce using rule 104 (sublist -> sublistInicio .)
    VAR             reduce using rule 104 (sublist -> sublistInicio .)
    VAL             reduce using rule 104 (sublist -> sublistInicio .)
    STRINGPALABRA   reduce using rule 104 (sublist -> sublistInicio .)
    FUN             reduce using rule 104 (sublist -> sublistInicio .)
    IF              reduce using rule 104 (sublist -> sublistInicio .)
    WHEN            reduce using rule 104 (sublist -> sublistInicio .)
    FOR             reduce using rule 104 (sublist -> sublistInicio .)
    $end            reduce using rule 104 (sublist -> sublistInicio .)
    RLLAVE          reduce using rule 104 (sublist -> sublistInicio .)


state 36

    (105) sublist -> sublistFinal .

    VARIABLE        reduce using rule 105 (sublist -> sublistFinal .)
    PRINT           reduce using rule 105 (sublist -> sublistFinal .)
    PRINTLN         reduce using rule 105 (sublist -> sublistFinal .)
    RETURN          reduce using rule 105 (sublist -> sublistFinal .)
    VAR             reduce using rule 105 (sublist -> sublistFinal .)
    VAL             reduce using rule 105 (sublist -> sublistFinal .)
    STRINGPALABRA   reduce using rule 105 (sublist -> sublistFinal .)
    FUN             reduce using rule 105 (sublist -> sublistFinal .)
    IF              reduce using rule 105 (sublist -> sublistFinal .)
    WHEN            reduce using rule 105 (sublist -> sublistFinal .)
    FOR             reduce using rule 105 (sublist -> sublistFinal .)
    $end            reduce using rule 105 (sublist -> sublistFinal .)
    RLLAVE          reduce using rule 105 (sublist -> sublistFinal .)


state 37

    (106) sublist -> sublistVar .

    VARIABLE        reduce using rule 106 (sublist -> sublistVar .)
    PRINT           reduce using rule 106 (sublist -> sublistVar .)
    PRINTLN         reduce using rule 106 (sublist -> sublistVar .)
    RETURN          reduce using rule 106 (sublist -> sublistVar .)
    VAR             reduce using rule 106 (sublist -> sublistVar .)
    VAL             reduce using rule 106 (sublist -> sublistVar .)
    STRINGPALABRA   reduce using rule 106 (sublist -> sublistVar .)
    FUN             reduce using rule 106 (sublist -> sublistVar .)
    IF              reduce using rule 106 (sublist -> sublistVar .)
    WHEN            reduce using rule 106 (sublist -> sublistVar .)
    FOR             reduce using rule 106 (sublist -> sublistVar .)
    $end            reduce using rule 106 (sublist -> sublistVar .)
    RLLAVE          reduce using rule 106 (sublist -> sublistVar .)


state 38

    (113) prin -> PRINT . LPAREN datosprimitivos RPAREN

    LPAREN          shift and go to state 61


state 39

    (114) prin -> PRINTLN . LPAREN datosprimitivos RPAREN

    LPAREN          shift and go to state 62


state 40

    (116) retor -> RETURN . VARIABLE

    VARIABLE        shift and go to state 63


state 41

    (101) rindex -> STRINGPALABRA . PUNTO RINDEX LPAREN repeCualquier RPAREN
    (99) contains -> STRINGPALABRA . PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN
    (100) contains -> STRINGPALABRA . PUNTO CONTAINS LPAREN VARIABLE RPAREN

    PUNTO           shift and go to state 64


state 42

    (40) valovar -> VAR .

    VARIABLE        reduce using rule 40 (valovar -> VAR .)


state 43

    (41) valovar -> VAL .

    VARIABLE        reduce using rule 41 (valovar -> VAL .)


state 44

    (70) if -> ifBoolean .

    VARIABLE        reduce using rule 70 (if -> ifBoolean .)
    PRINT           reduce using rule 70 (if -> ifBoolean .)
    PRINTLN         reduce using rule 70 (if -> ifBoolean .)
    RETURN          reduce using rule 70 (if -> ifBoolean .)
    VAR             reduce using rule 70 (if -> ifBoolean .)
    VAL             reduce using rule 70 (if -> ifBoolean .)
    STRINGPALABRA   reduce using rule 70 (if -> ifBoolean .)
    FUN             reduce using rule 70 (if -> ifBoolean .)
    IF              reduce using rule 70 (if -> ifBoolean .)
    WHEN            reduce using rule 70 (if -> ifBoolean .)
    FOR             reduce using rule 70 (if -> ifBoolean .)
    $end            reduce using rule 70 (if -> ifBoolean .)
    RLLAVE          reduce using rule 70 (if -> ifBoolean .)


state 45

    (71) if -> ifComparacion .

    VARIABLE        reduce using rule 71 (if -> ifComparacion .)
    PRINT           reduce using rule 71 (if -> ifComparacion .)
    PRINTLN         reduce using rule 71 (if -> ifComparacion .)
    RETURN          reduce using rule 71 (if -> ifComparacion .)
    VAR             reduce using rule 71 (if -> ifComparacion .)
    VAL             reduce using rule 71 (if -> ifComparacion .)
    STRINGPALABRA   reduce using rule 71 (if -> ifComparacion .)
    FUN             reduce using rule 71 (if -> ifComparacion .)
    IF              reduce using rule 71 (if -> ifComparacion .)
    WHEN            reduce using rule 71 (if -> ifComparacion .)
    FOR             reduce using rule 71 (if -> ifComparacion .)
    $end            reduce using rule 71 (if -> ifComparacion .)
    RLLAVE          reduce using rule 71 (if -> ifComparacion .)


state 46

    (72) if -> ifVariable .

    VARIABLE        reduce using rule 72 (if -> ifVariable .)
    PRINT           reduce using rule 72 (if -> ifVariable .)
    PRINTLN         reduce using rule 72 (if -> ifVariable .)
    RETURN          reduce using rule 72 (if -> ifVariable .)
    VAR             reduce using rule 72 (if -> ifVariable .)
    VAL             reduce using rule 72 (if -> ifVariable .)
    STRINGPALABRA   reduce using rule 72 (if -> ifVariable .)
    FUN             reduce using rule 72 (if -> ifVariable .)
    IF              reduce using rule 72 (if -> ifVariable .)
    WHEN            reduce using rule 72 (if -> ifVariable .)
    FOR             reduce using rule 72 (if -> ifVariable .)
    $end            reduce using rule 72 (if -> ifVariable .)
    RLLAVE          reduce using rule 72 (if -> ifVariable .)


state 47

    (73) when -> whenVacio .

    VARIABLE        reduce using rule 73 (when -> whenVacio .)
    PRINT           reduce using rule 73 (when -> whenVacio .)
    PRINTLN         reduce using rule 73 (when -> whenVacio .)
    RETURN          reduce using rule 73 (when -> whenVacio .)
    VAR             reduce using rule 73 (when -> whenVacio .)
    VAL             reduce using rule 73 (when -> whenVacio .)
    STRINGPALABRA   reduce using rule 73 (when -> whenVacio .)
    FUN             reduce using rule 73 (when -> whenVacio .)
    IF              reduce using rule 73 (when -> whenVacio .)
    WHEN            reduce using rule 73 (when -> whenVacio .)
    FOR             reduce using rule 73 (when -> whenVacio .)
    $end            reduce using rule 73 (when -> whenVacio .)
    RLLAVE          reduce using rule 73 (when -> whenVacio .)


state 48

    (74) when -> whenVariable .

    VARIABLE        reduce using rule 74 (when -> whenVariable .)
    PRINT           reduce using rule 74 (when -> whenVariable .)
    PRINTLN         reduce using rule 74 (when -> whenVariable .)
    RETURN          reduce using rule 74 (when -> whenVariable .)
    VAR             reduce using rule 74 (when -> whenVariable .)
    VAL             reduce using rule 74 (when -> whenVariable .)
    STRINGPALABRA   reduce using rule 74 (when -> whenVariable .)
    FUN             reduce using rule 74 (when -> whenVariable .)
    IF              reduce using rule 74 (when -> whenVariable .)
    WHEN            reduce using rule 74 (when -> whenVariable .)
    FOR             reduce using rule 74 (when -> whenVariable .)
    $end            reduce using rule 74 (when -> whenVariable .)
    RLLAVE          reduce using rule 74 (when -> whenVariable .)


state 49

    (75) for -> forRango .

    VARIABLE        reduce using rule 75 (for -> forRango .)
    PRINT           reduce using rule 75 (for -> forRango .)
    PRINTLN         reduce using rule 75 (for -> forRango .)
    RETURN          reduce using rule 75 (for -> forRango .)
    VAR             reduce using rule 75 (for -> forRango .)
    VAL             reduce using rule 75 (for -> forRango .)
    STRINGPALABRA   reduce using rule 75 (for -> forRango .)
    FUN             reduce using rule 75 (for -> forRango .)
    IF              reduce using rule 75 (for -> forRango .)
    WHEN            reduce using rule 75 (for -> forRango .)
    FOR             reduce using rule 75 (for -> forRango .)
    $end            reduce using rule 75 (for -> forRango .)
    RLLAVE          reduce using rule 75 (for -> forRango .)


state 50

    (76) for -> forVariable .

    VARIABLE        reduce using rule 76 (for -> forVariable .)
    PRINT           reduce using rule 76 (for -> forVariable .)
    PRINTLN         reduce using rule 76 (for -> forVariable .)
    RETURN          reduce using rule 76 (for -> forVariable .)
    VAR             reduce using rule 76 (for -> forVariable .)
    VAL             reduce using rule 76 (for -> forVariable .)
    STRINGPALABRA   reduce using rule 76 (for -> forVariable .)
    FUN             reduce using rule 76 (for -> forVariable .)
    IF              reduce using rule 76 (for -> forVariable .)
    WHEN            reduce using rule 76 (for -> forVariable .)
    FOR             reduce using rule 76 (for -> forVariable .)
    $end            reduce using rule 76 (for -> forVariable .)
    RLLAVE          reduce using rule 76 (for -> forVariable .)


state 51

    (90) funConSalidaArg -> FUN . VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (88) funConSalida -> FUN . VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (91) funSinSalidaArg -> FUN . VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE
    (89) funSinSalida -> FUN . VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE

    VARIABLE        shift and go to state 65


state 52

    (77) ifBoolean -> IF . LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE
    (78) ifComparacion -> IF . LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE
    (79) ifVariable -> IF . LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE

    LPAREN          shift and go to state 66


state 53

    (81) whenVacio -> WHEN . LLLAVE repetodo RLLAVE
    (80) whenVariable -> WHEN . LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE

    LLLAVE          shift and go to state 67
    LPAREN          shift and go to state 68


state 54

    (83) forRango -> FOR . LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE
    (82) forVariable -> FOR . LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE

    LPAREN          shift and go to state 69


state 55

    (15) repetodo -> todo repetodo .

    $end            reduce using rule 15 (repetodo -> todo repetodo .)
    RLLAVE          reduce using rule 15 (repetodo -> todo repetodo .)


state 56

    (35) pair -> valovar VARIABLE . IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN
    (112) readline -> valovar VARIABLE . IGUAL READLINE
    (27) ListaConTipo -> valovar VARIABLE . DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN
    (28) ListaConTipo -> valovar VARIABLE . DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN
    (29) ListaConTipo -> valovar VARIABLE . DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN
    (30) ListaSinTipo -> valovar VARIABLE . IGUAL LISTOF LPAREN repeCualquier RPAREN
    (22) variableConTipo -> valovar VARIABLE . DOSPUNTOS STRING IGUAL STRINGPALABRA
    (23) variableConTipo -> valovar VARIABLE . DOSPUNTOS INT IGUAL NUMBER
    (24) variableConTipo -> valovar VARIABLE . DOSPUNTOS BOOLEAN IGUAL
    (25) variableSinTipo -> valovar VARIABLE . IGUAL datosprimitivos
    (26) variableSinTipo -> valovar VARIABLE . IGUAL repeOper
    (31) ConjuntoConTipo -> valovar VARIABLE . DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN
    (32) ConjuntoConTipo -> valovar VARIABLE . DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN
    (33) ConjuntoConTipo -> valovar VARIABLE . DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN
    (34) ConjuntoSinTipo -> valovar VARIABLE . IGUAL SETOF LPAREN repeCualquier RPAREN

    IGUAL           shift and go to state 70
    DOSPUNTOS       shift and go to state 71


state 57

    (111) readline -> VARIABLE IGUAL . READLINE

    READLINE        shift and go to state 72


state 58

    (115) contador -> VARIABLE PLUS . PLUS

    PLUS            shift and go to state 73


state 59

    (96) size -> VARIABLE PUNTO . SIZE
    (102) rindex -> VARIABLE PUNTO . RINDEX LPAREN repeCualquier RPAREN
    (98) contains -> VARIABLE PUNTO . CONTAINS LPAREN datosprimitivos RPAREN

    SIZE            shift and go to state 74
    RINDEX          shift and go to state 75
    CONTAINS        shift and go to state 76


state 60

    (107) sublistIndex -> VARIABLE LCLASP . NUMBER DOSPUNTOS NUMBER RCLASP
    (108) sublistInicio -> VARIABLE LCLASP . DOSPUNTOS NUMBER RCLASP
    (109) sublistFinal -> VARIABLE LCLASP . NUMBER DOSPUNTOS RCLASP
    (110) sublistVar -> VARIABLE LCLASP . VARIABLE RCLASP

    NUMBER          shift and go to state 78
    DOSPUNTOS       shift and go to state 79
    VARIABLE        shift and go to state 77


state 61

    (113) prin -> PRINT LPAREN . datosprimitivos RPAREN
    (36) datosprimitivos -> . NUMBER
    (37) datosprimitivos -> . STRINGPALABRA
    (38) datosprimitivos -> . BOOLEANPALABRA
    (39) datosprimitivos -> . VARIABLE

    NUMBER          shift and go to state 81
    STRINGPALABRA   shift and go to state 82
    BOOLEANPALABRA  shift and go to state 83
    VARIABLE        shift and go to state 84

    datosprimitivos                shift and go to state 80

state 62

    (114) prin -> PRINTLN LPAREN . datosprimitivos RPAREN
    (36) datosprimitivos -> . NUMBER
    (37) datosprimitivos -> . STRINGPALABRA
    (38) datosprimitivos -> . BOOLEANPALABRA
    (39) datosprimitivos -> . VARIABLE

    NUMBER          shift and go to state 81
    STRINGPALABRA   shift and go to state 82
    BOOLEANPALABRA  shift and go to state 83
    VARIABLE        shift and go to state 84

    datosprimitivos                shift and go to state 85

state 63

    (116) retor -> RETURN VARIABLE .

    VARIABLE        reduce using rule 116 (retor -> RETURN VARIABLE .)
    PRINT           reduce using rule 116 (retor -> RETURN VARIABLE .)
    PRINTLN         reduce using rule 116 (retor -> RETURN VARIABLE .)
    RETURN          reduce using rule 116 (retor -> RETURN VARIABLE .)
    VAR             reduce using rule 116 (retor -> RETURN VARIABLE .)
    VAL             reduce using rule 116 (retor -> RETURN VARIABLE .)
    STRINGPALABRA   reduce using rule 116 (retor -> RETURN VARIABLE .)
    FUN             reduce using rule 116 (retor -> RETURN VARIABLE .)
    IF              reduce using rule 116 (retor -> RETURN VARIABLE .)
    WHEN            reduce using rule 116 (retor -> RETURN VARIABLE .)
    FOR             reduce using rule 116 (retor -> RETURN VARIABLE .)
    $end            reduce using rule 116 (retor -> RETURN VARIABLE .)
    RLLAVE          reduce using rule 116 (retor -> RETURN VARIABLE .)


state 64

    (101) rindex -> STRINGPALABRA PUNTO . RINDEX LPAREN repeCualquier RPAREN
    (99) contains -> STRINGPALABRA PUNTO . CONTAINS LPAREN STRINGPALABRA RPAREN
    (100) contains -> STRINGPALABRA PUNTO . CONTAINS LPAREN VARIABLE RPAREN

    RINDEX          shift and go to state 86
    CONTAINS        shift and go to state 87


state 65

    (90) funConSalidaArg -> FUN VARIABLE . LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (88) funConSalida -> FUN VARIABLE . LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (91) funSinSalidaArg -> FUN VARIABLE . LPAREN RPAREN LLLAVE repetodo RLLAVE
    (89) funSinSalida -> FUN VARIABLE . LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE

    LPAREN          shift and go to state 88


state 66

    (77) ifBoolean -> IF LPAREN . BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE
    (78) ifComparacion -> IF LPAREN . comparacion RPAREN LLLAVE repetodo RLLAVE
    (79) ifVariable -> IF LPAREN . VARIABLE RPAREN LLLAVE repetodo RLLAVE
    (56) comparacion -> . valor operadoresComp valor
    (44) valor -> . NUMBER
    (45) valor -> . VARIABLE

    BOOLEANPALABRA  shift and go to state 89
    VARIABLE        shift and go to state 91
    NUMBER          shift and go to state 93

    comparacion                    shift and go to state 90
    valor                          shift and go to state 92

state 67

    (81) whenVacio -> WHEN LLLAVE . repetodo RLLAVE
    (14) repetodo -> . todo
    (15) repetodo -> . todo repetodo
    (2) todo -> . lista
    (3) todo -> . variable
    (4) todo -> . conjunto
    (5) todo -> . pair
    (6) todo -> . control
    (7) todo -> . adicionales
    (8) todo -> . funcion
    (9) todo -> . sublist
    (10) todo -> . readline
    (11) todo -> . prin
    (12) todo -> . contador
    (13) todo -> . retor
    (16) lista -> . ListaConTipo
    (17) lista -> . ListaSinTipo
    (18) variable -> . variableConTipo
    (19) variable -> . variableSinTipo
    (20) conjunto -> . ConjuntoConTipo
    (21) conjunto -> . ConjuntoSinTipo
    (35) pair -> . valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN
    (67) control -> . if
    (68) control -> . when
    (69) control -> . for
    (92) adicionales -> . size
    (93) adicionales -> . rindex
    (94) adicionales -> . sublist
    (95) adicionales -> . contains
    (84) funcion -> . funConSalidaArg
    (85) funcion -> . funConSalida
    (86) funcion -> . funSinSalidaArg
    (87) funcion -> . funSinSalida
    (103) sublist -> . sublistIndex
    (104) sublist -> . sublistInicio
    (105) sublist -> . sublistFinal
    (106) sublist -> . sublistVar
    (111) readline -> . VARIABLE IGUAL READLINE
    (112) readline -> . valovar VARIABLE IGUAL READLINE
    (113) prin -> . PRINT LPAREN datosprimitivos RPAREN
    (114) prin -> . PRINTLN LPAREN datosprimitivos RPAREN
    (115) contador -> . VARIABLE PLUS PLUS
    (116) retor -> . RETURN VARIABLE
    (27) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN
    (28) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN
    (29) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN
    (30) ListaSinTipo -> . valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN
    (22) variableConTipo -> . valovar VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA
    (23) variableConTipo -> . valovar VARIABLE DOSPUNTOS INT IGUAL NUMBER
    (24) variableConTipo -> . valovar VARIABLE DOSPUNTOS BOOLEAN IGUAL
    (25) variableSinTipo -> . valovar VARIABLE IGUAL datosprimitivos
    (26) variableSinTipo -> . valovar VARIABLE IGUAL repeOper
    (31) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN
    (32) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN
    (33) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN
    (34) ConjuntoSinTipo -> . valovar VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN
    (40) valovar -> . VAR
    (41) valovar -> . VAL
    (70) if -> . ifBoolean
    (71) if -> . ifComparacion
    (72) if -> . ifVariable
    (73) when -> . whenVacio
    (74) when -> . whenVariable
    (75) for -> . forRango
    (76) for -> . forVariable
    (96) size -> . VARIABLE PUNTO SIZE
    (101) rindex -> . STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier RPAREN
    (102) rindex -> . VARIABLE PUNTO RINDEX LPAREN repeCualquier RPAREN
    (97) contains -> .
    (98) contains -> . VARIABLE PUNTO CONTAINS LPAREN datosprimitivos RPAREN
    (99) contains -> . STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN
    (100) contains -> . STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE RPAREN
    (90) funConSalidaArg -> . FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (88) funConSalida -> . FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (91) funSinSalidaArg -> . FUN VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE
    (89) funSinSalida -> . FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE
    (107) sublistIndex -> . VARIABLE LCLASP NUMBER DOSPUNTOS NUMBER RCLASP
    (108) sublistInicio -> . VARIABLE LCLASP DOSPUNTOS NUMBER RCLASP
    (109) sublistFinal -> . VARIABLE LCLASP NUMBER DOSPUNTOS RCLASP
    (110) sublistVar -> . VARIABLE LCLASP VARIABLE RCLASP
    (77) ifBoolean -> . IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE
    (78) ifComparacion -> . IF LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE
    (79) ifVariable -> . IF LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE
    (81) whenVacio -> . WHEN LLLAVE repetodo RLLAVE
    (80) whenVariable -> . WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE
    (83) forRango -> . FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE
    (82) forVariable -> . FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for STRINGPALABRA resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHEN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    VARIABLE        shift and go to state 23
    PRINT           shift and go to state 38
    PRINTLN         shift and go to state 39
    RETURN          shift and go to state 40
    VAR             shift and go to state 42
    VAL             shift and go to state 43
    STRINGPALABRA   shift and go to state 41
    RLLAVE          reduce using rule 97 (contains -> .)
    FUN             shift and go to state 51
    IF              shift and go to state 52
    WHEN            shift and go to state 53
    FOR             shift and go to state 54

  ! VARIABLE        [ reduce using rule 97 (contains -> .) ]
  ! PRINT           [ reduce using rule 97 (contains -> .) ]
  ! PRINTLN         [ reduce using rule 97 (contains -> .) ]
  ! RETURN          [ reduce using rule 97 (contains -> .) ]
  ! VAR             [ reduce using rule 97 (contains -> .) ]
  ! VAL             [ reduce using rule 97 (contains -> .) ]
  ! STRINGPALABRA   [ reduce using rule 97 (contains -> .) ]
  ! FUN             [ reduce using rule 97 (contains -> .) ]
  ! IF              [ reduce using rule 97 (contains -> .) ]
  ! WHEN            [ reduce using rule 97 (contains -> .) ]
  ! FOR             [ reduce using rule 97 (contains -> .) ]

    repetodo                       shift and go to state 94
    todo                           shift and go to state 3
    lista                          shift and go to state 4
    variable                       shift and go to state 5
    conjunto                       shift and go to state 6
    pair                           shift and go to state 7
    control                        shift and go to state 8
    adicionales                    shift and go to state 9
    funcion                        shift and go to state 10
    sublist                        shift and go to state 11
    readline                       shift and go to state 12
    prin                           shift and go to state 13
    contador                       shift and go to state 14
    retor                          shift and go to state 15
    ListaConTipo                   shift and go to state 16
    ListaSinTipo                   shift and go to state 17
    variableConTipo                shift and go to state 18
    variableSinTipo                shift and go to state 19
    ConjuntoConTipo                shift and go to state 20
    ConjuntoSinTipo                shift and go to state 21
    valovar                        shift and go to state 22
    if                             shift and go to state 24
    when                           shift and go to state 25
    for                            shift and go to state 26
    size                           shift and go to state 27
    rindex                         shift and go to state 28
    contains                       shift and go to state 29
    funConSalidaArg                shift and go to state 30
    funConSalida                   shift and go to state 31
    funSinSalidaArg                shift and go to state 32
    funSinSalida                   shift and go to state 33
    sublistIndex                   shift and go to state 34
    sublistInicio                  shift and go to state 35
    sublistFinal                   shift and go to state 36
    sublistVar                     shift and go to state 37
    ifBoolean                      shift and go to state 44
    ifComparacion                  shift and go to state 45
    ifVariable                     shift and go to state 46
    whenVacio                      shift and go to state 47
    whenVariable                   shift and go to state 48
    forRango                       shift and go to state 49
    forVariable                    shift and go to state 50

state 68

    (80) whenVariable -> WHEN LPAREN . VARIABLE RPAREN LLLAVE repetodo RLLAVE

    VARIABLE        shift and go to state 95


state 69

    (83) forRango -> FOR LPAREN . VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE
    (82) forVariable -> FOR LPAREN . VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE

    VARIABLE        shift and go to state 96


state 70

    (35) pair -> valovar VARIABLE IGUAL . PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN
    (112) readline -> valovar VARIABLE IGUAL . READLINE
    (30) ListaSinTipo -> valovar VARIABLE IGUAL . LISTOF LPAREN repeCualquier RPAREN
    (25) variableSinTipo -> valovar VARIABLE IGUAL . datosprimitivos
    (26) variableSinTipo -> valovar VARIABLE IGUAL . repeOper
    (34) ConjuntoSinTipo -> valovar VARIABLE IGUAL . SETOF LPAREN repeCualquier RPAREN
    (36) datosprimitivos -> . NUMBER
    (37) datosprimitivos -> . STRINGPALABRA
    (38) datosprimitivos -> . BOOLEANPALABRA
    (39) datosprimitivos -> . VARIABLE
    (117) repeOper -> . operacion
    (118) repeOper -> . operacion repeOper
    (119) operacion -> . suma
    (120) operacion -> . resta
    (121) operacion -> . multiplicacion
    (122) operacion -> . division
    (123) suma -> . NUMBER PLUS NUMBER
    (124) resta -> . NUMBER MINUS NUMBER
    (125) multiplicacion -> . NUMBER TIMES NUMBER
    (126) division -> . NUMBER DIVIDE NUMBER

    PAIR            shift and go to state 97
    READLINE        shift and go to state 99
    LISTOF          shift and go to state 100
    SETOF           shift and go to state 102
    NUMBER          shift and go to state 103
    STRINGPALABRA   shift and go to state 82
    BOOLEANPALABRA  shift and go to state 83
    VARIABLE        shift and go to state 84

    datosprimitivos                shift and go to state 98
    repeOper                       shift and go to state 101
    operacion                      shift and go to state 104
    suma                           shift and go to state 105
    resta                          shift and go to state 106
    multiplicacion                 shift and go to state 107
    division                       shift and go to state 108

state 71

    (27) ListaConTipo -> valovar VARIABLE DOSPUNTOS . LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN
    (28) ListaConTipo -> valovar VARIABLE DOSPUNTOS . LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN
    (29) ListaConTipo -> valovar VARIABLE DOSPUNTOS . LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN
    (22) variableConTipo -> valovar VARIABLE DOSPUNTOS . STRING IGUAL STRINGPALABRA
    (23) variableConTipo -> valovar VARIABLE DOSPUNTOS . INT IGUAL NUMBER
    (24) variableConTipo -> valovar VARIABLE DOSPUNTOS . BOOLEAN IGUAL
    (31) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS . SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN
    (32) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS . SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN
    (33) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS . SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN

    LIST            shift and go to state 109
    STRING          shift and go to state 111
    INT             shift and go to state 110
    BOOLEAN         shift and go to state 112
    SET             shift and go to state 113


state 72

    (111) readline -> VARIABLE IGUAL READLINE .

    VARIABLE        reduce using rule 111 (readline -> VARIABLE IGUAL READLINE .)
    PRINT           reduce using rule 111 (readline -> VARIABLE IGUAL READLINE .)
    PRINTLN         reduce using rule 111 (readline -> VARIABLE IGUAL READLINE .)
    RETURN          reduce using rule 111 (readline -> VARIABLE IGUAL READLINE .)
    VAR             reduce using rule 111 (readline -> VARIABLE IGUAL READLINE .)
    VAL             reduce using rule 111 (readline -> VARIABLE IGUAL READLINE .)
    STRINGPALABRA   reduce using rule 111 (readline -> VARIABLE IGUAL READLINE .)
    FUN             reduce using rule 111 (readline -> VARIABLE IGUAL READLINE .)
    IF              reduce using rule 111 (readline -> VARIABLE IGUAL READLINE .)
    WHEN            reduce using rule 111 (readline -> VARIABLE IGUAL READLINE .)
    FOR             reduce using rule 111 (readline -> VARIABLE IGUAL READLINE .)
    $end            reduce using rule 111 (readline -> VARIABLE IGUAL READLINE .)
    RLLAVE          reduce using rule 111 (readline -> VARIABLE IGUAL READLINE .)


state 73

    (115) contador -> VARIABLE PLUS PLUS .

    VARIABLE        reduce using rule 115 (contador -> VARIABLE PLUS PLUS .)
    PRINT           reduce using rule 115 (contador -> VARIABLE PLUS PLUS .)
    PRINTLN         reduce using rule 115 (contador -> VARIABLE PLUS PLUS .)
    RETURN          reduce using rule 115 (contador -> VARIABLE PLUS PLUS .)
    VAR             reduce using rule 115 (contador -> VARIABLE PLUS PLUS .)
    VAL             reduce using rule 115 (contador -> VARIABLE PLUS PLUS .)
    STRINGPALABRA   reduce using rule 115 (contador -> VARIABLE PLUS PLUS .)
    FUN             reduce using rule 115 (contador -> VARIABLE PLUS PLUS .)
    IF              reduce using rule 115 (contador -> VARIABLE PLUS PLUS .)
    WHEN            reduce using rule 115 (contador -> VARIABLE PLUS PLUS .)
    FOR             reduce using rule 115 (contador -> VARIABLE PLUS PLUS .)
    $end            reduce using rule 115 (contador -> VARIABLE PLUS PLUS .)
    RLLAVE          reduce using rule 115 (contador -> VARIABLE PLUS PLUS .)


state 74

    (96) size -> VARIABLE PUNTO SIZE .

    VARIABLE        reduce using rule 96 (size -> VARIABLE PUNTO SIZE .)
    PRINT           reduce using rule 96 (size -> VARIABLE PUNTO SIZE .)
    PRINTLN         reduce using rule 96 (size -> VARIABLE PUNTO SIZE .)
    RETURN          reduce using rule 96 (size -> VARIABLE PUNTO SIZE .)
    VAR             reduce using rule 96 (size -> VARIABLE PUNTO SIZE .)
    VAL             reduce using rule 96 (size -> VARIABLE PUNTO SIZE .)
    STRINGPALABRA   reduce using rule 96 (size -> VARIABLE PUNTO SIZE .)
    FUN             reduce using rule 96 (size -> VARIABLE PUNTO SIZE .)
    IF              reduce using rule 96 (size -> VARIABLE PUNTO SIZE .)
    WHEN            reduce using rule 96 (size -> VARIABLE PUNTO SIZE .)
    FOR             reduce using rule 96 (size -> VARIABLE PUNTO SIZE .)
    $end            reduce using rule 96 (size -> VARIABLE PUNTO SIZE .)
    RLLAVE          reduce using rule 96 (size -> VARIABLE PUNTO SIZE .)


state 75

    (102) rindex -> VARIABLE PUNTO RINDEX . LPAREN repeCualquier RPAREN

    LPAREN          shift and go to state 114


state 76

    (98) contains -> VARIABLE PUNTO CONTAINS . LPAREN datosprimitivos RPAREN

    LPAREN          shift and go to state 115


state 77

    (110) sublistVar -> VARIABLE LCLASP VARIABLE . RCLASP

    RCLASP          shift and go to state 116


state 78

    (107) sublistIndex -> VARIABLE LCLASP NUMBER . DOSPUNTOS NUMBER RCLASP
    (109) sublistFinal -> VARIABLE LCLASP NUMBER . DOSPUNTOS RCLASP

    DOSPUNTOS       shift and go to state 117


state 79

    (108) sublistInicio -> VARIABLE LCLASP DOSPUNTOS . NUMBER RCLASP

    NUMBER          shift and go to state 118


state 80

    (113) prin -> PRINT LPAREN datosprimitivos . RPAREN

    RPAREN          shift and go to state 119


state 81

    (36) datosprimitivos -> NUMBER .

    RPAREN          reduce using rule 36 (datosprimitivos -> NUMBER .)
    COMA            reduce using rule 36 (datosprimitivos -> NUMBER .)


state 82

    (37) datosprimitivos -> STRINGPALABRA .

    RPAREN          reduce using rule 37 (datosprimitivos -> STRINGPALABRA .)
    VARIABLE        reduce using rule 37 (datosprimitivos -> STRINGPALABRA .)
    PRINT           reduce using rule 37 (datosprimitivos -> STRINGPALABRA .)
    PRINTLN         reduce using rule 37 (datosprimitivos -> STRINGPALABRA .)
    RETURN          reduce using rule 37 (datosprimitivos -> STRINGPALABRA .)
    VAR             reduce using rule 37 (datosprimitivos -> STRINGPALABRA .)
    VAL             reduce using rule 37 (datosprimitivos -> STRINGPALABRA .)
    STRINGPALABRA   reduce using rule 37 (datosprimitivos -> STRINGPALABRA .)
    FUN             reduce using rule 37 (datosprimitivos -> STRINGPALABRA .)
    IF              reduce using rule 37 (datosprimitivos -> STRINGPALABRA .)
    WHEN            reduce using rule 37 (datosprimitivos -> STRINGPALABRA .)
    FOR             reduce using rule 37 (datosprimitivos -> STRINGPALABRA .)
    $end            reduce using rule 37 (datosprimitivos -> STRINGPALABRA .)
    RLLAVE          reduce using rule 37 (datosprimitivos -> STRINGPALABRA .)
    COMA            reduce using rule 37 (datosprimitivos -> STRINGPALABRA .)


state 83

    (38) datosprimitivos -> BOOLEANPALABRA .

    RPAREN          reduce using rule 38 (datosprimitivos -> BOOLEANPALABRA .)
    VARIABLE        reduce using rule 38 (datosprimitivos -> BOOLEANPALABRA .)
    PRINT           reduce using rule 38 (datosprimitivos -> BOOLEANPALABRA .)
    PRINTLN         reduce using rule 38 (datosprimitivos -> BOOLEANPALABRA .)
    RETURN          reduce using rule 38 (datosprimitivos -> BOOLEANPALABRA .)
    VAR             reduce using rule 38 (datosprimitivos -> BOOLEANPALABRA .)
    VAL             reduce using rule 38 (datosprimitivos -> BOOLEANPALABRA .)
    STRINGPALABRA   reduce using rule 38 (datosprimitivos -> BOOLEANPALABRA .)
    FUN             reduce using rule 38 (datosprimitivos -> BOOLEANPALABRA .)
    IF              reduce using rule 38 (datosprimitivos -> BOOLEANPALABRA .)
    WHEN            reduce using rule 38 (datosprimitivos -> BOOLEANPALABRA .)
    FOR             reduce using rule 38 (datosprimitivos -> BOOLEANPALABRA .)
    $end            reduce using rule 38 (datosprimitivos -> BOOLEANPALABRA .)
    RLLAVE          reduce using rule 38 (datosprimitivos -> BOOLEANPALABRA .)
    COMA            reduce using rule 38 (datosprimitivos -> BOOLEANPALABRA .)


state 84

    (39) datosprimitivos -> VARIABLE .

    RPAREN          reduce using rule 39 (datosprimitivos -> VARIABLE .)
    VARIABLE        reduce using rule 39 (datosprimitivos -> VARIABLE .)
    PRINT           reduce using rule 39 (datosprimitivos -> VARIABLE .)
    PRINTLN         reduce using rule 39 (datosprimitivos -> VARIABLE .)
    RETURN          reduce using rule 39 (datosprimitivos -> VARIABLE .)
    VAR             reduce using rule 39 (datosprimitivos -> VARIABLE .)
    VAL             reduce using rule 39 (datosprimitivos -> VARIABLE .)
    STRINGPALABRA   reduce using rule 39 (datosprimitivos -> VARIABLE .)
    FUN             reduce using rule 39 (datosprimitivos -> VARIABLE .)
    IF              reduce using rule 39 (datosprimitivos -> VARIABLE .)
    WHEN            reduce using rule 39 (datosprimitivos -> VARIABLE .)
    FOR             reduce using rule 39 (datosprimitivos -> VARIABLE .)
    $end            reduce using rule 39 (datosprimitivos -> VARIABLE .)
    RLLAVE          reduce using rule 39 (datosprimitivos -> VARIABLE .)
    COMA            reduce using rule 39 (datosprimitivos -> VARIABLE .)


state 85

    (114) prin -> PRINTLN LPAREN datosprimitivos . RPAREN

    RPAREN          shift and go to state 120


state 86

    (101) rindex -> STRINGPALABRA PUNTO RINDEX . LPAREN repeCualquier RPAREN

    LPAREN          shift and go to state 121


state 87

    (99) contains -> STRINGPALABRA PUNTO CONTAINS . LPAREN STRINGPALABRA RPAREN
    (100) contains -> STRINGPALABRA PUNTO CONTAINS . LPAREN VARIABLE RPAREN

    LPAREN          shift and go to state 122


state 88

    (90) funConSalidaArg -> FUN VARIABLE LPAREN . RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (88) funConSalida -> FUN VARIABLE LPAREN . repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (91) funSinSalidaArg -> FUN VARIABLE LPAREN . RPAREN LLLAVE repetodo RLLAVE
    (89) funSinSalida -> FUN VARIABLE LPAREN . repeArg RPAREN LLLAVE repetodo RLLAVE
    (65) repeArg -> . argumento
    (66) repeArg -> . argumento COMA repeArg
    (64) argumento -> . tipoDato VARIABLE
    (61) tipoDato -> . INT
    (62) tipoDato -> . STRING
    (63) tipoDato -> . BOOLEAN

    RPAREN          shift and go to state 123
    INT             shift and go to state 127
    STRING          shift and go to state 128
    BOOLEAN         shift and go to state 129

    tipoDato                       shift and go to state 124
    repeArg                        shift and go to state 125
    argumento                      shift and go to state 126

state 89

    (77) ifBoolean -> IF LPAREN BOOLEANPALABRA . RPAREN LLLAVE repetodo RLLAVE

    RPAREN          shift and go to state 130


state 90

    (78) ifComparacion -> IF LPAREN comparacion . RPAREN LLLAVE repetodo RLLAVE

    RPAREN          shift and go to state 131


state 91

    (79) ifVariable -> IF LPAREN VARIABLE . RPAREN LLLAVE repetodo RLLAVE
    (45) valor -> VARIABLE .

    RPAREN          shift and go to state 132
    MAYORQUE        reduce using rule 45 (valor -> VARIABLE .)
    DIFERENTE       reduce using rule 45 (valor -> VARIABLE .)
    MENORQUE        reduce using rule 45 (valor -> VARIABLE .)
    ESIGUAL         reduce using rule 45 (valor -> VARIABLE .)


state 92

    (56) comparacion -> valor . operadoresComp valor
    (57) operadoresComp -> . MAYORQUE
    (58) operadoresComp -> . DIFERENTE
    (59) operadoresComp -> . MENORQUE
    (60) operadoresComp -> . ESIGUAL

    MAYORQUE        shift and go to state 134
    DIFERENTE       shift and go to state 135
    MENORQUE        shift and go to state 136
    ESIGUAL         shift and go to state 137

    operadoresComp                 shift and go to state 133

state 93

    (44) valor -> NUMBER .

    MAYORQUE        reduce using rule 44 (valor -> NUMBER .)
    DIFERENTE       reduce using rule 44 (valor -> NUMBER .)
    MENORQUE        reduce using rule 44 (valor -> NUMBER .)
    ESIGUAL         reduce using rule 44 (valor -> NUMBER .)
    RPAREN          reduce using rule 44 (valor -> NUMBER .)
    COMA            reduce using rule 44 (valor -> NUMBER .)


state 94

    (81) whenVacio -> WHEN LLLAVE repetodo . RLLAVE

    RLLAVE          shift and go to state 138


state 95

    (80) whenVariable -> WHEN LPAREN VARIABLE . RPAREN LLLAVE repetodo RLLAVE

    RPAREN          shift and go to state 139


state 96

    (83) forRango -> FOR LPAREN VARIABLE . IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE
    (82) forVariable -> FOR LPAREN VARIABLE . IN VARIABLE RPAREN LLLAVE repetodo RLLAVE

    IN              shift and go to state 140


state 97

    (35) pair -> valovar VARIABLE IGUAL PAIR . LPAREN datosprimitivos COMA datosprimitivos RPAREN

    LPAREN          shift and go to state 141


state 98

    (25) variableSinTipo -> valovar VARIABLE IGUAL datosprimitivos .

    VARIABLE        reduce using rule 25 (variableSinTipo -> valovar VARIABLE IGUAL datosprimitivos .)
    PRINT           reduce using rule 25 (variableSinTipo -> valovar VARIABLE IGUAL datosprimitivos .)
    PRINTLN         reduce using rule 25 (variableSinTipo -> valovar VARIABLE IGUAL datosprimitivos .)
    RETURN          reduce using rule 25 (variableSinTipo -> valovar VARIABLE IGUAL datosprimitivos .)
    VAR             reduce using rule 25 (variableSinTipo -> valovar VARIABLE IGUAL datosprimitivos .)
    VAL             reduce using rule 25 (variableSinTipo -> valovar VARIABLE IGUAL datosprimitivos .)
    STRINGPALABRA   reduce using rule 25 (variableSinTipo -> valovar VARIABLE IGUAL datosprimitivos .)
    FUN             reduce using rule 25 (variableSinTipo -> valovar VARIABLE IGUAL datosprimitivos .)
    IF              reduce using rule 25 (variableSinTipo -> valovar VARIABLE IGUAL datosprimitivos .)
    WHEN            reduce using rule 25 (variableSinTipo -> valovar VARIABLE IGUAL datosprimitivos .)
    FOR             reduce using rule 25 (variableSinTipo -> valovar VARIABLE IGUAL datosprimitivos .)
    $end            reduce using rule 25 (variableSinTipo -> valovar VARIABLE IGUAL datosprimitivos .)
    RLLAVE          reduce using rule 25 (variableSinTipo -> valovar VARIABLE IGUAL datosprimitivos .)


state 99

    (112) readline -> valovar VARIABLE IGUAL READLINE .

    VARIABLE        reduce using rule 112 (readline -> valovar VARIABLE IGUAL READLINE .)
    PRINT           reduce using rule 112 (readline -> valovar VARIABLE IGUAL READLINE .)
    PRINTLN         reduce using rule 112 (readline -> valovar VARIABLE IGUAL READLINE .)
    RETURN          reduce using rule 112 (readline -> valovar VARIABLE IGUAL READLINE .)
    VAR             reduce using rule 112 (readline -> valovar VARIABLE IGUAL READLINE .)
    VAL             reduce using rule 112 (readline -> valovar VARIABLE IGUAL READLINE .)
    STRINGPALABRA   reduce using rule 112 (readline -> valovar VARIABLE IGUAL READLINE .)
    FUN             reduce using rule 112 (readline -> valovar VARIABLE IGUAL READLINE .)
    IF              reduce using rule 112 (readline -> valovar VARIABLE IGUAL READLINE .)
    WHEN            reduce using rule 112 (readline -> valovar VARIABLE IGUAL READLINE .)
    FOR             reduce using rule 112 (readline -> valovar VARIABLE IGUAL READLINE .)
    $end            reduce using rule 112 (readline -> valovar VARIABLE IGUAL READLINE .)
    RLLAVE          reduce using rule 112 (readline -> valovar VARIABLE IGUAL READLINE .)


state 100

    (30) ListaSinTipo -> valovar VARIABLE IGUAL LISTOF . LPAREN repeCualquier RPAREN

    LPAREN          shift and go to state 142


state 101

    (26) variableSinTipo -> valovar VARIABLE IGUAL repeOper .

    VARIABLE        reduce using rule 26 (variableSinTipo -> valovar VARIABLE IGUAL repeOper .)
    PRINT           reduce using rule 26 (variableSinTipo -> valovar VARIABLE IGUAL repeOper .)
    PRINTLN         reduce using rule 26 (variableSinTipo -> valovar VARIABLE IGUAL repeOper .)
    RETURN          reduce using rule 26 (variableSinTipo -> valovar VARIABLE IGUAL repeOper .)
    VAR             reduce using rule 26 (variableSinTipo -> valovar VARIABLE IGUAL repeOper .)
    VAL             reduce using rule 26 (variableSinTipo -> valovar VARIABLE IGUAL repeOper .)
    STRINGPALABRA   reduce using rule 26 (variableSinTipo -> valovar VARIABLE IGUAL repeOper .)
    FUN             reduce using rule 26 (variableSinTipo -> valovar VARIABLE IGUAL repeOper .)
    IF              reduce using rule 26 (variableSinTipo -> valovar VARIABLE IGUAL repeOper .)
    WHEN            reduce using rule 26 (variableSinTipo -> valovar VARIABLE IGUAL repeOper .)
    FOR             reduce using rule 26 (variableSinTipo -> valovar VARIABLE IGUAL repeOper .)
    $end            reduce using rule 26 (variableSinTipo -> valovar VARIABLE IGUAL repeOper .)
    RLLAVE          reduce using rule 26 (variableSinTipo -> valovar VARIABLE IGUAL repeOper .)


state 102

    (34) ConjuntoSinTipo -> valovar VARIABLE IGUAL SETOF . LPAREN repeCualquier RPAREN

    LPAREN          shift and go to state 143


state 103

    (36) datosprimitivos -> NUMBER .
    (123) suma -> NUMBER . PLUS NUMBER
    (124) resta -> NUMBER . MINUS NUMBER
    (125) multiplicacion -> NUMBER . TIMES NUMBER
    (126) division -> NUMBER . DIVIDE NUMBER

    VARIABLE        reduce using rule 36 (datosprimitivos -> NUMBER .)
    PRINT           reduce using rule 36 (datosprimitivos -> NUMBER .)
    PRINTLN         reduce using rule 36 (datosprimitivos -> NUMBER .)
    RETURN          reduce using rule 36 (datosprimitivos -> NUMBER .)
    VAR             reduce using rule 36 (datosprimitivos -> NUMBER .)
    VAL             reduce using rule 36 (datosprimitivos -> NUMBER .)
    STRINGPALABRA   reduce using rule 36 (datosprimitivos -> NUMBER .)
    FUN             reduce using rule 36 (datosprimitivos -> NUMBER .)
    IF              reduce using rule 36 (datosprimitivos -> NUMBER .)
    WHEN            reduce using rule 36 (datosprimitivos -> NUMBER .)
    FOR             reduce using rule 36 (datosprimitivos -> NUMBER .)
    $end            reduce using rule 36 (datosprimitivos -> NUMBER .)
    RLLAVE          reduce using rule 36 (datosprimitivos -> NUMBER .)
    PLUS            shift and go to state 144
    MINUS           shift and go to state 145
    TIMES           shift and go to state 146
    DIVIDE          shift and go to state 147


state 104

    (117) repeOper -> operacion .
    (118) repeOper -> operacion . repeOper
    (117) repeOper -> . operacion
    (118) repeOper -> . operacion repeOper
    (119) operacion -> . suma
    (120) operacion -> . resta
    (121) operacion -> . multiplicacion
    (122) operacion -> . division
    (123) suma -> . NUMBER PLUS NUMBER
    (124) resta -> . NUMBER MINUS NUMBER
    (125) multiplicacion -> . NUMBER TIMES NUMBER
    (126) division -> . NUMBER DIVIDE NUMBER

    VARIABLE        reduce using rule 117 (repeOper -> operacion .)
    PRINT           reduce using rule 117 (repeOper -> operacion .)
    PRINTLN         reduce using rule 117 (repeOper -> operacion .)
    RETURN          reduce using rule 117 (repeOper -> operacion .)
    VAR             reduce using rule 117 (repeOper -> operacion .)
    VAL             reduce using rule 117 (repeOper -> operacion .)
    STRINGPALABRA   reduce using rule 117 (repeOper -> operacion .)
    FUN             reduce using rule 117 (repeOper -> operacion .)
    IF              reduce using rule 117 (repeOper -> operacion .)
    WHEN            reduce using rule 117 (repeOper -> operacion .)
    FOR             reduce using rule 117 (repeOper -> operacion .)
    $end            reduce using rule 117 (repeOper -> operacion .)
    RLLAVE          reduce using rule 117 (repeOper -> operacion .)
    NUMBER          shift and go to state 149

    operacion                      shift and go to state 104
    repeOper                       shift and go to state 148
    suma                           shift and go to state 105
    resta                          shift and go to state 106
    multiplicacion                 shift and go to state 107
    division                       shift and go to state 108

state 105

    (119) operacion -> suma .

    NUMBER          reduce using rule 119 (operacion -> suma .)
    VARIABLE        reduce using rule 119 (operacion -> suma .)
    PRINT           reduce using rule 119 (operacion -> suma .)
    PRINTLN         reduce using rule 119 (operacion -> suma .)
    RETURN          reduce using rule 119 (operacion -> suma .)
    VAR             reduce using rule 119 (operacion -> suma .)
    VAL             reduce using rule 119 (operacion -> suma .)
    STRINGPALABRA   reduce using rule 119 (operacion -> suma .)
    FUN             reduce using rule 119 (operacion -> suma .)
    IF              reduce using rule 119 (operacion -> suma .)
    WHEN            reduce using rule 119 (operacion -> suma .)
    FOR             reduce using rule 119 (operacion -> suma .)
    $end            reduce using rule 119 (operacion -> suma .)
    RLLAVE          reduce using rule 119 (operacion -> suma .)


state 106

    (120) operacion -> resta .

    NUMBER          reduce using rule 120 (operacion -> resta .)
    VARIABLE        reduce using rule 120 (operacion -> resta .)
    PRINT           reduce using rule 120 (operacion -> resta .)
    PRINTLN         reduce using rule 120 (operacion -> resta .)
    RETURN          reduce using rule 120 (operacion -> resta .)
    VAR             reduce using rule 120 (operacion -> resta .)
    VAL             reduce using rule 120 (operacion -> resta .)
    STRINGPALABRA   reduce using rule 120 (operacion -> resta .)
    FUN             reduce using rule 120 (operacion -> resta .)
    IF              reduce using rule 120 (operacion -> resta .)
    WHEN            reduce using rule 120 (operacion -> resta .)
    FOR             reduce using rule 120 (operacion -> resta .)
    $end            reduce using rule 120 (operacion -> resta .)
    RLLAVE          reduce using rule 120 (operacion -> resta .)


state 107

    (121) operacion -> multiplicacion .

    NUMBER          reduce using rule 121 (operacion -> multiplicacion .)
    VARIABLE        reduce using rule 121 (operacion -> multiplicacion .)
    PRINT           reduce using rule 121 (operacion -> multiplicacion .)
    PRINTLN         reduce using rule 121 (operacion -> multiplicacion .)
    RETURN          reduce using rule 121 (operacion -> multiplicacion .)
    VAR             reduce using rule 121 (operacion -> multiplicacion .)
    VAL             reduce using rule 121 (operacion -> multiplicacion .)
    STRINGPALABRA   reduce using rule 121 (operacion -> multiplicacion .)
    FUN             reduce using rule 121 (operacion -> multiplicacion .)
    IF              reduce using rule 121 (operacion -> multiplicacion .)
    WHEN            reduce using rule 121 (operacion -> multiplicacion .)
    FOR             reduce using rule 121 (operacion -> multiplicacion .)
    $end            reduce using rule 121 (operacion -> multiplicacion .)
    RLLAVE          reduce using rule 121 (operacion -> multiplicacion .)


state 108

    (122) operacion -> division .

    NUMBER          reduce using rule 122 (operacion -> division .)
    VARIABLE        reduce using rule 122 (operacion -> division .)
    PRINT           reduce using rule 122 (operacion -> division .)
    PRINTLN         reduce using rule 122 (operacion -> division .)
    RETURN          reduce using rule 122 (operacion -> division .)
    VAR             reduce using rule 122 (operacion -> division .)
    VAL             reduce using rule 122 (operacion -> division .)
    STRINGPALABRA   reduce using rule 122 (operacion -> division .)
    FUN             reduce using rule 122 (operacion -> division .)
    IF              reduce using rule 122 (operacion -> division .)
    WHEN            reduce using rule 122 (operacion -> division .)
    FOR             reduce using rule 122 (operacion -> division .)
    $end            reduce using rule 122 (operacion -> division .)
    RLLAVE          reduce using rule 122 (operacion -> division .)


state 109

    (27) ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST . MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN
    (28) ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST . MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN
    (29) ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST . MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN

    MENORQUE        shift and go to state 150


state 110

    (23) variableConTipo -> valovar VARIABLE DOSPUNTOS INT . IGUAL NUMBER

    IGUAL           shift and go to state 151


state 111

    (22) variableConTipo -> valovar VARIABLE DOSPUNTOS STRING . IGUAL STRINGPALABRA

    IGUAL           shift and go to state 152


state 112

    (24) variableConTipo -> valovar VARIABLE DOSPUNTOS BOOLEAN . IGUAL

    IGUAL           shift and go to state 153


state 113

    (31) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET . MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN
    (32) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET . MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN
    (33) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET . MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN

    MENORQUE        shift and go to state 154


state 114

    (102) rindex -> VARIABLE PUNTO RINDEX LPAREN . repeCualquier RPAREN
    (54) repeCualquier -> . datosprimitivos
    (55) repeCualquier -> . datosprimitivos COMA repeCualquier
    (36) datosprimitivos -> . NUMBER
    (37) datosprimitivos -> . STRINGPALABRA
    (38) datosprimitivos -> . BOOLEANPALABRA
    (39) datosprimitivos -> . VARIABLE

    NUMBER          shift and go to state 81
    STRINGPALABRA   shift and go to state 82
    BOOLEANPALABRA  shift and go to state 83
    VARIABLE        shift and go to state 84

    repeCualquier                  shift and go to state 155
    datosprimitivos                shift and go to state 156

state 115

    (98) contains -> VARIABLE PUNTO CONTAINS LPAREN . datosprimitivos RPAREN
    (36) datosprimitivos -> . NUMBER
    (37) datosprimitivos -> . STRINGPALABRA
    (38) datosprimitivos -> . BOOLEANPALABRA
    (39) datosprimitivos -> . VARIABLE

    NUMBER          shift and go to state 81
    STRINGPALABRA   shift and go to state 82
    BOOLEANPALABRA  shift and go to state 83
    VARIABLE        shift and go to state 84

    datosprimitivos                shift and go to state 157

state 116

    (110) sublistVar -> VARIABLE LCLASP VARIABLE RCLASP .

    VARIABLE        reduce using rule 110 (sublistVar -> VARIABLE LCLASP VARIABLE RCLASP .)
    PRINT           reduce using rule 110 (sublistVar -> VARIABLE LCLASP VARIABLE RCLASP .)
    PRINTLN         reduce using rule 110 (sublistVar -> VARIABLE LCLASP VARIABLE RCLASP .)
    RETURN          reduce using rule 110 (sublistVar -> VARIABLE LCLASP VARIABLE RCLASP .)
    VAR             reduce using rule 110 (sublistVar -> VARIABLE LCLASP VARIABLE RCLASP .)
    VAL             reduce using rule 110 (sublistVar -> VARIABLE LCLASP VARIABLE RCLASP .)
    STRINGPALABRA   reduce using rule 110 (sublistVar -> VARIABLE LCLASP VARIABLE RCLASP .)
    FUN             reduce using rule 110 (sublistVar -> VARIABLE LCLASP VARIABLE RCLASP .)
    IF              reduce using rule 110 (sublistVar -> VARIABLE LCLASP VARIABLE RCLASP .)
    WHEN            reduce using rule 110 (sublistVar -> VARIABLE LCLASP VARIABLE RCLASP .)
    FOR             reduce using rule 110 (sublistVar -> VARIABLE LCLASP VARIABLE RCLASP .)
    $end            reduce using rule 110 (sublistVar -> VARIABLE LCLASP VARIABLE RCLASP .)
    RLLAVE          reduce using rule 110 (sublistVar -> VARIABLE LCLASP VARIABLE RCLASP .)


state 117

    (107) sublistIndex -> VARIABLE LCLASP NUMBER DOSPUNTOS . NUMBER RCLASP
    (109) sublistFinal -> VARIABLE LCLASP NUMBER DOSPUNTOS . RCLASP

    NUMBER          shift and go to state 158
    RCLASP          shift and go to state 159


state 118

    (108) sublistInicio -> VARIABLE LCLASP DOSPUNTOS NUMBER . RCLASP

    RCLASP          shift and go to state 160


state 119

    (113) prin -> PRINT LPAREN datosprimitivos RPAREN .

    VARIABLE        reduce using rule 113 (prin -> PRINT LPAREN datosprimitivos RPAREN .)
    PRINT           reduce using rule 113 (prin -> PRINT LPAREN datosprimitivos RPAREN .)
    PRINTLN         reduce using rule 113 (prin -> PRINT LPAREN datosprimitivos RPAREN .)
    RETURN          reduce using rule 113 (prin -> PRINT LPAREN datosprimitivos RPAREN .)
    VAR             reduce using rule 113 (prin -> PRINT LPAREN datosprimitivos RPAREN .)
    VAL             reduce using rule 113 (prin -> PRINT LPAREN datosprimitivos RPAREN .)
    STRINGPALABRA   reduce using rule 113 (prin -> PRINT LPAREN datosprimitivos RPAREN .)
    FUN             reduce using rule 113 (prin -> PRINT LPAREN datosprimitivos RPAREN .)
    IF              reduce using rule 113 (prin -> PRINT LPAREN datosprimitivos RPAREN .)
    WHEN            reduce using rule 113 (prin -> PRINT LPAREN datosprimitivos RPAREN .)
    FOR             reduce using rule 113 (prin -> PRINT LPAREN datosprimitivos RPAREN .)
    $end            reduce using rule 113 (prin -> PRINT LPAREN datosprimitivos RPAREN .)
    RLLAVE          reduce using rule 113 (prin -> PRINT LPAREN datosprimitivos RPAREN .)


state 120

    (114) prin -> PRINTLN LPAREN datosprimitivos RPAREN .

    VARIABLE        reduce using rule 114 (prin -> PRINTLN LPAREN datosprimitivos RPAREN .)
    PRINT           reduce using rule 114 (prin -> PRINTLN LPAREN datosprimitivos RPAREN .)
    PRINTLN         reduce using rule 114 (prin -> PRINTLN LPAREN datosprimitivos RPAREN .)
    RETURN          reduce using rule 114 (prin -> PRINTLN LPAREN datosprimitivos RPAREN .)
    VAR             reduce using rule 114 (prin -> PRINTLN LPAREN datosprimitivos RPAREN .)
    VAL             reduce using rule 114 (prin -> PRINTLN LPAREN datosprimitivos RPAREN .)
    STRINGPALABRA   reduce using rule 114 (prin -> PRINTLN LPAREN datosprimitivos RPAREN .)
    FUN             reduce using rule 114 (prin -> PRINTLN LPAREN datosprimitivos RPAREN .)
    IF              reduce using rule 114 (prin -> PRINTLN LPAREN datosprimitivos RPAREN .)
    WHEN            reduce using rule 114 (prin -> PRINTLN LPAREN datosprimitivos RPAREN .)
    FOR             reduce using rule 114 (prin -> PRINTLN LPAREN datosprimitivos RPAREN .)
    $end            reduce using rule 114 (prin -> PRINTLN LPAREN datosprimitivos RPAREN .)
    RLLAVE          reduce using rule 114 (prin -> PRINTLN LPAREN datosprimitivos RPAREN .)


state 121

    (101) rindex -> STRINGPALABRA PUNTO RINDEX LPAREN . repeCualquier RPAREN
    (54) repeCualquier -> . datosprimitivos
    (55) repeCualquier -> . datosprimitivos COMA repeCualquier
    (36) datosprimitivos -> . NUMBER
    (37) datosprimitivos -> . STRINGPALABRA
    (38) datosprimitivos -> . BOOLEANPALABRA
    (39) datosprimitivos -> . VARIABLE

    NUMBER          shift and go to state 81
    STRINGPALABRA   shift and go to state 82
    BOOLEANPALABRA  shift and go to state 83
    VARIABLE        shift and go to state 84

    repeCualquier                  shift and go to state 161
    datosprimitivos                shift and go to state 156

state 122

    (99) contains -> STRINGPALABRA PUNTO CONTAINS LPAREN . STRINGPALABRA RPAREN
    (100) contains -> STRINGPALABRA PUNTO CONTAINS LPAREN . VARIABLE RPAREN

    STRINGPALABRA   shift and go to state 162
    VARIABLE        shift and go to state 163


state 123

    (90) funConSalidaArg -> FUN VARIABLE LPAREN RPAREN . DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (91) funSinSalidaArg -> FUN VARIABLE LPAREN RPAREN . LLLAVE repetodo RLLAVE

    DOSPUNTOS       shift and go to state 164
    LLLAVE          shift and go to state 165


state 124

    (64) argumento -> tipoDato . VARIABLE

    VARIABLE        shift and go to state 166


state 125

    (88) funConSalida -> FUN VARIABLE LPAREN repeArg . RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (89) funSinSalida -> FUN VARIABLE LPAREN repeArg . RPAREN LLLAVE repetodo RLLAVE

    RPAREN          shift and go to state 167


state 126

    (65) repeArg -> argumento .
    (66) repeArg -> argumento . COMA repeArg

    RPAREN          reduce using rule 65 (repeArg -> argumento .)
    COMA            shift and go to state 168


state 127

    (61) tipoDato -> INT .

    VARIABLE        reduce using rule 61 (tipoDato -> INT .)
    LLLAVE          reduce using rule 61 (tipoDato -> INT .)


state 128

    (62) tipoDato -> STRING .

    VARIABLE        reduce using rule 62 (tipoDato -> STRING .)
    LLLAVE          reduce using rule 62 (tipoDato -> STRING .)


state 129

    (63) tipoDato -> BOOLEAN .

    VARIABLE        reduce using rule 63 (tipoDato -> BOOLEAN .)
    LLLAVE          reduce using rule 63 (tipoDato -> BOOLEAN .)


state 130

    (77) ifBoolean -> IF LPAREN BOOLEANPALABRA RPAREN . LLLAVE repetodo RLLAVE

    LLLAVE          shift and go to state 169


state 131

    (78) ifComparacion -> IF LPAREN comparacion RPAREN . LLLAVE repetodo RLLAVE

    LLLAVE          shift and go to state 170


state 132

    (79) ifVariable -> IF LPAREN VARIABLE RPAREN . LLLAVE repetodo RLLAVE

    LLLAVE          shift and go to state 171


state 133

    (56) comparacion -> valor operadoresComp . valor
    (44) valor -> . NUMBER
    (45) valor -> . VARIABLE

    NUMBER          shift and go to state 93
    VARIABLE        shift and go to state 173

    valor                          shift and go to state 172

state 134

    (57) operadoresComp -> MAYORQUE .

    NUMBER          reduce using rule 57 (operadoresComp -> MAYORQUE .)
    VARIABLE        reduce using rule 57 (operadoresComp -> MAYORQUE .)


state 135

    (58) operadoresComp -> DIFERENTE .

    NUMBER          reduce using rule 58 (operadoresComp -> DIFERENTE .)
    VARIABLE        reduce using rule 58 (operadoresComp -> DIFERENTE .)


state 136

    (59) operadoresComp -> MENORQUE .

    NUMBER          reduce using rule 59 (operadoresComp -> MENORQUE .)
    VARIABLE        reduce using rule 59 (operadoresComp -> MENORQUE .)


state 137

    (60) operadoresComp -> ESIGUAL .

    NUMBER          reduce using rule 60 (operadoresComp -> ESIGUAL .)
    VARIABLE        reduce using rule 60 (operadoresComp -> ESIGUAL .)


state 138

    (81) whenVacio -> WHEN LLLAVE repetodo RLLAVE .

    VARIABLE        reduce using rule 81 (whenVacio -> WHEN LLLAVE repetodo RLLAVE .)
    PRINT           reduce using rule 81 (whenVacio -> WHEN LLLAVE repetodo RLLAVE .)
    PRINTLN         reduce using rule 81 (whenVacio -> WHEN LLLAVE repetodo RLLAVE .)
    RETURN          reduce using rule 81 (whenVacio -> WHEN LLLAVE repetodo RLLAVE .)
    VAR             reduce using rule 81 (whenVacio -> WHEN LLLAVE repetodo RLLAVE .)
    VAL             reduce using rule 81 (whenVacio -> WHEN LLLAVE repetodo RLLAVE .)
    STRINGPALABRA   reduce using rule 81 (whenVacio -> WHEN LLLAVE repetodo RLLAVE .)
    FUN             reduce using rule 81 (whenVacio -> WHEN LLLAVE repetodo RLLAVE .)
    IF              reduce using rule 81 (whenVacio -> WHEN LLLAVE repetodo RLLAVE .)
    WHEN            reduce using rule 81 (whenVacio -> WHEN LLLAVE repetodo RLLAVE .)
    FOR             reduce using rule 81 (whenVacio -> WHEN LLLAVE repetodo RLLAVE .)
    $end            reduce using rule 81 (whenVacio -> WHEN LLLAVE repetodo RLLAVE .)
    RLLAVE          reduce using rule 81 (whenVacio -> WHEN LLLAVE repetodo RLLAVE .)


state 139

    (80) whenVariable -> WHEN LPAREN VARIABLE RPAREN . LLLAVE repetodo RLLAVE

    LLLAVE          shift and go to state 174


state 140

    (83) forRango -> FOR LPAREN VARIABLE IN . NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE
    (82) forVariable -> FOR LPAREN VARIABLE IN . VARIABLE RPAREN LLLAVE repetodo RLLAVE

    NUMBER          shift and go to state 176
    VARIABLE        shift and go to state 175


state 141

    (35) pair -> valovar VARIABLE IGUAL PAIR LPAREN . datosprimitivos COMA datosprimitivos RPAREN
    (36) datosprimitivos -> . NUMBER
    (37) datosprimitivos -> . STRINGPALABRA
    (38) datosprimitivos -> . BOOLEANPALABRA
    (39) datosprimitivos -> . VARIABLE

    NUMBER          shift and go to state 81
    STRINGPALABRA   shift and go to state 82
    BOOLEANPALABRA  shift and go to state 83
    VARIABLE        shift and go to state 84

    datosprimitivos                shift and go to state 177

state 142

    (30) ListaSinTipo -> valovar VARIABLE IGUAL LISTOF LPAREN . repeCualquier RPAREN
    (54) repeCualquier -> . datosprimitivos
    (55) repeCualquier -> . datosprimitivos COMA repeCualquier
    (36) datosprimitivos -> . NUMBER
    (37) datosprimitivos -> . STRINGPALABRA
    (38) datosprimitivos -> . BOOLEANPALABRA
    (39) datosprimitivos -> . VARIABLE

    NUMBER          shift and go to state 81
    STRINGPALABRA   shift and go to state 82
    BOOLEANPALABRA  shift and go to state 83
    VARIABLE        shift and go to state 84

    repeCualquier                  shift and go to state 178
    datosprimitivos                shift and go to state 156

state 143

    (34) ConjuntoSinTipo -> valovar VARIABLE IGUAL SETOF LPAREN . repeCualquier RPAREN
    (54) repeCualquier -> . datosprimitivos
    (55) repeCualquier -> . datosprimitivos COMA repeCualquier
    (36) datosprimitivos -> . NUMBER
    (37) datosprimitivos -> . STRINGPALABRA
    (38) datosprimitivos -> . BOOLEANPALABRA
    (39) datosprimitivos -> . VARIABLE

    NUMBER          shift and go to state 81
    STRINGPALABRA   shift and go to state 82
    BOOLEANPALABRA  shift and go to state 83
    VARIABLE        shift and go to state 84

    repeCualquier                  shift and go to state 179
    datosprimitivos                shift and go to state 156

state 144

    (123) suma -> NUMBER PLUS . NUMBER

    NUMBER          shift and go to state 180


state 145

    (124) resta -> NUMBER MINUS . NUMBER

    NUMBER          shift and go to state 181


state 146

    (125) multiplicacion -> NUMBER TIMES . NUMBER

    NUMBER          shift and go to state 182


state 147

    (126) division -> NUMBER DIVIDE . NUMBER

    NUMBER          shift and go to state 183


state 148

    (118) repeOper -> operacion repeOper .

    VARIABLE        reduce using rule 118 (repeOper -> operacion repeOper .)
    PRINT           reduce using rule 118 (repeOper -> operacion repeOper .)
    PRINTLN         reduce using rule 118 (repeOper -> operacion repeOper .)
    RETURN          reduce using rule 118 (repeOper -> operacion repeOper .)
    VAR             reduce using rule 118 (repeOper -> operacion repeOper .)
    VAL             reduce using rule 118 (repeOper -> operacion repeOper .)
    STRINGPALABRA   reduce using rule 118 (repeOper -> operacion repeOper .)
    FUN             reduce using rule 118 (repeOper -> operacion repeOper .)
    IF              reduce using rule 118 (repeOper -> operacion repeOper .)
    WHEN            reduce using rule 118 (repeOper -> operacion repeOper .)
    FOR             reduce using rule 118 (repeOper -> operacion repeOper .)
    $end            reduce using rule 118 (repeOper -> operacion repeOper .)
    RLLAVE          reduce using rule 118 (repeOper -> operacion repeOper .)


state 149

    (123) suma -> NUMBER . PLUS NUMBER
    (124) resta -> NUMBER . MINUS NUMBER
    (125) multiplicacion -> NUMBER . TIMES NUMBER
    (126) division -> NUMBER . DIVIDE NUMBER

    PLUS            shift and go to state 144
    MINUS           shift and go to state 145
    TIMES           shift and go to state 146
    DIVIDE          shift and go to state 147


state 150

    (27) ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE . INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN
    (28) ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE . STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN
    (29) ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE . BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN

    INT             shift and go to state 184
    STRING          shift and go to state 185
    BOOLEAN         shift and go to state 186


state 151

    (23) variableConTipo -> valovar VARIABLE DOSPUNTOS INT IGUAL . NUMBER

    NUMBER          shift and go to state 187


state 152

    (22) variableConTipo -> valovar VARIABLE DOSPUNTOS STRING IGUAL . STRINGPALABRA

    STRINGPALABRA   shift and go to state 188


state 153

    (24) variableConTipo -> valovar VARIABLE DOSPUNTOS BOOLEAN IGUAL .

    VARIABLE        reduce using rule 24 (variableConTipo -> valovar VARIABLE DOSPUNTOS BOOLEAN IGUAL .)
    PRINT           reduce using rule 24 (variableConTipo -> valovar VARIABLE DOSPUNTOS BOOLEAN IGUAL .)
    PRINTLN         reduce using rule 24 (variableConTipo -> valovar VARIABLE DOSPUNTOS BOOLEAN IGUAL .)
    RETURN          reduce using rule 24 (variableConTipo -> valovar VARIABLE DOSPUNTOS BOOLEAN IGUAL .)
    VAR             reduce using rule 24 (variableConTipo -> valovar VARIABLE DOSPUNTOS BOOLEAN IGUAL .)
    VAL             reduce using rule 24 (variableConTipo -> valovar VARIABLE DOSPUNTOS BOOLEAN IGUAL .)
    STRINGPALABRA   reduce using rule 24 (variableConTipo -> valovar VARIABLE DOSPUNTOS BOOLEAN IGUAL .)
    FUN             reduce using rule 24 (variableConTipo -> valovar VARIABLE DOSPUNTOS BOOLEAN IGUAL .)
    IF              reduce using rule 24 (variableConTipo -> valovar VARIABLE DOSPUNTOS BOOLEAN IGUAL .)
    WHEN            reduce using rule 24 (variableConTipo -> valovar VARIABLE DOSPUNTOS BOOLEAN IGUAL .)
    FOR             reduce using rule 24 (variableConTipo -> valovar VARIABLE DOSPUNTOS BOOLEAN IGUAL .)
    $end            reduce using rule 24 (variableConTipo -> valovar VARIABLE DOSPUNTOS BOOLEAN IGUAL .)
    RLLAVE          reduce using rule 24 (variableConTipo -> valovar VARIABLE DOSPUNTOS BOOLEAN IGUAL .)


state 154

    (31) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE . INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN
    (32) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE . STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN
    (33) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE . BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN

    INT             shift and go to state 189
    STRING          shift and go to state 190
    BOOLEAN         shift and go to state 191


state 155

    (102) rindex -> VARIABLE PUNTO RINDEX LPAREN repeCualquier . RPAREN

    RPAREN          shift and go to state 192


state 156

    (54) repeCualquier -> datosprimitivos .
    (55) repeCualquier -> datosprimitivos . COMA repeCualquier

    RPAREN          reduce using rule 54 (repeCualquier -> datosprimitivos .)
    COMA            shift and go to state 193


state 157

    (98) contains -> VARIABLE PUNTO CONTAINS LPAREN datosprimitivos . RPAREN

    RPAREN          shift and go to state 194


state 158

    (107) sublistIndex -> VARIABLE LCLASP NUMBER DOSPUNTOS NUMBER . RCLASP

    RCLASP          shift and go to state 195


state 159

    (109) sublistFinal -> VARIABLE LCLASP NUMBER DOSPUNTOS RCLASP .

    VARIABLE        reduce using rule 109 (sublistFinal -> VARIABLE LCLASP NUMBER DOSPUNTOS RCLASP .)
    PRINT           reduce using rule 109 (sublistFinal -> VARIABLE LCLASP NUMBER DOSPUNTOS RCLASP .)
    PRINTLN         reduce using rule 109 (sublistFinal -> VARIABLE LCLASP NUMBER DOSPUNTOS RCLASP .)
    RETURN          reduce using rule 109 (sublistFinal -> VARIABLE LCLASP NUMBER DOSPUNTOS RCLASP .)
    VAR             reduce using rule 109 (sublistFinal -> VARIABLE LCLASP NUMBER DOSPUNTOS RCLASP .)
    VAL             reduce using rule 109 (sublistFinal -> VARIABLE LCLASP NUMBER DOSPUNTOS RCLASP .)
    STRINGPALABRA   reduce using rule 109 (sublistFinal -> VARIABLE LCLASP NUMBER DOSPUNTOS RCLASP .)
    FUN             reduce using rule 109 (sublistFinal -> VARIABLE LCLASP NUMBER DOSPUNTOS RCLASP .)
    IF              reduce using rule 109 (sublistFinal -> VARIABLE LCLASP NUMBER DOSPUNTOS RCLASP .)
    WHEN            reduce using rule 109 (sublistFinal -> VARIABLE LCLASP NUMBER DOSPUNTOS RCLASP .)
    FOR             reduce using rule 109 (sublistFinal -> VARIABLE LCLASP NUMBER DOSPUNTOS RCLASP .)
    $end            reduce using rule 109 (sublistFinal -> VARIABLE LCLASP NUMBER DOSPUNTOS RCLASP .)
    RLLAVE          reduce using rule 109 (sublistFinal -> VARIABLE LCLASP NUMBER DOSPUNTOS RCLASP .)


state 160

    (108) sublistInicio -> VARIABLE LCLASP DOSPUNTOS NUMBER RCLASP .

    VARIABLE        reduce using rule 108 (sublistInicio -> VARIABLE LCLASP DOSPUNTOS NUMBER RCLASP .)
    PRINT           reduce using rule 108 (sublistInicio -> VARIABLE LCLASP DOSPUNTOS NUMBER RCLASP .)
    PRINTLN         reduce using rule 108 (sublistInicio -> VARIABLE LCLASP DOSPUNTOS NUMBER RCLASP .)
    RETURN          reduce using rule 108 (sublistInicio -> VARIABLE LCLASP DOSPUNTOS NUMBER RCLASP .)
    VAR             reduce using rule 108 (sublistInicio -> VARIABLE LCLASP DOSPUNTOS NUMBER RCLASP .)
    VAL             reduce using rule 108 (sublistInicio -> VARIABLE LCLASP DOSPUNTOS NUMBER RCLASP .)
    STRINGPALABRA   reduce using rule 108 (sublistInicio -> VARIABLE LCLASP DOSPUNTOS NUMBER RCLASP .)
    FUN             reduce using rule 108 (sublistInicio -> VARIABLE LCLASP DOSPUNTOS NUMBER RCLASP .)
    IF              reduce using rule 108 (sublistInicio -> VARIABLE LCLASP DOSPUNTOS NUMBER RCLASP .)
    WHEN            reduce using rule 108 (sublistInicio -> VARIABLE LCLASP DOSPUNTOS NUMBER RCLASP .)
    FOR             reduce using rule 108 (sublistInicio -> VARIABLE LCLASP DOSPUNTOS NUMBER RCLASP .)
    $end            reduce using rule 108 (sublistInicio -> VARIABLE LCLASP DOSPUNTOS NUMBER RCLASP .)
    RLLAVE          reduce using rule 108 (sublistInicio -> VARIABLE LCLASP DOSPUNTOS NUMBER RCLASP .)


state 161

    (101) rindex -> STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier . RPAREN

    RPAREN          shift and go to state 196


state 162

    (99) contains -> STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA . RPAREN

    RPAREN          shift and go to state 197


state 163

    (100) contains -> STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE . RPAREN

    RPAREN          shift and go to state 198


state 164

    (90) funConSalidaArg -> FUN VARIABLE LPAREN RPAREN DOSPUNTOS . tipoDato LLLAVE repetodo RLLAVE
    (61) tipoDato -> . INT
    (62) tipoDato -> . STRING
    (63) tipoDato -> . BOOLEAN

    INT             shift and go to state 127
    STRING          shift and go to state 128
    BOOLEAN         shift and go to state 129

    tipoDato                       shift and go to state 199

state 165

    (91) funSinSalidaArg -> FUN VARIABLE LPAREN RPAREN LLLAVE . repetodo RLLAVE
    (14) repetodo -> . todo
    (15) repetodo -> . todo repetodo
    (2) todo -> . lista
    (3) todo -> . variable
    (4) todo -> . conjunto
    (5) todo -> . pair
    (6) todo -> . control
    (7) todo -> . adicionales
    (8) todo -> . funcion
    (9) todo -> . sublist
    (10) todo -> . readline
    (11) todo -> . prin
    (12) todo -> . contador
    (13) todo -> . retor
    (16) lista -> . ListaConTipo
    (17) lista -> . ListaSinTipo
    (18) variable -> . variableConTipo
    (19) variable -> . variableSinTipo
    (20) conjunto -> . ConjuntoConTipo
    (21) conjunto -> . ConjuntoSinTipo
    (35) pair -> . valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN
    (67) control -> . if
    (68) control -> . when
    (69) control -> . for
    (92) adicionales -> . size
    (93) adicionales -> . rindex
    (94) adicionales -> . sublist
    (95) adicionales -> . contains
    (84) funcion -> . funConSalidaArg
    (85) funcion -> . funConSalida
    (86) funcion -> . funSinSalidaArg
    (87) funcion -> . funSinSalida
    (103) sublist -> . sublistIndex
    (104) sublist -> . sublistInicio
    (105) sublist -> . sublistFinal
    (106) sublist -> . sublistVar
    (111) readline -> . VARIABLE IGUAL READLINE
    (112) readline -> . valovar VARIABLE IGUAL READLINE
    (113) prin -> . PRINT LPAREN datosprimitivos RPAREN
    (114) prin -> . PRINTLN LPAREN datosprimitivos RPAREN
    (115) contador -> . VARIABLE PLUS PLUS
    (116) retor -> . RETURN VARIABLE
    (27) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN
    (28) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN
    (29) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN
    (30) ListaSinTipo -> . valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN
    (22) variableConTipo -> . valovar VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA
    (23) variableConTipo -> . valovar VARIABLE DOSPUNTOS INT IGUAL NUMBER
    (24) variableConTipo -> . valovar VARIABLE DOSPUNTOS BOOLEAN IGUAL
    (25) variableSinTipo -> . valovar VARIABLE IGUAL datosprimitivos
    (26) variableSinTipo -> . valovar VARIABLE IGUAL repeOper
    (31) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN
    (32) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN
    (33) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN
    (34) ConjuntoSinTipo -> . valovar VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN
    (40) valovar -> . VAR
    (41) valovar -> . VAL
    (70) if -> . ifBoolean
    (71) if -> . ifComparacion
    (72) if -> . ifVariable
    (73) when -> . whenVacio
    (74) when -> . whenVariable
    (75) for -> . forRango
    (76) for -> . forVariable
    (96) size -> . VARIABLE PUNTO SIZE
    (101) rindex -> . STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier RPAREN
    (102) rindex -> . VARIABLE PUNTO RINDEX LPAREN repeCualquier RPAREN
    (97) contains -> .
    (98) contains -> . VARIABLE PUNTO CONTAINS LPAREN datosprimitivos RPAREN
    (99) contains -> . STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN
    (100) contains -> . STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE RPAREN
    (90) funConSalidaArg -> . FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (88) funConSalida -> . FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (91) funSinSalidaArg -> . FUN VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE
    (89) funSinSalida -> . FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE
    (107) sublistIndex -> . VARIABLE LCLASP NUMBER DOSPUNTOS NUMBER RCLASP
    (108) sublistInicio -> . VARIABLE LCLASP DOSPUNTOS NUMBER RCLASP
    (109) sublistFinal -> . VARIABLE LCLASP NUMBER DOSPUNTOS RCLASP
    (110) sublistVar -> . VARIABLE LCLASP VARIABLE RCLASP
    (77) ifBoolean -> . IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE
    (78) ifComparacion -> . IF LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE
    (79) ifVariable -> . IF LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE
    (81) whenVacio -> . WHEN LLLAVE repetodo RLLAVE
    (80) whenVariable -> . WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE
    (83) forRango -> . FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE
    (82) forVariable -> . FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for STRINGPALABRA resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHEN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    VARIABLE        shift and go to state 23
    PRINT           shift and go to state 38
    PRINTLN         shift and go to state 39
    RETURN          shift and go to state 40
    VAR             shift and go to state 42
    VAL             shift and go to state 43
    STRINGPALABRA   shift and go to state 41
    RLLAVE          reduce using rule 97 (contains -> .)
    FUN             shift and go to state 51
    IF              shift and go to state 52
    WHEN            shift and go to state 53
    FOR             shift and go to state 54

  ! VARIABLE        [ reduce using rule 97 (contains -> .) ]
  ! PRINT           [ reduce using rule 97 (contains -> .) ]
  ! PRINTLN         [ reduce using rule 97 (contains -> .) ]
  ! RETURN          [ reduce using rule 97 (contains -> .) ]
  ! VAR             [ reduce using rule 97 (contains -> .) ]
  ! VAL             [ reduce using rule 97 (contains -> .) ]
  ! STRINGPALABRA   [ reduce using rule 97 (contains -> .) ]
  ! FUN             [ reduce using rule 97 (contains -> .) ]
  ! IF              [ reduce using rule 97 (contains -> .) ]
  ! WHEN            [ reduce using rule 97 (contains -> .) ]
  ! FOR             [ reduce using rule 97 (contains -> .) ]

    repetodo                       shift and go to state 200
    todo                           shift and go to state 3
    lista                          shift and go to state 4
    variable                       shift and go to state 5
    conjunto                       shift and go to state 6
    pair                           shift and go to state 7
    control                        shift and go to state 8
    adicionales                    shift and go to state 9
    funcion                        shift and go to state 10
    sublist                        shift and go to state 11
    readline                       shift and go to state 12
    prin                           shift and go to state 13
    contador                       shift and go to state 14
    retor                          shift and go to state 15
    ListaConTipo                   shift and go to state 16
    ListaSinTipo                   shift and go to state 17
    variableConTipo                shift and go to state 18
    variableSinTipo                shift and go to state 19
    ConjuntoConTipo                shift and go to state 20
    ConjuntoSinTipo                shift and go to state 21
    valovar                        shift and go to state 22
    if                             shift and go to state 24
    when                           shift and go to state 25
    for                            shift and go to state 26
    size                           shift and go to state 27
    rindex                         shift and go to state 28
    contains                       shift and go to state 29
    funConSalidaArg                shift and go to state 30
    funConSalida                   shift and go to state 31
    funSinSalidaArg                shift and go to state 32
    funSinSalida                   shift and go to state 33
    sublistIndex                   shift and go to state 34
    sublistInicio                  shift and go to state 35
    sublistFinal                   shift and go to state 36
    sublistVar                     shift and go to state 37
    ifBoolean                      shift and go to state 44
    ifComparacion                  shift and go to state 45
    ifVariable                     shift and go to state 46
    whenVacio                      shift and go to state 47
    whenVariable                   shift and go to state 48
    forRango                       shift and go to state 49
    forVariable                    shift and go to state 50

state 166

    (64) argumento -> tipoDato VARIABLE .

    COMA            reduce using rule 64 (argumento -> tipoDato VARIABLE .)
    RPAREN          reduce using rule 64 (argumento -> tipoDato VARIABLE .)


state 167

    (88) funConSalida -> FUN VARIABLE LPAREN repeArg RPAREN . DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (89) funSinSalida -> FUN VARIABLE LPAREN repeArg RPAREN . LLLAVE repetodo RLLAVE

    DOSPUNTOS       shift and go to state 201
    LLLAVE          shift and go to state 202


state 168

    (66) repeArg -> argumento COMA . repeArg
    (65) repeArg -> . argumento
    (66) repeArg -> . argumento COMA repeArg
    (64) argumento -> . tipoDato VARIABLE
    (61) tipoDato -> . INT
    (62) tipoDato -> . STRING
    (63) tipoDato -> . BOOLEAN

    INT             shift and go to state 127
    STRING          shift and go to state 128
    BOOLEAN         shift and go to state 129

    argumento                      shift and go to state 126
    repeArg                        shift and go to state 203
    tipoDato                       shift and go to state 124

state 169

    (77) ifBoolean -> IF LPAREN BOOLEANPALABRA RPAREN LLLAVE . repetodo RLLAVE
    (14) repetodo -> . todo
    (15) repetodo -> . todo repetodo
    (2) todo -> . lista
    (3) todo -> . variable
    (4) todo -> . conjunto
    (5) todo -> . pair
    (6) todo -> . control
    (7) todo -> . adicionales
    (8) todo -> . funcion
    (9) todo -> . sublist
    (10) todo -> . readline
    (11) todo -> . prin
    (12) todo -> . contador
    (13) todo -> . retor
    (16) lista -> . ListaConTipo
    (17) lista -> . ListaSinTipo
    (18) variable -> . variableConTipo
    (19) variable -> . variableSinTipo
    (20) conjunto -> . ConjuntoConTipo
    (21) conjunto -> . ConjuntoSinTipo
    (35) pair -> . valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN
    (67) control -> . if
    (68) control -> . when
    (69) control -> . for
    (92) adicionales -> . size
    (93) adicionales -> . rindex
    (94) adicionales -> . sublist
    (95) adicionales -> . contains
    (84) funcion -> . funConSalidaArg
    (85) funcion -> . funConSalida
    (86) funcion -> . funSinSalidaArg
    (87) funcion -> . funSinSalida
    (103) sublist -> . sublistIndex
    (104) sublist -> . sublistInicio
    (105) sublist -> . sublistFinal
    (106) sublist -> . sublistVar
    (111) readline -> . VARIABLE IGUAL READLINE
    (112) readline -> . valovar VARIABLE IGUAL READLINE
    (113) prin -> . PRINT LPAREN datosprimitivos RPAREN
    (114) prin -> . PRINTLN LPAREN datosprimitivos RPAREN
    (115) contador -> . VARIABLE PLUS PLUS
    (116) retor -> . RETURN VARIABLE
    (27) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN
    (28) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN
    (29) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN
    (30) ListaSinTipo -> . valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN
    (22) variableConTipo -> . valovar VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA
    (23) variableConTipo -> . valovar VARIABLE DOSPUNTOS INT IGUAL NUMBER
    (24) variableConTipo -> . valovar VARIABLE DOSPUNTOS BOOLEAN IGUAL
    (25) variableSinTipo -> . valovar VARIABLE IGUAL datosprimitivos
    (26) variableSinTipo -> . valovar VARIABLE IGUAL repeOper
    (31) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN
    (32) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN
    (33) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN
    (34) ConjuntoSinTipo -> . valovar VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN
    (40) valovar -> . VAR
    (41) valovar -> . VAL
    (70) if -> . ifBoolean
    (71) if -> . ifComparacion
    (72) if -> . ifVariable
    (73) when -> . whenVacio
    (74) when -> . whenVariable
    (75) for -> . forRango
    (76) for -> . forVariable
    (96) size -> . VARIABLE PUNTO SIZE
    (101) rindex -> . STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier RPAREN
    (102) rindex -> . VARIABLE PUNTO RINDEX LPAREN repeCualquier RPAREN
    (97) contains -> .
    (98) contains -> . VARIABLE PUNTO CONTAINS LPAREN datosprimitivos RPAREN
    (99) contains -> . STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN
    (100) contains -> . STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE RPAREN
    (90) funConSalidaArg -> . FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (88) funConSalida -> . FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (91) funSinSalidaArg -> . FUN VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE
    (89) funSinSalida -> . FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE
    (107) sublistIndex -> . VARIABLE LCLASP NUMBER DOSPUNTOS NUMBER RCLASP
    (108) sublistInicio -> . VARIABLE LCLASP DOSPUNTOS NUMBER RCLASP
    (109) sublistFinal -> . VARIABLE LCLASP NUMBER DOSPUNTOS RCLASP
    (110) sublistVar -> . VARIABLE LCLASP VARIABLE RCLASP
    (77) ifBoolean -> . IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE
    (78) ifComparacion -> . IF LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE
    (79) ifVariable -> . IF LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE
    (81) whenVacio -> . WHEN LLLAVE repetodo RLLAVE
    (80) whenVariable -> . WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE
    (83) forRango -> . FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE
    (82) forVariable -> . FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for STRINGPALABRA resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHEN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    VARIABLE        shift and go to state 23
    PRINT           shift and go to state 38
    PRINTLN         shift and go to state 39
    RETURN          shift and go to state 40
    VAR             shift and go to state 42
    VAL             shift and go to state 43
    STRINGPALABRA   shift and go to state 41
    RLLAVE          reduce using rule 97 (contains -> .)
    FUN             shift and go to state 51
    IF              shift and go to state 52
    WHEN            shift and go to state 53
    FOR             shift and go to state 54

  ! VARIABLE        [ reduce using rule 97 (contains -> .) ]
  ! PRINT           [ reduce using rule 97 (contains -> .) ]
  ! PRINTLN         [ reduce using rule 97 (contains -> .) ]
  ! RETURN          [ reduce using rule 97 (contains -> .) ]
  ! VAR             [ reduce using rule 97 (contains -> .) ]
  ! VAL             [ reduce using rule 97 (contains -> .) ]
  ! STRINGPALABRA   [ reduce using rule 97 (contains -> .) ]
  ! FUN             [ reduce using rule 97 (contains -> .) ]
  ! IF              [ reduce using rule 97 (contains -> .) ]
  ! WHEN            [ reduce using rule 97 (contains -> .) ]
  ! FOR             [ reduce using rule 97 (contains -> .) ]

    repetodo                       shift and go to state 204
    todo                           shift and go to state 3
    lista                          shift and go to state 4
    variable                       shift and go to state 5
    conjunto                       shift and go to state 6
    pair                           shift and go to state 7
    control                        shift and go to state 8
    adicionales                    shift and go to state 9
    funcion                        shift and go to state 10
    sublist                        shift and go to state 11
    readline                       shift and go to state 12
    prin                           shift and go to state 13
    contador                       shift and go to state 14
    retor                          shift and go to state 15
    ListaConTipo                   shift and go to state 16
    ListaSinTipo                   shift and go to state 17
    variableConTipo                shift and go to state 18
    variableSinTipo                shift and go to state 19
    ConjuntoConTipo                shift and go to state 20
    ConjuntoSinTipo                shift and go to state 21
    valovar                        shift and go to state 22
    if                             shift and go to state 24
    when                           shift and go to state 25
    for                            shift and go to state 26
    size                           shift and go to state 27
    rindex                         shift and go to state 28
    contains                       shift and go to state 29
    funConSalidaArg                shift and go to state 30
    funConSalida                   shift and go to state 31
    funSinSalidaArg                shift and go to state 32
    funSinSalida                   shift and go to state 33
    sublistIndex                   shift and go to state 34
    sublistInicio                  shift and go to state 35
    sublistFinal                   shift and go to state 36
    sublistVar                     shift and go to state 37
    ifBoolean                      shift and go to state 44
    ifComparacion                  shift and go to state 45
    ifVariable                     shift and go to state 46
    whenVacio                      shift and go to state 47
    whenVariable                   shift and go to state 48
    forRango                       shift and go to state 49
    forVariable                    shift and go to state 50

state 170

    (78) ifComparacion -> IF LPAREN comparacion RPAREN LLLAVE . repetodo RLLAVE
    (14) repetodo -> . todo
    (15) repetodo -> . todo repetodo
    (2) todo -> . lista
    (3) todo -> . variable
    (4) todo -> . conjunto
    (5) todo -> . pair
    (6) todo -> . control
    (7) todo -> . adicionales
    (8) todo -> . funcion
    (9) todo -> . sublist
    (10) todo -> . readline
    (11) todo -> . prin
    (12) todo -> . contador
    (13) todo -> . retor
    (16) lista -> . ListaConTipo
    (17) lista -> . ListaSinTipo
    (18) variable -> . variableConTipo
    (19) variable -> . variableSinTipo
    (20) conjunto -> . ConjuntoConTipo
    (21) conjunto -> . ConjuntoSinTipo
    (35) pair -> . valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN
    (67) control -> . if
    (68) control -> . when
    (69) control -> . for
    (92) adicionales -> . size
    (93) adicionales -> . rindex
    (94) adicionales -> . sublist
    (95) adicionales -> . contains
    (84) funcion -> . funConSalidaArg
    (85) funcion -> . funConSalida
    (86) funcion -> . funSinSalidaArg
    (87) funcion -> . funSinSalida
    (103) sublist -> . sublistIndex
    (104) sublist -> . sublistInicio
    (105) sublist -> . sublistFinal
    (106) sublist -> . sublistVar
    (111) readline -> . VARIABLE IGUAL READLINE
    (112) readline -> . valovar VARIABLE IGUAL READLINE
    (113) prin -> . PRINT LPAREN datosprimitivos RPAREN
    (114) prin -> . PRINTLN LPAREN datosprimitivos RPAREN
    (115) contador -> . VARIABLE PLUS PLUS
    (116) retor -> . RETURN VARIABLE
    (27) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN
    (28) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN
    (29) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN
    (30) ListaSinTipo -> . valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN
    (22) variableConTipo -> . valovar VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA
    (23) variableConTipo -> . valovar VARIABLE DOSPUNTOS INT IGUAL NUMBER
    (24) variableConTipo -> . valovar VARIABLE DOSPUNTOS BOOLEAN IGUAL
    (25) variableSinTipo -> . valovar VARIABLE IGUAL datosprimitivos
    (26) variableSinTipo -> . valovar VARIABLE IGUAL repeOper
    (31) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN
    (32) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN
    (33) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN
    (34) ConjuntoSinTipo -> . valovar VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN
    (40) valovar -> . VAR
    (41) valovar -> . VAL
    (70) if -> . ifBoolean
    (71) if -> . ifComparacion
    (72) if -> . ifVariable
    (73) when -> . whenVacio
    (74) when -> . whenVariable
    (75) for -> . forRango
    (76) for -> . forVariable
    (96) size -> . VARIABLE PUNTO SIZE
    (101) rindex -> . STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier RPAREN
    (102) rindex -> . VARIABLE PUNTO RINDEX LPAREN repeCualquier RPAREN
    (97) contains -> .
    (98) contains -> . VARIABLE PUNTO CONTAINS LPAREN datosprimitivos RPAREN
    (99) contains -> . STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN
    (100) contains -> . STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE RPAREN
    (90) funConSalidaArg -> . FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (88) funConSalida -> . FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (91) funSinSalidaArg -> . FUN VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE
    (89) funSinSalida -> . FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE
    (107) sublistIndex -> . VARIABLE LCLASP NUMBER DOSPUNTOS NUMBER RCLASP
    (108) sublistInicio -> . VARIABLE LCLASP DOSPUNTOS NUMBER RCLASP
    (109) sublistFinal -> . VARIABLE LCLASP NUMBER DOSPUNTOS RCLASP
    (110) sublistVar -> . VARIABLE LCLASP VARIABLE RCLASP
    (77) ifBoolean -> . IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE
    (78) ifComparacion -> . IF LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE
    (79) ifVariable -> . IF LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE
    (81) whenVacio -> . WHEN LLLAVE repetodo RLLAVE
    (80) whenVariable -> . WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE
    (83) forRango -> . FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE
    (82) forVariable -> . FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for STRINGPALABRA resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHEN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    VARIABLE        shift and go to state 23
    PRINT           shift and go to state 38
    PRINTLN         shift and go to state 39
    RETURN          shift and go to state 40
    VAR             shift and go to state 42
    VAL             shift and go to state 43
    STRINGPALABRA   shift and go to state 41
    RLLAVE          reduce using rule 97 (contains -> .)
    FUN             shift and go to state 51
    IF              shift and go to state 52
    WHEN            shift and go to state 53
    FOR             shift and go to state 54

  ! VARIABLE        [ reduce using rule 97 (contains -> .) ]
  ! PRINT           [ reduce using rule 97 (contains -> .) ]
  ! PRINTLN         [ reduce using rule 97 (contains -> .) ]
  ! RETURN          [ reduce using rule 97 (contains -> .) ]
  ! VAR             [ reduce using rule 97 (contains -> .) ]
  ! VAL             [ reduce using rule 97 (contains -> .) ]
  ! STRINGPALABRA   [ reduce using rule 97 (contains -> .) ]
  ! FUN             [ reduce using rule 97 (contains -> .) ]
  ! IF              [ reduce using rule 97 (contains -> .) ]
  ! WHEN            [ reduce using rule 97 (contains -> .) ]
  ! FOR             [ reduce using rule 97 (contains -> .) ]

    repetodo                       shift and go to state 205
    todo                           shift and go to state 3
    lista                          shift and go to state 4
    variable                       shift and go to state 5
    conjunto                       shift and go to state 6
    pair                           shift and go to state 7
    control                        shift and go to state 8
    adicionales                    shift and go to state 9
    funcion                        shift and go to state 10
    sublist                        shift and go to state 11
    readline                       shift and go to state 12
    prin                           shift and go to state 13
    contador                       shift and go to state 14
    retor                          shift and go to state 15
    ListaConTipo                   shift and go to state 16
    ListaSinTipo                   shift and go to state 17
    variableConTipo                shift and go to state 18
    variableSinTipo                shift and go to state 19
    ConjuntoConTipo                shift and go to state 20
    ConjuntoSinTipo                shift and go to state 21
    valovar                        shift and go to state 22
    if                             shift and go to state 24
    when                           shift and go to state 25
    for                            shift and go to state 26
    size                           shift and go to state 27
    rindex                         shift and go to state 28
    contains                       shift and go to state 29
    funConSalidaArg                shift and go to state 30
    funConSalida                   shift and go to state 31
    funSinSalidaArg                shift and go to state 32
    funSinSalida                   shift and go to state 33
    sublistIndex                   shift and go to state 34
    sublistInicio                  shift and go to state 35
    sublistFinal                   shift and go to state 36
    sublistVar                     shift and go to state 37
    ifBoolean                      shift and go to state 44
    ifComparacion                  shift and go to state 45
    ifVariable                     shift and go to state 46
    whenVacio                      shift and go to state 47
    whenVariable                   shift and go to state 48
    forRango                       shift and go to state 49
    forVariable                    shift and go to state 50

state 171

    (79) ifVariable -> IF LPAREN VARIABLE RPAREN LLLAVE . repetodo RLLAVE
    (14) repetodo -> . todo
    (15) repetodo -> . todo repetodo
    (2) todo -> . lista
    (3) todo -> . variable
    (4) todo -> . conjunto
    (5) todo -> . pair
    (6) todo -> . control
    (7) todo -> . adicionales
    (8) todo -> . funcion
    (9) todo -> . sublist
    (10) todo -> . readline
    (11) todo -> . prin
    (12) todo -> . contador
    (13) todo -> . retor
    (16) lista -> . ListaConTipo
    (17) lista -> . ListaSinTipo
    (18) variable -> . variableConTipo
    (19) variable -> . variableSinTipo
    (20) conjunto -> . ConjuntoConTipo
    (21) conjunto -> . ConjuntoSinTipo
    (35) pair -> . valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN
    (67) control -> . if
    (68) control -> . when
    (69) control -> . for
    (92) adicionales -> . size
    (93) adicionales -> . rindex
    (94) adicionales -> . sublist
    (95) adicionales -> . contains
    (84) funcion -> . funConSalidaArg
    (85) funcion -> . funConSalida
    (86) funcion -> . funSinSalidaArg
    (87) funcion -> . funSinSalida
    (103) sublist -> . sublistIndex
    (104) sublist -> . sublistInicio
    (105) sublist -> . sublistFinal
    (106) sublist -> . sublistVar
    (111) readline -> . VARIABLE IGUAL READLINE
    (112) readline -> . valovar VARIABLE IGUAL READLINE
    (113) prin -> . PRINT LPAREN datosprimitivos RPAREN
    (114) prin -> . PRINTLN LPAREN datosprimitivos RPAREN
    (115) contador -> . VARIABLE PLUS PLUS
    (116) retor -> . RETURN VARIABLE
    (27) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN
    (28) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN
    (29) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN
    (30) ListaSinTipo -> . valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN
    (22) variableConTipo -> . valovar VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA
    (23) variableConTipo -> . valovar VARIABLE DOSPUNTOS INT IGUAL NUMBER
    (24) variableConTipo -> . valovar VARIABLE DOSPUNTOS BOOLEAN IGUAL
    (25) variableSinTipo -> . valovar VARIABLE IGUAL datosprimitivos
    (26) variableSinTipo -> . valovar VARIABLE IGUAL repeOper
    (31) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN
    (32) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN
    (33) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN
    (34) ConjuntoSinTipo -> . valovar VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN
    (40) valovar -> . VAR
    (41) valovar -> . VAL
    (70) if -> . ifBoolean
    (71) if -> . ifComparacion
    (72) if -> . ifVariable
    (73) when -> . whenVacio
    (74) when -> . whenVariable
    (75) for -> . forRango
    (76) for -> . forVariable
    (96) size -> . VARIABLE PUNTO SIZE
    (101) rindex -> . STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier RPAREN
    (102) rindex -> . VARIABLE PUNTO RINDEX LPAREN repeCualquier RPAREN
    (97) contains -> .
    (98) contains -> . VARIABLE PUNTO CONTAINS LPAREN datosprimitivos RPAREN
    (99) contains -> . STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN
    (100) contains -> . STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE RPAREN
    (90) funConSalidaArg -> . FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (88) funConSalida -> . FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (91) funSinSalidaArg -> . FUN VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE
    (89) funSinSalida -> . FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE
    (107) sublistIndex -> . VARIABLE LCLASP NUMBER DOSPUNTOS NUMBER RCLASP
    (108) sublistInicio -> . VARIABLE LCLASP DOSPUNTOS NUMBER RCLASP
    (109) sublistFinal -> . VARIABLE LCLASP NUMBER DOSPUNTOS RCLASP
    (110) sublistVar -> . VARIABLE LCLASP VARIABLE RCLASP
    (77) ifBoolean -> . IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE
    (78) ifComparacion -> . IF LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE
    (79) ifVariable -> . IF LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE
    (81) whenVacio -> . WHEN LLLAVE repetodo RLLAVE
    (80) whenVariable -> . WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE
    (83) forRango -> . FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE
    (82) forVariable -> . FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for STRINGPALABRA resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHEN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    VARIABLE        shift and go to state 23
    PRINT           shift and go to state 38
    PRINTLN         shift and go to state 39
    RETURN          shift and go to state 40
    VAR             shift and go to state 42
    VAL             shift and go to state 43
    STRINGPALABRA   shift and go to state 41
    RLLAVE          reduce using rule 97 (contains -> .)
    FUN             shift and go to state 51
    IF              shift and go to state 52
    WHEN            shift and go to state 53
    FOR             shift and go to state 54

  ! VARIABLE        [ reduce using rule 97 (contains -> .) ]
  ! PRINT           [ reduce using rule 97 (contains -> .) ]
  ! PRINTLN         [ reduce using rule 97 (contains -> .) ]
  ! RETURN          [ reduce using rule 97 (contains -> .) ]
  ! VAR             [ reduce using rule 97 (contains -> .) ]
  ! VAL             [ reduce using rule 97 (contains -> .) ]
  ! STRINGPALABRA   [ reduce using rule 97 (contains -> .) ]
  ! FUN             [ reduce using rule 97 (contains -> .) ]
  ! IF              [ reduce using rule 97 (contains -> .) ]
  ! WHEN            [ reduce using rule 97 (contains -> .) ]
  ! FOR             [ reduce using rule 97 (contains -> .) ]

    repetodo                       shift and go to state 206
    todo                           shift and go to state 3
    lista                          shift and go to state 4
    variable                       shift and go to state 5
    conjunto                       shift and go to state 6
    pair                           shift and go to state 7
    control                        shift and go to state 8
    adicionales                    shift and go to state 9
    funcion                        shift and go to state 10
    sublist                        shift and go to state 11
    readline                       shift and go to state 12
    prin                           shift and go to state 13
    contador                       shift and go to state 14
    retor                          shift and go to state 15
    ListaConTipo                   shift and go to state 16
    ListaSinTipo                   shift and go to state 17
    variableConTipo                shift and go to state 18
    variableSinTipo                shift and go to state 19
    ConjuntoConTipo                shift and go to state 20
    ConjuntoSinTipo                shift and go to state 21
    valovar                        shift and go to state 22
    if                             shift and go to state 24
    when                           shift and go to state 25
    for                            shift and go to state 26
    size                           shift and go to state 27
    rindex                         shift and go to state 28
    contains                       shift and go to state 29
    funConSalidaArg                shift and go to state 30
    funConSalida                   shift and go to state 31
    funSinSalidaArg                shift and go to state 32
    funSinSalida                   shift and go to state 33
    sublistIndex                   shift and go to state 34
    sublistInicio                  shift and go to state 35
    sublistFinal                   shift and go to state 36
    sublistVar                     shift and go to state 37
    ifBoolean                      shift and go to state 44
    ifComparacion                  shift and go to state 45
    ifVariable                     shift and go to state 46
    whenVacio                      shift and go to state 47
    whenVariable                   shift and go to state 48
    forRango                       shift and go to state 49
    forVariable                    shift and go to state 50

state 172

    (56) comparacion -> valor operadoresComp valor .

    RPAREN          reduce using rule 56 (comparacion -> valor operadoresComp valor .)


state 173

    (45) valor -> VARIABLE .

    RPAREN          reduce using rule 45 (valor -> VARIABLE .)
    COMA            reduce using rule 45 (valor -> VARIABLE .)


state 174

    (80) whenVariable -> WHEN LPAREN VARIABLE RPAREN LLLAVE . repetodo RLLAVE
    (14) repetodo -> . todo
    (15) repetodo -> . todo repetodo
    (2) todo -> . lista
    (3) todo -> . variable
    (4) todo -> . conjunto
    (5) todo -> . pair
    (6) todo -> . control
    (7) todo -> . adicionales
    (8) todo -> . funcion
    (9) todo -> . sublist
    (10) todo -> . readline
    (11) todo -> . prin
    (12) todo -> . contador
    (13) todo -> . retor
    (16) lista -> . ListaConTipo
    (17) lista -> . ListaSinTipo
    (18) variable -> . variableConTipo
    (19) variable -> . variableSinTipo
    (20) conjunto -> . ConjuntoConTipo
    (21) conjunto -> . ConjuntoSinTipo
    (35) pair -> . valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN
    (67) control -> . if
    (68) control -> . when
    (69) control -> . for
    (92) adicionales -> . size
    (93) adicionales -> . rindex
    (94) adicionales -> . sublist
    (95) adicionales -> . contains
    (84) funcion -> . funConSalidaArg
    (85) funcion -> . funConSalida
    (86) funcion -> . funSinSalidaArg
    (87) funcion -> . funSinSalida
    (103) sublist -> . sublistIndex
    (104) sublist -> . sublistInicio
    (105) sublist -> . sublistFinal
    (106) sublist -> . sublistVar
    (111) readline -> . VARIABLE IGUAL READLINE
    (112) readline -> . valovar VARIABLE IGUAL READLINE
    (113) prin -> . PRINT LPAREN datosprimitivos RPAREN
    (114) prin -> . PRINTLN LPAREN datosprimitivos RPAREN
    (115) contador -> . VARIABLE PLUS PLUS
    (116) retor -> . RETURN VARIABLE
    (27) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN
    (28) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN
    (29) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN
    (30) ListaSinTipo -> . valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN
    (22) variableConTipo -> . valovar VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA
    (23) variableConTipo -> . valovar VARIABLE DOSPUNTOS INT IGUAL NUMBER
    (24) variableConTipo -> . valovar VARIABLE DOSPUNTOS BOOLEAN IGUAL
    (25) variableSinTipo -> . valovar VARIABLE IGUAL datosprimitivos
    (26) variableSinTipo -> . valovar VARIABLE IGUAL repeOper
    (31) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN
    (32) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN
    (33) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN
    (34) ConjuntoSinTipo -> . valovar VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN
    (40) valovar -> . VAR
    (41) valovar -> . VAL
    (70) if -> . ifBoolean
    (71) if -> . ifComparacion
    (72) if -> . ifVariable
    (73) when -> . whenVacio
    (74) when -> . whenVariable
    (75) for -> . forRango
    (76) for -> . forVariable
    (96) size -> . VARIABLE PUNTO SIZE
    (101) rindex -> . STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier RPAREN
    (102) rindex -> . VARIABLE PUNTO RINDEX LPAREN repeCualquier RPAREN
    (97) contains -> .
    (98) contains -> . VARIABLE PUNTO CONTAINS LPAREN datosprimitivos RPAREN
    (99) contains -> . STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN
    (100) contains -> . STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE RPAREN
    (90) funConSalidaArg -> . FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (88) funConSalida -> . FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (91) funSinSalidaArg -> . FUN VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE
    (89) funSinSalida -> . FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE
    (107) sublistIndex -> . VARIABLE LCLASP NUMBER DOSPUNTOS NUMBER RCLASP
    (108) sublistInicio -> . VARIABLE LCLASP DOSPUNTOS NUMBER RCLASP
    (109) sublistFinal -> . VARIABLE LCLASP NUMBER DOSPUNTOS RCLASP
    (110) sublistVar -> . VARIABLE LCLASP VARIABLE RCLASP
    (77) ifBoolean -> . IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE
    (78) ifComparacion -> . IF LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE
    (79) ifVariable -> . IF LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE
    (81) whenVacio -> . WHEN LLLAVE repetodo RLLAVE
    (80) whenVariable -> . WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE
    (83) forRango -> . FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE
    (82) forVariable -> . FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for STRINGPALABRA resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHEN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    VARIABLE        shift and go to state 23
    PRINT           shift and go to state 38
    PRINTLN         shift and go to state 39
    RETURN          shift and go to state 40
    VAR             shift and go to state 42
    VAL             shift and go to state 43
    STRINGPALABRA   shift and go to state 41
    RLLAVE          reduce using rule 97 (contains -> .)
    FUN             shift and go to state 51
    IF              shift and go to state 52
    WHEN            shift and go to state 53
    FOR             shift and go to state 54

  ! VARIABLE        [ reduce using rule 97 (contains -> .) ]
  ! PRINT           [ reduce using rule 97 (contains -> .) ]
  ! PRINTLN         [ reduce using rule 97 (contains -> .) ]
  ! RETURN          [ reduce using rule 97 (contains -> .) ]
  ! VAR             [ reduce using rule 97 (contains -> .) ]
  ! VAL             [ reduce using rule 97 (contains -> .) ]
  ! STRINGPALABRA   [ reduce using rule 97 (contains -> .) ]
  ! FUN             [ reduce using rule 97 (contains -> .) ]
  ! IF              [ reduce using rule 97 (contains -> .) ]
  ! WHEN            [ reduce using rule 97 (contains -> .) ]
  ! FOR             [ reduce using rule 97 (contains -> .) ]

    repetodo                       shift and go to state 207
    todo                           shift and go to state 3
    lista                          shift and go to state 4
    variable                       shift and go to state 5
    conjunto                       shift and go to state 6
    pair                           shift and go to state 7
    control                        shift and go to state 8
    adicionales                    shift and go to state 9
    funcion                        shift and go to state 10
    sublist                        shift and go to state 11
    readline                       shift and go to state 12
    prin                           shift and go to state 13
    contador                       shift and go to state 14
    retor                          shift and go to state 15
    ListaConTipo                   shift and go to state 16
    ListaSinTipo                   shift and go to state 17
    variableConTipo                shift and go to state 18
    variableSinTipo                shift and go to state 19
    ConjuntoConTipo                shift and go to state 20
    ConjuntoSinTipo                shift and go to state 21
    valovar                        shift and go to state 22
    if                             shift and go to state 24
    when                           shift and go to state 25
    for                            shift and go to state 26
    size                           shift and go to state 27
    rindex                         shift and go to state 28
    contains                       shift and go to state 29
    funConSalidaArg                shift and go to state 30
    funConSalida                   shift and go to state 31
    funSinSalidaArg                shift and go to state 32
    funSinSalida                   shift and go to state 33
    sublistIndex                   shift and go to state 34
    sublistInicio                  shift and go to state 35
    sublistFinal                   shift and go to state 36
    sublistVar                     shift and go to state 37
    ifBoolean                      shift and go to state 44
    ifComparacion                  shift and go to state 45
    ifVariable                     shift and go to state 46
    whenVacio                      shift and go to state 47
    whenVariable                   shift and go to state 48
    forRango                       shift and go to state 49
    forVariable                    shift and go to state 50

state 175

    (82) forVariable -> FOR LPAREN VARIABLE IN VARIABLE . RPAREN LLLAVE repetodo RLLAVE

    RPAREN          shift and go to state 208


state 176

    (83) forRango -> FOR LPAREN VARIABLE IN NUMBER . PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE

    PUNTO           shift and go to state 209


state 177

    (35) pair -> valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos . COMA datosprimitivos RPAREN

    COMA            shift and go to state 210


state 178

    (30) ListaSinTipo -> valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier . RPAREN

    RPAREN          shift and go to state 211


state 179

    (34) ConjuntoSinTipo -> valovar VARIABLE IGUAL SETOF LPAREN repeCualquier . RPAREN

    RPAREN          shift and go to state 212


state 180

    (123) suma -> NUMBER PLUS NUMBER .

    NUMBER          reduce using rule 123 (suma -> NUMBER PLUS NUMBER .)
    VARIABLE        reduce using rule 123 (suma -> NUMBER PLUS NUMBER .)
    PRINT           reduce using rule 123 (suma -> NUMBER PLUS NUMBER .)
    PRINTLN         reduce using rule 123 (suma -> NUMBER PLUS NUMBER .)
    RETURN          reduce using rule 123 (suma -> NUMBER PLUS NUMBER .)
    VAR             reduce using rule 123 (suma -> NUMBER PLUS NUMBER .)
    VAL             reduce using rule 123 (suma -> NUMBER PLUS NUMBER .)
    STRINGPALABRA   reduce using rule 123 (suma -> NUMBER PLUS NUMBER .)
    FUN             reduce using rule 123 (suma -> NUMBER PLUS NUMBER .)
    IF              reduce using rule 123 (suma -> NUMBER PLUS NUMBER .)
    WHEN            reduce using rule 123 (suma -> NUMBER PLUS NUMBER .)
    FOR             reduce using rule 123 (suma -> NUMBER PLUS NUMBER .)
    $end            reduce using rule 123 (suma -> NUMBER PLUS NUMBER .)
    RLLAVE          reduce using rule 123 (suma -> NUMBER PLUS NUMBER .)


state 181

    (124) resta -> NUMBER MINUS NUMBER .

    NUMBER          reduce using rule 124 (resta -> NUMBER MINUS NUMBER .)
    VARIABLE        reduce using rule 124 (resta -> NUMBER MINUS NUMBER .)
    PRINT           reduce using rule 124 (resta -> NUMBER MINUS NUMBER .)
    PRINTLN         reduce using rule 124 (resta -> NUMBER MINUS NUMBER .)
    RETURN          reduce using rule 124 (resta -> NUMBER MINUS NUMBER .)
    VAR             reduce using rule 124 (resta -> NUMBER MINUS NUMBER .)
    VAL             reduce using rule 124 (resta -> NUMBER MINUS NUMBER .)
    STRINGPALABRA   reduce using rule 124 (resta -> NUMBER MINUS NUMBER .)
    FUN             reduce using rule 124 (resta -> NUMBER MINUS NUMBER .)
    IF              reduce using rule 124 (resta -> NUMBER MINUS NUMBER .)
    WHEN            reduce using rule 124 (resta -> NUMBER MINUS NUMBER .)
    FOR             reduce using rule 124 (resta -> NUMBER MINUS NUMBER .)
    $end            reduce using rule 124 (resta -> NUMBER MINUS NUMBER .)
    RLLAVE          reduce using rule 124 (resta -> NUMBER MINUS NUMBER .)


state 182

    (125) multiplicacion -> NUMBER TIMES NUMBER .

    NUMBER          reduce using rule 125 (multiplicacion -> NUMBER TIMES NUMBER .)
    VARIABLE        reduce using rule 125 (multiplicacion -> NUMBER TIMES NUMBER .)
    PRINT           reduce using rule 125 (multiplicacion -> NUMBER TIMES NUMBER .)
    PRINTLN         reduce using rule 125 (multiplicacion -> NUMBER TIMES NUMBER .)
    RETURN          reduce using rule 125 (multiplicacion -> NUMBER TIMES NUMBER .)
    VAR             reduce using rule 125 (multiplicacion -> NUMBER TIMES NUMBER .)
    VAL             reduce using rule 125 (multiplicacion -> NUMBER TIMES NUMBER .)
    STRINGPALABRA   reduce using rule 125 (multiplicacion -> NUMBER TIMES NUMBER .)
    FUN             reduce using rule 125 (multiplicacion -> NUMBER TIMES NUMBER .)
    IF              reduce using rule 125 (multiplicacion -> NUMBER TIMES NUMBER .)
    WHEN            reduce using rule 125 (multiplicacion -> NUMBER TIMES NUMBER .)
    FOR             reduce using rule 125 (multiplicacion -> NUMBER TIMES NUMBER .)
    $end            reduce using rule 125 (multiplicacion -> NUMBER TIMES NUMBER .)
    RLLAVE          reduce using rule 125 (multiplicacion -> NUMBER TIMES NUMBER .)


state 183

    (126) division -> NUMBER DIVIDE NUMBER .

    NUMBER          reduce using rule 126 (division -> NUMBER DIVIDE NUMBER .)
    VARIABLE        reduce using rule 126 (division -> NUMBER DIVIDE NUMBER .)
    PRINT           reduce using rule 126 (division -> NUMBER DIVIDE NUMBER .)
    PRINTLN         reduce using rule 126 (division -> NUMBER DIVIDE NUMBER .)
    RETURN          reduce using rule 126 (division -> NUMBER DIVIDE NUMBER .)
    VAR             reduce using rule 126 (division -> NUMBER DIVIDE NUMBER .)
    VAL             reduce using rule 126 (division -> NUMBER DIVIDE NUMBER .)
    STRINGPALABRA   reduce using rule 126 (division -> NUMBER DIVIDE NUMBER .)
    FUN             reduce using rule 126 (division -> NUMBER DIVIDE NUMBER .)
    IF              reduce using rule 126 (division -> NUMBER DIVIDE NUMBER .)
    WHEN            reduce using rule 126 (division -> NUMBER DIVIDE NUMBER .)
    FOR             reduce using rule 126 (division -> NUMBER DIVIDE NUMBER .)
    $end            reduce using rule 126 (division -> NUMBER DIVIDE NUMBER .)
    RLLAVE          reduce using rule 126 (division -> NUMBER DIVIDE NUMBER .)


state 184

    (27) ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE INT . MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN

    MAYORQUE        shift and go to state 213


state 185

    (28) ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING . MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN

    MAYORQUE        shift and go to state 214


state 186

    (29) ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN . MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN

    MAYORQUE        shift and go to state 215


state 187

    (23) variableConTipo -> valovar VARIABLE DOSPUNTOS INT IGUAL NUMBER .

    VARIABLE        reduce using rule 23 (variableConTipo -> valovar VARIABLE DOSPUNTOS INT IGUAL NUMBER .)
    PRINT           reduce using rule 23 (variableConTipo -> valovar VARIABLE DOSPUNTOS INT IGUAL NUMBER .)
    PRINTLN         reduce using rule 23 (variableConTipo -> valovar VARIABLE DOSPUNTOS INT IGUAL NUMBER .)
    RETURN          reduce using rule 23 (variableConTipo -> valovar VARIABLE DOSPUNTOS INT IGUAL NUMBER .)
    VAR             reduce using rule 23 (variableConTipo -> valovar VARIABLE DOSPUNTOS INT IGUAL NUMBER .)
    VAL             reduce using rule 23 (variableConTipo -> valovar VARIABLE DOSPUNTOS INT IGUAL NUMBER .)
    STRINGPALABRA   reduce using rule 23 (variableConTipo -> valovar VARIABLE DOSPUNTOS INT IGUAL NUMBER .)
    FUN             reduce using rule 23 (variableConTipo -> valovar VARIABLE DOSPUNTOS INT IGUAL NUMBER .)
    IF              reduce using rule 23 (variableConTipo -> valovar VARIABLE DOSPUNTOS INT IGUAL NUMBER .)
    WHEN            reduce using rule 23 (variableConTipo -> valovar VARIABLE DOSPUNTOS INT IGUAL NUMBER .)
    FOR             reduce using rule 23 (variableConTipo -> valovar VARIABLE DOSPUNTOS INT IGUAL NUMBER .)
    $end            reduce using rule 23 (variableConTipo -> valovar VARIABLE DOSPUNTOS INT IGUAL NUMBER .)
    RLLAVE          reduce using rule 23 (variableConTipo -> valovar VARIABLE DOSPUNTOS INT IGUAL NUMBER .)


state 188

    (22) variableConTipo -> valovar VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA .

    VARIABLE        reduce using rule 22 (variableConTipo -> valovar VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA .)
    PRINT           reduce using rule 22 (variableConTipo -> valovar VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA .)
    PRINTLN         reduce using rule 22 (variableConTipo -> valovar VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA .)
    RETURN          reduce using rule 22 (variableConTipo -> valovar VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA .)
    VAR             reduce using rule 22 (variableConTipo -> valovar VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA .)
    VAL             reduce using rule 22 (variableConTipo -> valovar VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA .)
    STRINGPALABRA   reduce using rule 22 (variableConTipo -> valovar VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA .)
    FUN             reduce using rule 22 (variableConTipo -> valovar VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA .)
    IF              reduce using rule 22 (variableConTipo -> valovar VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA .)
    WHEN            reduce using rule 22 (variableConTipo -> valovar VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA .)
    FOR             reduce using rule 22 (variableConTipo -> valovar VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA .)
    $end            reduce using rule 22 (variableConTipo -> valovar VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA .)
    RLLAVE          reduce using rule 22 (variableConTipo -> valovar VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA .)


state 189

    (31) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE INT . MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN

    MAYORQUE        shift and go to state 216


state 190

    (32) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE STRING . MAYORQUE IGUAL SETOF LPAREN repeString RPAREN

    MAYORQUE        shift and go to state 217


state 191

    (33) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN . MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN

    MAYORQUE        shift and go to state 218


state 192

    (102) rindex -> VARIABLE PUNTO RINDEX LPAREN repeCualquier RPAREN .

    VARIABLE        reduce using rule 102 (rindex -> VARIABLE PUNTO RINDEX LPAREN repeCualquier RPAREN .)
    PRINT           reduce using rule 102 (rindex -> VARIABLE PUNTO RINDEX LPAREN repeCualquier RPAREN .)
    PRINTLN         reduce using rule 102 (rindex -> VARIABLE PUNTO RINDEX LPAREN repeCualquier RPAREN .)
    RETURN          reduce using rule 102 (rindex -> VARIABLE PUNTO RINDEX LPAREN repeCualquier RPAREN .)
    VAR             reduce using rule 102 (rindex -> VARIABLE PUNTO RINDEX LPAREN repeCualquier RPAREN .)
    VAL             reduce using rule 102 (rindex -> VARIABLE PUNTO RINDEX LPAREN repeCualquier RPAREN .)
    STRINGPALABRA   reduce using rule 102 (rindex -> VARIABLE PUNTO RINDEX LPAREN repeCualquier RPAREN .)
    FUN             reduce using rule 102 (rindex -> VARIABLE PUNTO RINDEX LPAREN repeCualquier RPAREN .)
    IF              reduce using rule 102 (rindex -> VARIABLE PUNTO RINDEX LPAREN repeCualquier RPAREN .)
    WHEN            reduce using rule 102 (rindex -> VARIABLE PUNTO RINDEX LPAREN repeCualquier RPAREN .)
    FOR             reduce using rule 102 (rindex -> VARIABLE PUNTO RINDEX LPAREN repeCualquier RPAREN .)
    $end            reduce using rule 102 (rindex -> VARIABLE PUNTO RINDEX LPAREN repeCualquier RPAREN .)
    RLLAVE          reduce using rule 102 (rindex -> VARIABLE PUNTO RINDEX LPAREN repeCualquier RPAREN .)


state 193

    (55) repeCualquier -> datosprimitivos COMA . repeCualquier
    (54) repeCualquier -> . datosprimitivos
    (55) repeCualquier -> . datosprimitivos COMA repeCualquier
    (36) datosprimitivos -> . NUMBER
    (37) datosprimitivos -> . STRINGPALABRA
    (38) datosprimitivos -> . BOOLEANPALABRA
    (39) datosprimitivos -> . VARIABLE

    NUMBER          shift and go to state 81
    STRINGPALABRA   shift and go to state 82
    BOOLEANPALABRA  shift and go to state 83
    VARIABLE        shift and go to state 84

    datosprimitivos                shift and go to state 156
    repeCualquier                  shift and go to state 219

state 194

    (98) contains -> VARIABLE PUNTO CONTAINS LPAREN datosprimitivos RPAREN .

    VARIABLE        reduce using rule 98 (contains -> VARIABLE PUNTO CONTAINS LPAREN datosprimitivos RPAREN .)
    PRINT           reduce using rule 98 (contains -> VARIABLE PUNTO CONTAINS LPAREN datosprimitivos RPAREN .)
    PRINTLN         reduce using rule 98 (contains -> VARIABLE PUNTO CONTAINS LPAREN datosprimitivos RPAREN .)
    RETURN          reduce using rule 98 (contains -> VARIABLE PUNTO CONTAINS LPAREN datosprimitivos RPAREN .)
    VAR             reduce using rule 98 (contains -> VARIABLE PUNTO CONTAINS LPAREN datosprimitivos RPAREN .)
    VAL             reduce using rule 98 (contains -> VARIABLE PUNTO CONTAINS LPAREN datosprimitivos RPAREN .)
    STRINGPALABRA   reduce using rule 98 (contains -> VARIABLE PUNTO CONTAINS LPAREN datosprimitivos RPAREN .)
    FUN             reduce using rule 98 (contains -> VARIABLE PUNTO CONTAINS LPAREN datosprimitivos RPAREN .)
    IF              reduce using rule 98 (contains -> VARIABLE PUNTO CONTAINS LPAREN datosprimitivos RPAREN .)
    WHEN            reduce using rule 98 (contains -> VARIABLE PUNTO CONTAINS LPAREN datosprimitivos RPAREN .)
    FOR             reduce using rule 98 (contains -> VARIABLE PUNTO CONTAINS LPAREN datosprimitivos RPAREN .)
    $end            reduce using rule 98 (contains -> VARIABLE PUNTO CONTAINS LPAREN datosprimitivos RPAREN .)
    RLLAVE          reduce using rule 98 (contains -> VARIABLE PUNTO CONTAINS LPAREN datosprimitivos RPAREN .)


state 195

    (107) sublistIndex -> VARIABLE LCLASP NUMBER DOSPUNTOS NUMBER RCLASP .

    VARIABLE        reduce using rule 107 (sublistIndex -> VARIABLE LCLASP NUMBER DOSPUNTOS NUMBER RCLASP .)
    PRINT           reduce using rule 107 (sublistIndex -> VARIABLE LCLASP NUMBER DOSPUNTOS NUMBER RCLASP .)
    PRINTLN         reduce using rule 107 (sublistIndex -> VARIABLE LCLASP NUMBER DOSPUNTOS NUMBER RCLASP .)
    RETURN          reduce using rule 107 (sublistIndex -> VARIABLE LCLASP NUMBER DOSPUNTOS NUMBER RCLASP .)
    VAR             reduce using rule 107 (sublistIndex -> VARIABLE LCLASP NUMBER DOSPUNTOS NUMBER RCLASP .)
    VAL             reduce using rule 107 (sublistIndex -> VARIABLE LCLASP NUMBER DOSPUNTOS NUMBER RCLASP .)
    STRINGPALABRA   reduce using rule 107 (sublistIndex -> VARIABLE LCLASP NUMBER DOSPUNTOS NUMBER RCLASP .)
    FUN             reduce using rule 107 (sublistIndex -> VARIABLE LCLASP NUMBER DOSPUNTOS NUMBER RCLASP .)
    IF              reduce using rule 107 (sublistIndex -> VARIABLE LCLASP NUMBER DOSPUNTOS NUMBER RCLASP .)
    WHEN            reduce using rule 107 (sublistIndex -> VARIABLE LCLASP NUMBER DOSPUNTOS NUMBER RCLASP .)
    FOR             reduce using rule 107 (sublistIndex -> VARIABLE LCLASP NUMBER DOSPUNTOS NUMBER RCLASP .)
    $end            reduce using rule 107 (sublistIndex -> VARIABLE LCLASP NUMBER DOSPUNTOS NUMBER RCLASP .)
    RLLAVE          reduce using rule 107 (sublistIndex -> VARIABLE LCLASP NUMBER DOSPUNTOS NUMBER RCLASP .)


state 196

    (101) rindex -> STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier RPAREN .

    VARIABLE        reduce using rule 101 (rindex -> STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier RPAREN .)
    PRINT           reduce using rule 101 (rindex -> STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier RPAREN .)
    PRINTLN         reduce using rule 101 (rindex -> STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier RPAREN .)
    RETURN          reduce using rule 101 (rindex -> STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier RPAREN .)
    VAR             reduce using rule 101 (rindex -> STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier RPAREN .)
    VAL             reduce using rule 101 (rindex -> STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier RPAREN .)
    STRINGPALABRA   reduce using rule 101 (rindex -> STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier RPAREN .)
    FUN             reduce using rule 101 (rindex -> STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier RPAREN .)
    IF              reduce using rule 101 (rindex -> STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier RPAREN .)
    WHEN            reduce using rule 101 (rindex -> STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier RPAREN .)
    FOR             reduce using rule 101 (rindex -> STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier RPAREN .)
    $end            reduce using rule 101 (rindex -> STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier RPAREN .)
    RLLAVE          reduce using rule 101 (rindex -> STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier RPAREN .)


state 197

    (99) contains -> STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN .

    VARIABLE        reduce using rule 99 (contains -> STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN .)
    PRINT           reduce using rule 99 (contains -> STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN .)
    PRINTLN         reduce using rule 99 (contains -> STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN .)
    RETURN          reduce using rule 99 (contains -> STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN .)
    VAR             reduce using rule 99 (contains -> STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN .)
    VAL             reduce using rule 99 (contains -> STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN .)
    STRINGPALABRA   reduce using rule 99 (contains -> STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN .)
    FUN             reduce using rule 99 (contains -> STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN .)
    IF              reduce using rule 99 (contains -> STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN .)
    WHEN            reduce using rule 99 (contains -> STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN .)
    FOR             reduce using rule 99 (contains -> STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN .)
    $end            reduce using rule 99 (contains -> STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN .)
    RLLAVE          reduce using rule 99 (contains -> STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN .)


state 198

    (100) contains -> STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE RPAREN .

    VARIABLE        reduce using rule 100 (contains -> STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE RPAREN .)
    PRINT           reduce using rule 100 (contains -> STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE RPAREN .)
    PRINTLN         reduce using rule 100 (contains -> STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE RPAREN .)
    RETURN          reduce using rule 100 (contains -> STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE RPAREN .)
    VAR             reduce using rule 100 (contains -> STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE RPAREN .)
    VAL             reduce using rule 100 (contains -> STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE RPAREN .)
    STRINGPALABRA   reduce using rule 100 (contains -> STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE RPAREN .)
    FUN             reduce using rule 100 (contains -> STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE RPAREN .)
    IF              reduce using rule 100 (contains -> STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE RPAREN .)
    WHEN            reduce using rule 100 (contains -> STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE RPAREN .)
    FOR             reduce using rule 100 (contains -> STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE RPAREN .)
    $end            reduce using rule 100 (contains -> STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE RPAREN .)
    RLLAVE          reduce using rule 100 (contains -> STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE RPAREN .)


state 199

    (90) funConSalidaArg -> FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato . LLLAVE repetodo RLLAVE

    LLLAVE          shift and go to state 220


state 200

    (91) funSinSalidaArg -> FUN VARIABLE LPAREN RPAREN LLLAVE repetodo . RLLAVE

    RLLAVE          shift and go to state 221


state 201

    (88) funConSalida -> FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS . tipoDato LLLAVE repetodo RLLAVE
    (61) tipoDato -> . INT
    (62) tipoDato -> . STRING
    (63) tipoDato -> . BOOLEAN

    INT             shift and go to state 127
    STRING          shift and go to state 128
    BOOLEAN         shift and go to state 129

    tipoDato                       shift and go to state 222

state 202

    (89) funSinSalida -> FUN VARIABLE LPAREN repeArg RPAREN LLLAVE . repetodo RLLAVE
    (14) repetodo -> . todo
    (15) repetodo -> . todo repetodo
    (2) todo -> . lista
    (3) todo -> . variable
    (4) todo -> . conjunto
    (5) todo -> . pair
    (6) todo -> . control
    (7) todo -> . adicionales
    (8) todo -> . funcion
    (9) todo -> . sublist
    (10) todo -> . readline
    (11) todo -> . prin
    (12) todo -> . contador
    (13) todo -> . retor
    (16) lista -> . ListaConTipo
    (17) lista -> . ListaSinTipo
    (18) variable -> . variableConTipo
    (19) variable -> . variableSinTipo
    (20) conjunto -> . ConjuntoConTipo
    (21) conjunto -> . ConjuntoSinTipo
    (35) pair -> . valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN
    (67) control -> . if
    (68) control -> . when
    (69) control -> . for
    (92) adicionales -> . size
    (93) adicionales -> . rindex
    (94) adicionales -> . sublist
    (95) adicionales -> . contains
    (84) funcion -> . funConSalidaArg
    (85) funcion -> . funConSalida
    (86) funcion -> . funSinSalidaArg
    (87) funcion -> . funSinSalida
    (103) sublist -> . sublistIndex
    (104) sublist -> . sublistInicio
    (105) sublist -> . sublistFinal
    (106) sublist -> . sublistVar
    (111) readline -> . VARIABLE IGUAL READLINE
    (112) readline -> . valovar VARIABLE IGUAL READLINE
    (113) prin -> . PRINT LPAREN datosprimitivos RPAREN
    (114) prin -> . PRINTLN LPAREN datosprimitivos RPAREN
    (115) contador -> . VARIABLE PLUS PLUS
    (116) retor -> . RETURN VARIABLE
    (27) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN
    (28) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN
    (29) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN
    (30) ListaSinTipo -> . valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN
    (22) variableConTipo -> . valovar VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA
    (23) variableConTipo -> . valovar VARIABLE DOSPUNTOS INT IGUAL NUMBER
    (24) variableConTipo -> . valovar VARIABLE DOSPUNTOS BOOLEAN IGUAL
    (25) variableSinTipo -> . valovar VARIABLE IGUAL datosprimitivos
    (26) variableSinTipo -> . valovar VARIABLE IGUAL repeOper
    (31) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN
    (32) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN
    (33) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN
    (34) ConjuntoSinTipo -> . valovar VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN
    (40) valovar -> . VAR
    (41) valovar -> . VAL
    (70) if -> . ifBoolean
    (71) if -> . ifComparacion
    (72) if -> . ifVariable
    (73) when -> . whenVacio
    (74) when -> . whenVariable
    (75) for -> . forRango
    (76) for -> . forVariable
    (96) size -> . VARIABLE PUNTO SIZE
    (101) rindex -> . STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier RPAREN
    (102) rindex -> . VARIABLE PUNTO RINDEX LPAREN repeCualquier RPAREN
    (97) contains -> .
    (98) contains -> . VARIABLE PUNTO CONTAINS LPAREN datosprimitivos RPAREN
    (99) contains -> . STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN
    (100) contains -> . STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE RPAREN
    (90) funConSalidaArg -> . FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (88) funConSalida -> . FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (91) funSinSalidaArg -> . FUN VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE
    (89) funSinSalida -> . FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE
    (107) sublistIndex -> . VARIABLE LCLASP NUMBER DOSPUNTOS NUMBER RCLASP
    (108) sublistInicio -> . VARIABLE LCLASP DOSPUNTOS NUMBER RCLASP
    (109) sublistFinal -> . VARIABLE LCLASP NUMBER DOSPUNTOS RCLASP
    (110) sublistVar -> . VARIABLE LCLASP VARIABLE RCLASP
    (77) ifBoolean -> . IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE
    (78) ifComparacion -> . IF LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE
    (79) ifVariable -> . IF LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE
    (81) whenVacio -> . WHEN LLLAVE repetodo RLLAVE
    (80) whenVariable -> . WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE
    (83) forRango -> . FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE
    (82) forVariable -> . FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for STRINGPALABRA resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHEN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    VARIABLE        shift and go to state 23
    PRINT           shift and go to state 38
    PRINTLN         shift and go to state 39
    RETURN          shift and go to state 40
    VAR             shift and go to state 42
    VAL             shift and go to state 43
    STRINGPALABRA   shift and go to state 41
    RLLAVE          reduce using rule 97 (contains -> .)
    FUN             shift and go to state 51
    IF              shift and go to state 52
    WHEN            shift and go to state 53
    FOR             shift and go to state 54

  ! VARIABLE        [ reduce using rule 97 (contains -> .) ]
  ! PRINT           [ reduce using rule 97 (contains -> .) ]
  ! PRINTLN         [ reduce using rule 97 (contains -> .) ]
  ! RETURN          [ reduce using rule 97 (contains -> .) ]
  ! VAR             [ reduce using rule 97 (contains -> .) ]
  ! VAL             [ reduce using rule 97 (contains -> .) ]
  ! STRINGPALABRA   [ reduce using rule 97 (contains -> .) ]
  ! FUN             [ reduce using rule 97 (contains -> .) ]
  ! IF              [ reduce using rule 97 (contains -> .) ]
  ! WHEN            [ reduce using rule 97 (contains -> .) ]
  ! FOR             [ reduce using rule 97 (contains -> .) ]

    repetodo                       shift and go to state 223
    todo                           shift and go to state 3
    lista                          shift and go to state 4
    variable                       shift and go to state 5
    conjunto                       shift and go to state 6
    pair                           shift and go to state 7
    control                        shift and go to state 8
    adicionales                    shift and go to state 9
    funcion                        shift and go to state 10
    sublist                        shift and go to state 11
    readline                       shift and go to state 12
    prin                           shift and go to state 13
    contador                       shift and go to state 14
    retor                          shift and go to state 15
    ListaConTipo                   shift and go to state 16
    ListaSinTipo                   shift and go to state 17
    variableConTipo                shift and go to state 18
    variableSinTipo                shift and go to state 19
    ConjuntoConTipo                shift and go to state 20
    ConjuntoSinTipo                shift and go to state 21
    valovar                        shift and go to state 22
    if                             shift and go to state 24
    when                           shift and go to state 25
    for                            shift and go to state 26
    size                           shift and go to state 27
    rindex                         shift and go to state 28
    contains                       shift and go to state 29
    funConSalidaArg                shift and go to state 30
    funConSalida                   shift and go to state 31
    funSinSalidaArg                shift and go to state 32
    funSinSalida                   shift and go to state 33
    sublistIndex                   shift and go to state 34
    sublistInicio                  shift and go to state 35
    sublistFinal                   shift and go to state 36
    sublistVar                     shift and go to state 37
    ifBoolean                      shift and go to state 44
    ifComparacion                  shift and go to state 45
    ifVariable                     shift and go to state 46
    whenVacio                      shift and go to state 47
    whenVariable                   shift and go to state 48
    forRango                       shift and go to state 49
    forVariable                    shift and go to state 50

state 203

    (66) repeArg -> argumento COMA repeArg .

    RPAREN          reduce using rule 66 (repeArg -> argumento COMA repeArg .)


state 204

    (77) ifBoolean -> IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo . RLLAVE

    RLLAVE          shift and go to state 224


state 205

    (78) ifComparacion -> IF LPAREN comparacion RPAREN LLLAVE repetodo . RLLAVE

    RLLAVE          shift and go to state 225


state 206

    (79) ifVariable -> IF LPAREN VARIABLE RPAREN LLLAVE repetodo . RLLAVE

    RLLAVE          shift and go to state 226


state 207

    (80) whenVariable -> WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo . RLLAVE

    RLLAVE          shift and go to state 227


state 208

    (82) forVariable -> FOR LPAREN VARIABLE IN VARIABLE RPAREN . LLLAVE repetodo RLLAVE

    LLLAVE          shift and go to state 228


state 209

    (83) forRango -> FOR LPAREN VARIABLE IN NUMBER PUNTO . PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE

    PUNTO           shift and go to state 229


state 210

    (35) pair -> valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA . datosprimitivos RPAREN
    (36) datosprimitivos -> . NUMBER
    (37) datosprimitivos -> . STRINGPALABRA
    (38) datosprimitivos -> . BOOLEANPALABRA
    (39) datosprimitivos -> . VARIABLE

    NUMBER          shift and go to state 81
    STRINGPALABRA   shift and go to state 82
    BOOLEANPALABRA  shift and go to state 83
    VARIABLE        shift and go to state 84

    datosprimitivos                shift and go to state 230

state 211

    (30) ListaSinTipo -> valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN .

    VARIABLE        reduce using rule 30 (ListaSinTipo -> valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN .)
    PRINT           reduce using rule 30 (ListaSinTipo -> valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN .)
    PRINTLN         reduce using rule 30 (ListaSinTipo -> valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN .)
    RETURN          reduce using rule 30 (ListaSinTipo -> valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN .)
    VAR             reduce using rule 30 (ListaSinTipo -> valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN .)
    VAL             reduce using rule 30 (ListaSinTipo -> valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN .)
    STRINGPALABRA   reduce using rule 30 (ListaSinTipo -> valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN .)
    FUN             reduce using rule 30 (ListaSinTipo -> valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN .)
    IF              reduce using rule 30 (ListaSinTipo -> valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN .)
    WHEN            reduce using rule 30 (ListaSinTipo -> valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN .)
    FOR             reduce using rule 30 (ListaSinTipo -> valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN .)
    $end            reduce using rule 30 (ListaSinTipo -> valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN .)
    RLLAVE          reduce using rule 30 (ListaSinTipo -> valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN .)


state 212

    (34) ConjuntoSinTipo -> valovar VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN .

    VARIABLE        reduce using rule 34 (ConjuntoSinTipo -> valovar VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN .)
    PRINT           reduce using rule 34 (ConjuntoSinTipo -> valovar VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN .)
    PRINTLN         reduce using rule 34 (ConjuntoSinTipo -> valovar VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN .)
    RETURN          reduce using rule 34 (ConjuntoSinTipo -> valovar VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN .)
    VAR             reduce using rule 34 (ConjuntoSinTipo -> valovar VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN .)
    VAL             reduce using rule 34 (ConjuntoSinTipo -> valovar VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN .)
    STRINGPALABRA   reduce using rule 34 (ConjuntoSinTipo -> valovar VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN .)
    FUN             reduce using rule 34 (ConjuntoSinTipo -> valovar VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN .)
    IF              reduce using rule 34 (ConjuntoSinTipo -> valovar VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN .)
    WHEN            reduce using rule 34 (ConjuntoSinTipo -> valovar VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN .)
    FOR             reduce using rule 34 (ConjuntoSinTipo -> valovar VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN .)
    $end            reduce using rule 34 (ConjuntoSinTipo -> valovar VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN .)
    RLLAVE          reduce using rule 34 (ConjuntoSinTipo -> valovar VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN .)


state 213

    (27) ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE . IGUAL LISTOF LPAREN repeInt RPAREN

    IGUAL           shift and go to state 231


state 214

    (28) ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE . IGUAL LISTOF LPAREN repeString RPAREN

    IGUAL           shift and go to state 232


state 215

    (29) ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE . IGUAL LISTOF repeBool LPAREN RPAREN

    IGUAL           shift and go to state 233


state 216

    (31) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE . IGUAL SETOF LPAREN repeInt RPAREN

    IGUAL           shift and go to state 234


state 217

    (32) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE . IGUAL SETOF LPAREN repeString RPAREN

    IGUAL           shift and go to state 235


state 218

    (33) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE . IGUAL SETOF LPAREN repeBool RPAREN

    IGUAL           shift and go to state 236


state 219

    (55) repeCualquier -> datosprimitivos COMA repeCualquier .

    RPAREN          reduce using rule 55 (repeCualquier -> datosprimitivos COMA repeCualquier .)


state 220

    (90) funConSalidaArg -> FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE . repetodo RLLAVE
    (14) repetodo -> . todo
    (15) repetodo -> . todo repetodo
    (2) todo -> . lista
    (3) todo -> . variable
    (4) todo -> . conjunto
    (5) todo -> . pair
    (6) todo -> . control
    (7) todo -> . adicionales
    (8) todo -> . funcion
    (9) todo -> . sublist
    (10) todo -> . readline
    (11) todo -> . prin
    (12) todo -> . contador
    (13) todo -> . retor
    (16) lista -> . ListaConTipo
    (17) lista -> . ListaSinTipo
    (18) variable -> . variableConTipo
    (19) variable -> . variableSinTipo
    (20) conjunto -> . ConjuntoConTipo
    (21) conjunto -> . ConjuntoSinTipo
    (35) pair -> . valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN
    (67) control -> . if
    (68) control -> . when
    (69) control -> . for
    (92) adicionales -> . size
    (93) adicionales -> . rindex
    (94) adicionales -> . sublist
    (95) adicionales -> . contains
    (84) funcion -> . funConSalidaArg
    (85) funcion -> . funConSalida
    (86) funcion -> . funSinSalidaArg
    (87) funcion -> . funSinSalida
    (103) sublist -> . sublistIndex
    (104) sublist -> . sublistInicio
    (105) sublist -> . sublistFinal
    (106) sublist -> . sublistVar
    (111) readline -> . VARIABLE IGUAL READLINE
    (112) readline -> . valovar VARIABLE IGUAL READLINE
    (113) prin -> . PRINT LPAREN datosprimitivos RPAREN
    (114) prin -> . PRINTLN LPAREN datosprimitivos RPAREN
    (115) contador -> . VARIABLE PLUS PLUS
    (116) retor -> . RETURN VARIABLE
    (27) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN
    (28) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN
    (29) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN
    (30) ListaSinTipo -> . valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN
    (22) variableConTipo -> . valovar VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA
    (23) variableConTipo -> . valovar VARIABLE DOSPUNTOS INT IGUAL NUMBER
    (24) variableConTipo -> . valovar VARIABLE DOSPUNTOS BOOLEAN IGUAL
    (25) variableSinTipo -> . valovar VARIABLE IGUAL datosprimitivos
    (26) variableSinTipo -> . valovar VARIABLE IGUAL repeOper
    (31) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN
    (32) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN
    (33) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN
    (34) ConjuntoSinTipo -> . valovar VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN
    (40) valovar -> . VAR
    (41) valovar -> . VAL
    (70) if -> . ifBoolean
    (71) if -> . ifComparacion
    (72) if -> . ifVariable
    (73) when -> . whenVacio
    (74) when -> . whenVariable
    (75) for -> . forRango
    (76) for -> . forVariable
    (96) size -> . VARIABLE PUNTO SIZE
    (101) rindex -> . STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier RPAREN
    (102) rindex -> . VARIABLE PUNTO RINDEX LPAREN repeCualquier RPAREN
    (97) contains -> .
    (98) contains -> . VARIABLE PUNTO CONTAINS LPAREN datosprimitivos RPAREN
    (99) contains -> . STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN
    (100) contains -> . STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE RPAREN
    (90) funConSalidaArg -> . FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (88) funConSalida -> . FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (91) funSinSalidaArg -> . FUN VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE
    (89) funSinSalida -> . FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE
    (107) sublistIndex -> . VARIABLE LCLASP NUMBER DOSPUNTOS NUMBER RCLASP
    (108) sublistInicio -> . VARIABLE LCLASP DOSPUNTOS NUMBER RCLASP
    (109) sublistFinal -> . VARIABLE LCLASP NUMBER DOSPUNTOS RCLASP
    (110) sublistVar -> . VARIABLE LCLASP VARIABLE RCLASP
    (77) ifBoolean -> . IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE
    (78) ifComparacion -> . IF LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE
    (79) ifVariable -> . IF LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE
    (81) whenVacio -> . WHEN LLLAVE repetodo RLLAVE
    (80) whenVariable -> . WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE
    (83) forRango -> . FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE
    (82) forVariable -> . FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for STRINGPALABRA resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHEN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    VARIABLE        shift and go to state 23
    PRINT           shift and go to state 38
    PRINTLN         shift and go to state 39
    RETURN          shift and go to state 40
    VAR             shift and go to state 42
    VAL             shift and go to state 43
    STRINGPALABRA   shift and go to state 41
    RLLAVE          reduce using rule 97 (contains -> .)
    FUN             shift and go to state 51
    IF              shift and go to state 52
    WHEN            shift and go to state 53
    FOR             shift and go to state 54

  ! VARIABLE        [ reduce using rule 97 (contains -> .) ]
  ! PRINT           [ reduce using rule 97 (contains -> .) ]
  ! PRINTLN         [ reduce using rule 97 (contains -> .) ]
  ! RETURN          [ reduce using rule 97 (contains -> .) ]
  ! VAR             [ reduce using rule 97 (contains -> .) ]
  ! VAL             [ reduce using rule 97 (contains -> .) ]
  ! STRINGPALABRA   [ reduce using rule 97 (contains -> .) ]
  ! FUN             [ reduce using rule 97 (contains -> .) ]
  ! IF              [ reduce using rule 97 (contains -> .) ]
  ! WHEN            [ reduce using rule 97 (contains -> .) ]
  ! FOR             [ reduce using rule 97 (contains -> .) ]

    repetodo                       shift and go to state 237
    todo                           shift and go to state 3
    lista                          shift and go to state 4
    variable                       shift and go to state 5
    conjunto                       shift and go to state 6
    pair                           shift and go to state 7
    control                        shift and go to state 8
    adicionales                    shift and go to state 9
    funcion                        shift and go to state 10
    sublist                        shift and go to state 11
    readline                       shift and go to state 12
    prin                           shift and go to state 13
    contador                       shift and go to state 14
    retor                          shift and go to state 15
    ListaConTipo                   shift and go to state 16
    ListaSinTipo                   shift and go to state 17
    variableConTipo                shift and go to state 18
    variableSinTipo                shift and go to state 19
    ConjuntoConTipo                shift and go to state 20
    ConjuntoSinTipo                shift and go to state 21
    valovar                        shift and go to state 22
    if                             shift and go to state 24
    when                           shift and go to state 25
    for                            shift and go to state 26
    size                           shift and go to state 27
    rindex                         shift and go to state 28
    contains                       shift and go to state 29
    funConSalidaArg                shift and go to state 30
    funConSalida                   shift and go to state 31
    funSinSalidaArg                shift and go to state 32
    funSinSalida                   shift and go to state 33
    sublistIndex                   shift and go to state 34
    sublistInicio                  shift and go to state 35
    sublistFinal                   shift and go to state 36
    sublistVar                     shift and go to state 37
    ifBoolean                      shift and go to state 44
    ifComparacion                  shift and go to state 45
    ifVariable                     shift and go to state 46
    whenVacio                      shift and go to state 47
    whenVariable                   shift and go to state 48
    forRango                       shift and go to state 49
    forVariable                    shift and go to state 50

state 221

    (91) funSinSalidaArg -> FUN VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE .

    VARIABLE        reduce using rule 91 (funSinSalidaArg -> FUN VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE .)
    PRINT           reduce using rule 91 (funSinSalidaArg -> FUN VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE .)
    PRINTLN         reduce using rule 91 (funSinSalidaArg -> FUN VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE .)
    RETURN          reduce using rule 91 (funSinSalidaArg -> FUN VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE .)
    VAR             reduce using rule 91 (funSinSalidaArg -> FUN VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE .)
    VAL             reduce using rule 91 (funSinSalidaArg -> FUN VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE .)
    STRINGPALABRA   reduce using rule 91 (funSinSalidaArg -> FUN VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE .)
    FUN             reduce using rule 91 (funSinSalidaArg -> FUN VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE .)
    IF              reduce using rule 91 (funSinSalidaArg -> FUN VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE .)
    WHEN            reduce using rule 91 (funSinSalidaArg -> FUN VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE .)
    FOR             reduce using rule 91 (funSinSalidaArg -> FUN VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE .)
    $end            reduce using rule 91 (funSinSalidaArg -> FUN VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE .)
    RLLAVE          reduce using rule 91 (funSinSalidaArg -> FUN VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE .)


state 222

    (88) funConSalida -> FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato . LLLAVE repetodo RLLAVE

    LLLAVE          shift and go to state 238


state 223

    (89) funSinSalida -> FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo . RLLAVE

    RLLAVE          shift and go to state 239


state 224

    (77) ifBoolean -> IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE .

    VARIABLE        reduce using rule 77 (ifBoolean -> IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE .)
    PRINT           reduce using rule 77 (ifBoolean -> IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE .)
    PRINTLN         reduce using rule 77 (ifBoolean -> IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE .)
    RETURN          reduce using rule 77 (ifBoolean -> IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE .)
    VAR             reduce using rule 77 (ifBoolean -> IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE .)
    VAL             reduce using rule 77 (ifBoolean -> IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE .)
    STRINGPALABRA   reduce using rule 77 (ifBoolean -> IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE .)
    FUN             reduce using rule 77 (ifBoolean -> IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE .)
    IF              reduce using rule 77 (ifBoolean -> IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE .)
    WHEN            reduce using rule 77 (ifBoolean -> IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE .)
    FOR             reduce using rule 77 (ifBoolean -> IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE .)
    $end            reduce using rule 77 (ifBoolean -> IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE .)
    RLLAVE          reduce using rule 77 (ifBoolean -> IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE .)


state 225

    (78) ifComparacion -> IF LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE .

    VARIABLE        reduce using rule 78 (ifComparacion -> IF LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE .)
    PRINT           reduce using rule 78 (ifComparacion -> IF LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE .)
    PRINTLN         reduce using rule 78 (ifComparacion -> IF LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE .)
    RETURN          reduce using rule 78 (ifComparacion -> IF LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE .)
    VAR             reduce using rule 78 (ifComparacion -> IF LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE .)
    VAL             reduce using rule 78 (ifComparacion -> IF LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE .)
    STRINGPALABRA   reduce using rule 78 (ifComparacion -> IF LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE .)
    FUN             reduce using rule 78 (ifComparacion -> IF LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE .)
    IF              reduce using rule 78 (ifComparacion -> IF LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE .)
    WHEN            reduce using rule 78 (ifComparacion -> IF LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE .)
    FOR             reduce using rule 78 (ifComparacion -> IF LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE .)
    $end            reduce using rule 78 (ifComparacion -> IF LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE .)
    RLLAVE          reduce using rule 78 (ifComparacion -> IF LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE .)


state 226

    (79) ifVariable -> IF LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE .

    VARIABLE        reduce using rule 79 (ifVariable -> IF LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    PRINT           reduce using rule 79 (ifVariable -> IF LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    PRINTLN         reduce using rule 79 (ifVariable -> IF LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    RETURN          reduce using rule 79 (ifVariable -> IF LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    VAR             reduce using rule 79 (ifVariable -> IF LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    VAL             reduce using rule 79 (ifVariable -> IF LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    STRINGPALABRA   reduce using rule 79 (ifVariable -> IF LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    FUN             reduce using rule 79 (ifVariable -> IF LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    IF              reduce using rule 79 (ifVariable -> IF LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    WHEN            reduce using rule 79 (ifVariable -> IF LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    FOR             reduce using rule 79 (ifVariable -> IF LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    $end            reduce using rule 79 (ifVariable -> IF LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    RLLAVE          reduce using rule 79 (ifVariable -> IF LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)


state 227

    (80) whenVariable -> WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE .

    VARIABLE        reduce using rule 80 (whenVariable -> WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    PRINT           reduce using rule 80 (whenVariable -> WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    PRINTLN         reduce using rule 80 (whenVariable -> WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    RETURN          reduce using rule 80 (whenVariable -> WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    VAR             reduce using rule 80 (whenVariable -> WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    VAL             reduce using rule 80 (whenVariable -> WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    STRINGPALABRA   reduce using rule 80 (whenVariable -> WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    FUN             reduce using rule 80 (whenVariable -> WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    IF              reduce using rule 80 (whenVariable -> WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    WHEN            reduce using rule 80 (whenVariable -> WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    FOR             reduce using rule 80 (whenVariable -> WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    $end            reduce using rule 80 (whenVariable -> WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    RLLAVE          reduce using rule 80 (whenVariable -> WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)


state 228

    (82) forVariable -> FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE . repetodo RLLAVE
    (14) repetodo -> . todo
    (15) repetodo -> . todo repetodo
    (2) todo -> . lista
    (3) todo -> . variable
    (4) todo -> . conjunto
    (5) todo -> . pair
    (6) todo -> . control
    (7) todo -> . adicionales
    (8) todo -> . funcion
    (9) todo -> . sublist
    (10) todo -> . readline
    (11) todo -> . prin
    (12) todo -> . contador
    (13) todo -> . retor
    (16) lista -> . ListaConTipo
    (17) lista -> . ListaSinTipo
    (18) variable -> . variableConTipo
    (19) variable -> . variableSinTipo
    (20) conjunto -> . ConjuntoConTipo
    (21) conjunto -> . ConjuntoSinTipo
    (35) pair -> . valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN
    (67) control -> . if
    (68) control -> . when
    (69) control -> . for
    (92) adicionales -> . size
    (93) adicionales -> . rindex
    (94) adicionales -> . sublist
    (95) adicionales -> . contains
    (84) funcion -> . funConSalidaArg
    (85) funcion -> . funConSalida
    (86) funcion -> . funSinSalidaArg
    (87) funcion -> . funSinSalida
    (103) sublist -> . sublistIndex
    (104) sublist -> . sublistInicio
    (105) sublist -> . sublistFinal
    (106) sublist -> . sublistVar
    (111) readline -> . VARIABLE IGUAL READLINE
    (112) readline -> . valovar VARIABLE IGUAL READLINE
    (113) prin -> . PRINT LPAREN datosprimitivos RPAREN
    (114) prin -> . PRINTLN LPAREN datosprimitivos RPAREN
    (115) contador -> . VARIABLE PLUS PLUS
    (116) retor -> . RETURN VARIABLE
    (27) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN
    (28) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN
    (29) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN
    (30) ListaSinTipo -> . valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN
    (22) variableConTipo -> . valovar VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA
    (23) variableConTipo -> . valovar VARIABLE DOSPUNTOS INT IGUAL NUMBER
    (24) variableConTipo -> . valovar VARIABLE DOSPUNTOS BOOLEAN IGUAL
    (25) variableSinTipo -> . valovar VARIABLE IGUAL datosprimitivos
    (26) variableSinTipo -> . valovar VARIABLE IGUAL repeOper
    (31) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN
    (32) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN
    (33) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN
    (34) ConjuntoSinTipo -> . valovar VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN
    (40) valovar -> . VAR
    (41) valovar -> . VAL
    (70) if -> . ifBoolean
    (71) if -> . ifComparacion
    (72) if -> . ifVariable
    (73) when -> . whenVacio
    (74) when -> . whenVariable
    (75) for -> . forRango
    (76) for -> . forVariable
    (96) size -> . VARIABLE PUNTO SIZE
    (101) rindex -> . STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier RPAREN
    (102) rindex -> . VARIABLE PUNTO RINDEX LPAREN repeCualquier RPAREN
    (97) contains -> .
    (98) contains -> . VARIABLE PUNTO CONTAINS LPAREN datosprimitivos RPAREN
    (99) contains -> . STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN
    (100) contains -> . STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE RPAREN
    (90) funConSalidaArg -> . FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (88) funConSalida -> . FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (91) funSinSalidaArg -> . FUN VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE
    (89) funSinSalida -> . FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE
    (107) sublistIndex -> . VARIABLE LCLASP NUMBER DOSPUNTOS NUMBER RCLASP
    (108) sublistInicio -> . VARIABLE LCLASP DOSPUNTOS NUMBER RCLASP
    (109) sublistFinal -> . VARIABLE LCLASP NUMBER DOSPUNTOS RCLASP
    (110) sublistVar -> . VARIABLE LCLASP VARIABLE RCLASP
    (77) ifBoolean -> . IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE
    (78) ifComparacion -> . IF LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE
    (79) ifVariable -> . IF LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE
    (81) whenVacio -> . WHEN LLLAVE repetodo RLLAVE
    (80) whenVariable -> . WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE
    (83) forRango -> . FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE
    (82) forVariable -> . FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for STRINGPALABRA resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHEN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    VARIABLE        shift and go to state 23
    PRINT           shift and go to state 38
    PRINTLN         shift and go to state 39
    RETURN          shift and go to state 40
    VAR             shift and go to state 42
    VAL             shift and go to state 43
    STRINGPALABRA   shift and go to state 41
    RLLAVE          reduce using rule 97 (contains -> .)
    FUN             shift and go to state 51
    IF              shift and go to state 52
    WHEN            shift and go to state 53
    FOR             shift and go to state 54

  ! VARIABLE        [ reduce using rule 97 (contains -> .) ]
  ! PRINT           [ reduce using rule 97 (contains -> .) ]
  ! PRINTLN         [ reduce using rule 97 (contains -> .) ]
  ! RETURN          [ reduce using rule 97 (contains -> .) ]
  ! VAR             [ reduce using rule 97 (contains -> .) ]
  ! VAL             [ reduce using rule 97 (contains -> .) ]
  ! STRINGPALABRA   [ reduce using rule 97 (contains -> .) ]
  ! FUN             [ reduce using rule 97 (contains -> .) ]
  ! IF              [ reduce using rule 97 (contains -> .) ]
  ! WHEN            [ reduce using rule 97 (contains -> .) ]
  ! FOR             [ reduce using rule 97 (contains -> .) ]

    repetodo                       shift and go to state 240
    todo                           shift and go to state 3
    lista                          shift and go to state 4
    variable                       shift and go to state 5
    conjunto                       shift and go to state 6
    pair                           shift and go to state 7
    control                        shift and go to state 8
    adicionales                    shift and go to state 9
    funcion                        shift and go to state 10
    sublist                        shift and go to state 11
    readline                       shift and go to state 12
    prin                           shift and go to state 13
    contador                       shift and go to state 14
    retor                          shift and go to state 15
    ListaConTipo                   shift and go to state 16
    ListaSinTipo                   shift and go to state 17
    variableConTipo                shift and go to state 18
    variableSinTipo                shift and go to state 19
    ConjuntoConTipo                shift and go to state 20
    ConjuntoSinTipo                shift and go to state 21
    valovar                        shift and go to state 22
    if                             shift and go to state 24
    when                           shift and go to state 25
    for                            shift and go to state 26
    size                           shift and go to state 27
    rindex                         shift and go to state 28
    contains                       shift and go to state 29
    funConSalidaArg                shift and go to state 30
    funConSalida                   shift and go to state 31
    funSinSalidaArg                shift and go to state 32
    funSinSalida                   shift and go to state 33
    sublistIndex                   shift and go to state 34
    sublistInicio                  shift and go to state 35
    sublistFinal                   shift and go to state 36
    sublistVar                     shift and go to state 37
    ifBoolean                      shift and go to state 44
    ifComparacion                  shift and go to state 45
    ifVariable                     shift and go to state 46
    whenVacio                      shift and go to state 47
    whenVariable                   shift and go to state 48
    forRango                       shift and go to state 49
    forVariable                    shift and go to state 50

state 229

    (83) forRango -> FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO . NUMBER RPAREN LLLAVE repetodo RLLAVE

    NUMBER          shift and go to state 241


state 230

    (35) pair -> valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos . RPAREN

    RPAREN          shift and go to state 242


state 231

    (27) ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL . LISTOF LPAREN repeInt RPAREN

    LISTOF          shift and go to state 243


state 232

    (28) ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL . LISTOF LPAREN repeString RPAREN

    LISTOF          shift and go to state 244


state 233

    (29) ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL . LISTOF repeBool LPAREN RPAREN

    LISTOF          shift and go to state 245


state 234

    (31) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL . SETOF LPAREN repeInt RPAREN

    SETOF           shift and go to state 246


state 235

    (32) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL . SETOF LPAREN repeString RPAREN

    SETOF           shift and go to state 247


state 236

    (33) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL . SETOF LPAREN repeBool RPAREN

    SETOF           shift and go to state 248


state 237

    (90) funConSalidaArg -> FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo . RLLAVE

    RLLAVE          shift and go to state 249


state 238

    (88) funConSalida -> FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE . repetodo RLLAVE
    (14) repetodo -> . todo
    (15) repetodo -> . todo repetodo
    (2) todo -> . lista
    (3) todo -> . variable
    (4) todo -> . conjunto
    (5) todo -> . pair
    (6) todo -> . control
    (7) todo -> . adicionales
    (8) todo -> . funcion
    (9) todo -> . sublist
    (10) todo -> . readline
    (11) todo -> . prin
    (12) todo -> . contador
    (13) todo -> . retor
    (16) lista -> . ListaConTipo
    (17) lista -> . ListaSinTipo
    (18) variable -> . variableConTipo
    (19) variable -> . variableSinTipo
    (20) conjunto -> . ConjuntoConTipo
    (21) conjunto -> . ConjuntoSinTipo
    (35) pair -> . valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN
    (67) control -> . if
    (68) control -> . when
    (69) control -> . for
    (92) adicionales -> . size
    (93) adicionales -> . rindex
    (94) adicionales -> . sublist
    (95) adicionales -> . contains
    (84) funcion -> . funConSalidaArg
    (85) funcion -> . funConSalida
    (86) funcion -> . funSinSalidaArg
    (87) funcion -> . funSinSalida
    (103) sublist -> . sublistIndex
    (104) sublist -> . sublistInicio
    (105) sublist -> . sublistFinal
    (106) sublist -> . sublistVar
    (111) readline -> . VARIABLE IGUAL READLINE
    (112) readline -> . valovar VARIABLE IGUAL READLINE
    (113) prin -> . PRINT LPAREN datosprimitivos RPAREN
    (114) prin -> . PRINTLN LPAREN datosprimitivos RPAREN
    (115) contador -> . VARIABLE PLUS PLUS
    (116) retor -> . RETURN VARIABLE
    (27) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN
    (28) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN
    (29) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN
    (30) ListaSinTipo -> . valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN
    (22) variableConTipo -> . valovar VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA
    (23) variableConTipo -> . valovar VARIABLE DOSPUNTOS INT IGUAL NUMBER
    (24) variableConTipo -> . valovar VARIABLE DOSPUNTOS BOOLEAN IGUAL
    (25) variableSinTipo -> . valovar VARIABLE IGUAL datosprimitivos
    (26) variableSinTipo -> . valovar VARIABLE IGUAL repeOper
    (31) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN
    (32) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN
    (33) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN
    (34) ConjuntoSinTipo -> . valovar VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN
    (40) valovar -> . VAR
    (41) valovar -> . VAL
    (70) if -> . ifBoolean
    (71) if -> . ifComparacion
    (72) if -> . ifVariable
    (73) when -> . whenVacio
    (74) when -> . whenVariable
    (75) for -> . forRango
    (76) for -> . forVariable
    (96) size -> . VARIABLE PUNTO SIZE
    (101) rindex -> . STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier RPAREN
    (102) rindex -> . VARIABLE PUNTO RINDEX LPAREN repeCualquier RPAREN
    (97) contains -> .
    (98) contains -> . VARIABLE PUNTO CONTAINS LPAREN datosprimitivos RPAREN
    (99) contains -> . STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN
    (100) contains -> . STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE RPAREN
    (90) funConSalidaArg -> . FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (88) funConSalida -> . FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (91) funSinSalidaArg -> . FUN VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE
    (89) funSinSalida -> . FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE
    (107) sublistIndex -> . VARIABLE LCLASP NUMBER DOSPUNTOS NUMBER RCLASP
    (108) sublistInicio -> . VARIABLE LCLASP DOSPUNTOS NUMBER RCLASP
    (109) sublistFinal -> . VARIABLE LCLASP NUMBER DOSPUNTOS RCLASP
    (110) sublistVar -> . VARIABLE LCLASP VARIABLE RCLASP
    (77) ifBoolean -> . IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE
    (78) ifComparacion -> . IF LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE
    (79) ifVariable -> . IF LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE
    (81) whenVacio -> . WHEN LLLAVE repetodo RLLAVE
    (80) whenVariable -> . WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE
    (83) forRango -> . FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE
    (82) forVariable -> . FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for STRINGPALABRA resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHEN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    VARIABLE        shift and go to state 23
    PRINT           shift and go to state 38
    PRINTLN         shift and go to state 39
    RETURN          shift and go to state 40
    VAR             shift and go to state 42
    VAL             shift and go to state 43
    STRINGPALABRA   shift and go to state 41
    RLLAVE          reduce using rule 97 (contains -> .)
    FUN             shift and go to state 51
    IF              shift and go to state 52
    WHEN            shift and go to state 53
    FOR             shift and go to state 54

  ! VARIABLE        [ reduce using rule 97 (contains -> .) ]
  ! PRINT           [ reduce using rule 97 (contains -> .) ]
  ! PRINTLN         [ reduce using rule 97 (contains -> .) ]
  ! RETURN          [ reduce using rule 97 (contains -> .) ]
  ! VAR             [ reduce using rule 97 (contains -> .) ]
  ! VAL             [ reduce using rule 97 (contains -> .) ]
  ! STRINGPALABRA   [ reduce using rule 97 (contains -> .) ]
  ! FUN             [ reduce using rule 97 (contains -> .) ]
  ! IF              [ reduce using rule 97 (contains -> .) ]
  ! WHEN            [ reduce using rule 97 (contains -> .) ]
  ! FOR             [ reduce using rule 97 (contains -> .) ]

    repetodo                       shift and go to state 250
    todo                           shift and go to state 3
    lista                          shift and go to state 4
    variable                       shift and go to state 5
    conjunto                       shift and go to state 6
    pair                           shift and go to state 7
    control                        shift and go to state 8
    adicionales                    shift and go to state 9
    funcion                        shift and go to state 10
    sublist                        shift and go to state 11
    readline                       shift and go to state 12
    prin                           shift and go to state 13
    contador                       shift and go to state 14
    retor                          shift and go to state 15
    ListaConTipo                   shift and go to state 16
    ListaSinTipo                   shift and go to state 17
    variableConTipo                shift and go to state 18
    variableSinTipo                shift and go to state 19
    ConjuntoConTipo                shift and go to state 20
    ConjuntoSinTipo                shift and go to state 21
    valovar                        shift and go to state 22
    if                             shift and go to state 24
    when                           shift and go to state 25
    for                            shift and go to state 26
    size                           shift and go to state 27
    rindex                         shift and go to state 28
    contains                       shift and go to state 29
    funConSalidaArg                shift and go to state 30
    funConSalida                   shift and go to state 31
    funSinSalidaArg                shift and go to state 32
    funSinSalida                   shift and go to state 33
    sublistIndex                   shift and go to state 34
    sublistInicio                  shift and go to state 35
    sublistFinal                   shift and go to state 36
    sublistVar                     shift and go to state 37
    ifBoolean                      shift and go to state 44
    ifComparacion                  shift and go to state 45
    ifVariable                     shift and go to state 46
    whenVacio                      shift and go to state 47
    whenVariable                   shift and go to state 48
    forRango                       shift and go to state 49
    forVariable                    shift and go to state 50

state 239

    (89) funSinSalida -> FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE .

    VARIABLE        reduce using rule 89 (funSinSalida -> FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE .)
    PRINT           reduce using rule 89 (funSinSalida -> FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE .)
    PRINTLN         reduce using rule 89 (funSinSalida -> FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE .)
    RETURN          reduce using rule 89 (funSinSalida -> FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE .)
    VAR             reduce using rule 89 (funSinSalida -> FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE .)
    VAL             reduce using rule 89 (funSinSalida -> FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE .)
    STRINGPALABRA   reduce using rule 89 (funSinSalida -> FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE .)
    FUN             reduce using rule 89 (funSinSalida -> FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE .)
    IF              reduce using rule 89 (funSinSalida -> FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE .)
    WHEN            reduce using rule 89 (funSinSalida -> FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE .)
    FOR             reduce using rule 89 (funSinSalida -> FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE .)
    $end            reduce using rule 89 (funSinSalida -> FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE .)
    RLLAVE          reduce using rule 89 (funSinSalida -> FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE .)


state 240

    (82) forVariable -> FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo . RLLAVE

    RLLAVE          shift and go to state 251


state 241

    (83) forRango -> FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER . RPAREN LLLAVE repetodo RLLAVE

    RPAREN          shift and go to state 252


state 242

    (35) pair -> valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN .

    VARIABLE        reduce using rule 35 (pair -> valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN .)
    PRINT           reduce using rule 35 (pair -> valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN .)
    PRINTLN         reduce using rule 35 (pair -> valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN .)
    RETURN          reduce using rule 35 (pair -> valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN .)
    VAR             reduce using rule 35 (pair -> valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN .)
    VAL             reduce using rule 35 (pair -> valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN .)
    STRINGPALABRA   reduce using rule 35 (pair -> valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN .)
    FUN             reduce using rule 35 (pair -> valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN .)
    IF              reduce using rule 35 (pair -> valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN .)
    WHEN            reduce using rule 35 (pair -> valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN .)
    FOR             reduce using rule 35 (pair -> valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN .)
    $end            reduce using rule 35 (pair -> valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN .)
    RLLAVE          reduce using rule 35 (pair -> valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN .)


state 243

    (27) ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF . LPAREN repeInt RPAREN

    LPAREN          shift and go to state 253


state 244

    (28) ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF . LPAREN repeString RPAREN

    LPAREN          shift and go to state 254


state 245

    (29) ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF . repeBool LPAREN RPAREN
    (50) repeBool -> . bool
    (51) repeBool -> . bool COMA repeBool
    (52) bool -> . BOOLEANPALABRA
    (53) bool -> . VARIABLE

    BOOLEANPALABRA  shift and go to state 258
    VARIABLE        shift and go to state 255

    repeBool                       shift and go to state 256
    bool                           shift and go to state 257

state 246

    (31) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF . LPAREN repeInt RPAREN

    LPAREN          shift and go to state 259


state 247

    (32) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF . LPAREN repeString RPAREN

    LPAREN          shift and go to state 260


state 248

    (33) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF . LPAREN repeBool RPAREN

    LPAREN          shift and go to state 261


state 249

    (90) funConSalidaArg -> FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE .

    VARIABLE        reduce using rule 90 (funConSalidaArg -> FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE .)
    PRINT           reduce using rule 90 (funConSalidaArg -> FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE .)
    PRINTLN         reduce using rule 90 (funConSalidaArg -> FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE .)
    RETURN          reduce using rule 90 (funConSalidaArg -> FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE .)
    VAR             reduce using rule 90 (funConSalidaArg -> FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE .)
    VAL             reduce using rule 90 (funConSalidaArg -> FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE .)
    STRINGPALABRA   reduce using rule 90 (funConSalidaArg -> FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE .)
    FUN             reduce using rule 90 (funConSalidaArg -> FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE .)
    IF              reduce using rule 90 (funConSalidaArg -> FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE .)
    WHEN            reduce using rule 90 (funConSalidaArg -> FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE .)
    FOR             reduce using rule 90 (funConSalidaArg -> FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE .)
    $end            reduce using rule 90 (funConSalidaArg -> FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE .)
    RLLAVE          reduce using rule 90 (funConSalidaArg -> FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE .)


state 250

    (88) funConSalida -> FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo . RLLAVE

    RLLAVE          shift and go to state 262


state 251

    (82) forVariable -> FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE .

    VARIABLE        reduce using rule 82 (forVariable -> FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    PRINT           reduce using rule 82 (forVariable -> FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    PRINTLN         reduce using rule 82 (forVariable -> FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    RETURN          reduce using rule 82 (forVariable -> FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    VAR             reduce using rule 82 (forVariable -> FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    VAL             reduce using rule 82 (forVariable -> FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    STRINGPALABRA   reduce using rule 82 (forVariable -> FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    FUN             reduce using rule 82 (forVariable -> FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    IF              reduce using rule 82 (forVariable -> FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    WHEN            reduce using rule 82 (forVariable -> FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    FOR             reduce using rule 82 (forVariable -> FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    $end            reduce using rule 82 (forVariable -> FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    RLLAVE          reduce using rule 82 (forVariable -> FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)


state 252

    (83) forRango -> FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN . LLLAVE repetodo RLLAVE

    LLLAVE          shift and go to state 263


state 253

    (27) ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN . repeInt RPAREN
    (42) repeInt -> . valor
    (43) repeInt -> . valor COMA repeInt
    (44) valor -> . NUMBER
    (45) valor -> . VARIABLE

    NUMBER          shift and go to state 93
    VARIABLE        shift and go to state 173

    repeInt                        shift and go to state 264
    valor                          shift and go to state 265

state 254

    (28) ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN . repeString RPAREN
    (46) repeString -> . String
    (47) repeString -> . String COMA repeString
    (48) String -> . STRINGPALABRA
    (49) String -> . VARIABLE

    STRINGPALABRA   shift and go to state 269
    VARIABLE        shift and go to state 266

    repeString                     shift and go to state 267
    String                         shift and go to state 268

state 255

    (53) bool -> VARIABLE .

    COMA            reduce using rule 53 (bool -> VARIABLE .)
    LPAREN          reduce using rule 53 (bool -> VARIABLE .)
    RPAREN          reduce using rule 53 (bool -> VARIABLE .)


state 256

    (29) ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool . LPAREN RPAREN

    LPAREN          shift and go to state 270


state 257

    (50) repeBool -> bool .
    (51) repeBool -> bool . COMA repeBool

    LPAREN          reduce using rule 50 (repeBool -> bool .)
    RPAREN          reduce using rule 50 (repeBool -> bool .)
    COMA            shift and go to state 271


state 258

    (52) bool -> BOOLEANPALABRA .

    COMA            reduce using rule 52 (bool -> BOOLEANPALABRA .)
    LPAREN          reduce using rule 52 (bool -> BOOLEANPALABRA .)
    RPAREN          reduce using rule 52 (bool -> BOOLEANPALABRA .)


state 259

    (31) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN . repeInt RPAREN
    (42) repeInt -> . valor
    (43) repeInt -> . valor COMA repeInt
    (44) valor -> . NUMBER
    (45) valor -> . VARIABLE

    NUMBER          shift and go to state 93
    VARIABLE        shift and go to state 173

    repeInt                        shift and go to state 272
    valor                          shift and go to state 265

state 260

    (32) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN . repeString RPAREN
    (46) repeString -> . String
    (47) repeString -> . String COMA repeString
    (48) String -> . STRINGPALABRA
    (49) String -> . VARIABLE

    STRINGPALABRA   shift and go to state 269
    VARIABLE        shift and go to state 266

    repeString                     shift and go to state 273
    String                         shift and go to state 268

state 261

    (33) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN . repeBool RPAREN
    (50) repeBool -> . bool
    (51) repeBool -> . bool COMA repeBool
    (52) bool -> . BOOLEANPALABRA
    (53) bool -> . VARIABLE

    BOOLEANPALABRA  shift and go to state 258
    VARIABLE        shift and go to state 255

    repeBool                       shift and go to state 274
    bool                           shift and go to state 257

state 262

    (88) funConSalida -> FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE .

    VARIABLE        reduce using rule 88 (funConSalida -> FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE .)
    PRINT           reduce using rule 88 (funConSalida -> FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE .)
    PRINTLN         reduce using rule 88 (funConSalida -> FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE .)
    RETURN          reduce using rule 88 (funConSalida -> FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE .)
    VAR             reduce using rule 88 (funConSalida -> FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE .)
    VAL             reduce using rule 88 (funConSalida -> FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE .)
    STRINGPALABRA   reduce using rule 88 (funConSalida -> FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE .)
    FUN             reduce using rule 88 (funConSalida -> FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE .)
    IF              reduce using rule 88 (funConSalida -> FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE .)
    WHEN            reduce using rule 88 (funConSalida -> FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE .)
    FOR             reduce using rule 88 (funConSalida -> FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE .)
    $end            reduce using rule 88 (funConSalida -> FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE .)
    RLLAVE          reduce using rule 88 (funConSalida -> FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE .)


state 263

    (83) forRango -> FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE . repetodo RLLAVE
    (14) repetodo -> . todo
    (15) repetodo -> . todo repetodo
    (2) todo -> . lista
    (3) todo -> . variable
    (4) todo -> . conjunto
    (5) todo -> . pair
    (6) todo -> . control
    (7) todo -> . adicionales
    (8) todo -> . funcion
    (9) todo -> . sublist
    (10) todo -> . readline
    (11) todo -> . prin
    (12) todo -> . contador
    (13) todo -> . retor
    (16) lista -> . ListaConTipo
    (17) lista -> . ListaSinTipo
    (18) variable -> . variableConTipo
    (19) variable -> . variableSinTipo
    (20) conjunto -> . ConjuntoConTipo
    (21) conjunto -> . ConjuntoSinTipo
    (35) pair -> . valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN
    (67) control -> . if
    (68) control -> . when
    (69) control -> . for
    (92) adicionales -> . size
    (93) adicionales -> . rindex
    (94) adicionales -> . sublist
    (95) adicionales -> . contains
    (84) funcion -> . funConSalidaArg
    (85) funcion -> . funConSalida
    (86) funcion -> . funSinSalidaArg
    (87) funcion -> . funSinSalida
    (103) sublist -> . sublistIndex
    (104) sublist -> . sublistInicio
    (105) sublist -> . sublistFinal
    (106) sublist -> . sublistVar
    (111) readline -> . VARIABLE IGUAL READLINE
    (112) readline -> . valovar VARIABLE IGUAL READLINE
    (113) prin -> . PRINT LPAREN datosprimitivos RPAREN
    (114) prin -> . PRINTLN LPAREN datosprimitivos RPAREN
    (115) contador -> . VARIABLE PLUS PLUS
    (116) retor -> . RETURN VARIABLE
    (27) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN
    (28) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN
    (29) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN
    (30) ListaSinTipo -> . valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN
    (22) variableConTipo -> . valovar VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA
    (23) variableConTipo -> . valovar VARIABLE DOSPUNTOS INT IGUAL NUMBER
    (24) variableConTipo -> . valovar VARIABLE DOSPUNTOS BOOLEAN IGUAL
    (25) variableSinTipo -> . valovar VARIABLE IGUAL datosprimitivos
    (26) variableSinTipo -> . valovar VARIABLE IGUAL repeOper
    (31) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN
    (32) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN
    (33) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN
    (34) ConjuntoSinTipo -> . valovar VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN
    (40) valovar -> . VAR
    (41) valovar -> . VAL
    (70) if -> . ifBoolean
    (71) if -> . ifComparacion
    (72) if -> . ifVariable
    (73) when -> . whenVacio
    (74) when -> . whenVariable
    (75) for -> . forRango
    (76) for -> . forVariable
    (96) size -> . VARIABLE PUNTO SIZE
    (101) rindex -> . STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier RPAREN
    (102) rindex -> . VARIABLE PUNTO RINDEX LPAREN repeCualquier RPAREN
    (97) contains -> .
    (98) contains -> . VARIABLE PUNTO CONTAINS LPAREN datosprimitivos RPAREN
    (99) contains -> . STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN
    (100) contains -> . STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE RPAREN
    (90) funConSalidaArg -> . FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (88) funConSalida -> . FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (91) funSinSalidaArg -> . FUN VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE
    (89) funSinSalida -> . FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE
    (107) sublistIndex -> . VARIABLE LCLASP NUMBER DOSPUNTOS NUMBER RCLASP
    (108) sublistInicio -> . VARIABLE LCLASP DOSPUNTOS NUMBER RCLASP
    (109) sublistFinal -> . VARIABLE LCLASP NUMBER DOSPUNTOS RCLASP
    (110) sublistVar -> . VARIABLE LCLASP VARIABLE RCLASP
    (77) ifBoolean -> . IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE
    (78) ifComparacion -> . IF LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE
    (79) ifVariable -> . IF LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE
    (81) whenVacio -> . WHEN LLLAVE repetodo RLLAVE
    (80) whenVariable -> . WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE
    (83) forRango -> . FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE
    (82) forVariable -> . FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for STRINGPALABRA resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHEN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    VARIABLE        shift and go to state 23
    PRINT           shift and go to state 38
    PRINTLN         shift and go to state 39
    RETURN          shift and go to state 40
    VAR             shift and go to state 42
    VAL             shift and go to state 43
    STRINGPALABRA   shift and go to state 41
    RLLAVE          reduce using rule 97 (contains -> .)
    FUN             shift and go to state 51
    IF              shift and go to state 52
    WHEN            shift and go to state 53
    FOR             shift and go to state 54

  ! VARIABLE        [ reduce using rule 97 (contains -> .) ]
  ! PRINT           [ reduce using rule 97 (contains -> .) ]
  ! PRINTLN         [ reduce using rule 97 (contains -> .) ]
  ! RETURN          [ reduce using rule 97 (contains -> .) ]
  ! VAR             [ reduce using rule 97 (contains -> .) ]
  ! VAL             [ reduce using rule 97 (contains -> .) ]
  ! STRINGPALABRA   [ reduce using rule 97 (contains -> .) ]
  ! FUN             [ reduce using rule 97 (contains -> .) ]
  ! IF              [ reduce using rule 97 (contains -> .) ]
  ! WHEN            [ reduce using rule 97 (contains -> .) ]
  ! FOR             [ reduce using rule 97 (contains -> .) ]

    repetodo                       shift and go to state 275
    todo                           shift and go to state 3
    lista                          shift and go to state 4
    variable                       shift and go to state 5
    conjunto                       shift and go to state 6
    pair                           shift and go to state 7
    control                        shift and go to state 8
    adicionales                    shift and go to state 9
    funcion                        shift and go to state 10
    sublist                        shift and go to state 11
    readline                       shift and go to state 12
    prin                           shift and go to state 13
    contador                       shift and go to state 14
    retor                          shift and go to state 15
    ListaConTipo                   shift and go to state 16
    ListaSinTipo                   shift and go to state 17
    variableConTipo                shift and go to state 18
    variableSinTipo                shift and go to state 19
    ConjuntoConTipo                shift and go to state 20
    ConjuntoSinTipo                shift and go to state 21
    valovar                        shift and go to state 22
    if                             shift and go to state 24
    when                           shift and go to state 25
    for                            shift and go to state 26
    size                           shift and go to state 27
    rindex                         shift and go to state 28
    contains                       shift and go to state 29
    funConSalidaArg                shift and go to state 30
    funConSalida                   shift and go to state 31
    funSinSalidaArg                shift and go to state 32
    funSinSalida                   shift and go to state 33
    sublistIndex                   shift and go to state 34
    sublistInicio                  shift and go to state 35
    sublistFinal                   shift and go to state 36
    sublistVar                     shift and go to state 37
    ifBoolean                      shift and go to state 44
    ifComparacion                  shift and go to state 45
    ifVariable                     shift and go to state 46
    whenVacio                      shift and go to state 47
    whenVariable                   shift and go to state 48
    forRango                       shift and go to state 49
    forVariable                    shift and go to state 50

state 264

    (27) ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt . RPAREN

    RPAREN          shift and go to state 276


state 265

    (42) repeInt -> valor .
    (43) repeInt -> valor . COMA repeInt

    RPAREN          reduce using rule 42 (repeInt -> valor .)
    COMA            shift and go to state 277


state 266

    (49) String -> VARIABLE .

    COMA            reduce using rule 49 (String -> VARIABLE .)
    RPAREN          reduce using rule 49 (String -> VARIABLE .)


state 267

    (28) ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString . RPAREN

    RPAREN          shift and go to state 278


state 268

    (46) repeString -> String .
    (47) repeString -> String . COMA repeString

    RPAREN          reduce using rule 46 (repeString -> String .)
    COMA            shift and go to state 279


state 269

    (48) String -> STRINGPALABRA .

    COMA            reduce using rule 48 (String -> STRINGPALABRA .)
    RPAREN          reduce using rule 48 (String -> STRINGPALABRA .)


state 270

    (29) ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN . RPAREN

    RPAREN          shift and go to state 280


state 271

    (51) repeBool -> bool COMA . repeBool
    (50) repeBool -> . bool
    (51) repeBool -> . bool COMA repeBool
    (52) bool -> . BOOLEANPALABRA
    (53) bool -> . VARIABLE

    BOOLEANPALABRA  shift and go to state 258
    VARIABLE        shift and go to state 255

    bool                           shift and go to state 257
    repeBool                       shift and go to state 281

state 272

    (31) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt . RPAREN

    RPAREN          shift and go to state 282


state 273

    (32) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString . RPAREN

    RPAREN          shift and go to state 283


state 274

    (33) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool . RPAREN

    RPAREN          shift and go to state 284


state 275

    (83) forRango -> FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo . RLLAVE

    RLLAVE          shift and go to state 285


state 276

    (27) ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN .

    VARIABLE        reduce using rule 27 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN .)
    PRINT           reduce using rule 27 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN .)
    PRINTLN         reduce using rule 27 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN .)
    RETURN          reduce using rule 27 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN .)
    VAR             reduce using rule 27 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN .)
    VAL             reduce using rule 27 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN .)
    STRINGPALABRA   reduce using rule 27 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN .)
    FUN             reduce using rule 27 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN .)
    IF              reduce using rule 27 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN .)
    WHEN            reduce using rule 27 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN .)
    FOR             reduce using rule 27 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN .)
    $end            reduce using rule 27 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN .)
    RLLAVE          reduce using rule 27 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN .)


state 277

    (43) repeInt -> valor COMA . repeInt
    (42) repeInt -> . valor
    (43) repeInt -> . valor COMA repeInt
    (44) valor -> . NUMBER
    (45) valor -> . VARIABLE

    NUMBER          shift and go to state 93
    VARIABLE        shift and go to state 173

    valor                          shift and go to state 265
    repeInt                        shift and go to state 286

state 278

    (28) ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN .

    VARIABLE        reduce using rule 28 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN .)
    PRINT           reduce using rule 28 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN .)
    PRINTLN         reduce using rule 28 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN .)
    RETURN          reduce using rule 28 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN .)
    VAR             reduce using rule 28 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN .)
    VAL             reduce using rule 28 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN .)
    STRINGPALABRA   reduce using rule 28 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN .)
    FUN             reduce using rule 28 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN .)
    IF              reduce using rule 28 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN .)
    WHEN            reduce using rule 28 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN .)
    FOR             reduce using rule 28 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN .)
    $end            reduce using rule 28 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN .)
    RLLAVE          reduce using rule 28 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN .)


state 279

    (47) repeString -> String COMA . repeString
    (46) repeString -> . String
    (47) repeString -> . String COMA repeString
    (48) String -> . STRINGPALABRA
    (49) String -> . VARIABLE

    STRINGPALABRA   shift and go to state 269
    VARIABLE        shift and go to state 266

    String                         shift and go to state 268
    repeString                     shift and go to state 287

state 280

    (29) ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN .

    VARIABLE        reduce using rule 29 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN .)
    PRINT           reduce using rule 29 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN .)
    PRINTLN         reduce using rule 29 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN .)
    RETURN          reduce using rule 29 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN .)
    VAR             reduce using rule 29 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN .)
    VAL             reduce using rule 29 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN .)
    STRINGPALABRA   reduce using rule 29 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN .)
    FUN             reduce using rule 29 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN .)
    IF              reduce using rule 29 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN .)
    WHEN            reduce using rule 29 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN .)
    FOR             reduce using rule 29 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN .)
    $end            reduce using rule 29 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN .)
    RLLAVE          reduce using rule 29 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN .)


state 281

    (51) repeBool -> bool COMA repeBool .

    LPAREN          reduce using rule 51 (repeBool -> bool COMA repeBool .)
    RPAREN          reduce using rule 51 (repeBool -> bool COMA repeBool .)


state 282

    (31) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN .

    VARIABLE        reduce using rule 31 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN .)
    PRINT           reduce using rule 31 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN .)
    PRINTLN         reduce using rule 31 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN .)
    RETURN          reduce using rule 31 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN .)
    VAR             reduce using rule 31 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN .)
    VAL             reduce using rule 31 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN .)
    STRINGPALABRA   reduce using rule 31 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN .)
    FUN             reduce using rule 31 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN .)
    IF              reduce using rule 31 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN .)
    WHEN            reduce using rule 31 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN .)
    FOR             reduce using rule 31 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN .)
    $end            reduce using rule 31 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN .)
    RLLAVE          reduce using rule 31 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN .)


state 283

    (32) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN .

    VARIABLE        reduce using rule 32 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN .)
    PRINT           reduce using rule 32 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN .)
    PRINTLN         reduce using rule 32 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN .)
    RETURN          reduce using rule 32 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN .)
    VAR             reduce using rule 32 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN .)
    VAL             reduce using rule 32 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN .)
    STRINGPALABRA   reduce using rule 32 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN .)
    FUN             reduce using rule 32 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN .)
    IF              reduce using rule 32 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN .)
    WHEN            reduce using rule 32 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN .)
    FOR             reduce using rule 32 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN .)
    $end            reduce using rule 32 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN .)
    RLLAVE          reduce using rule 32 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN .)


state 284

    (33) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN .

    VARIABLE        reduce using rule 33 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN .)
    PRINT           reduce using rule 33 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN .)
    PRINTLN         reduce using rule 33 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN .)
    RETURN          reduce using rule 33 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN .)
    VAR             reduce using rule 33 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN .)
    VAL             reduce using rule 33 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN .)
    STRINGPALABRA   reduce using rule 33 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN .)
    FUN             reduce using rule 33 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN .)
    IF              reduce using rule 33 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN .)
    WHEN            reduce using rule 33 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN .)
    FOR             reduce using rule 33 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN .)
    $end            reduce using rule 33 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN .)
    RLLAVE          reduce using rule 33 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN .)


state 285

    (83) forRango -> FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE .

    VARIABLE        reduce using rule 83 (forRango -> FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE .)
    PRINT           reduce using rule 83 (forRango -> FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE .)
    PRINTLN         reduce using rule 83 (forRango -> FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE .)
    RETURN          reduce using rule 83 (forRango -> FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE .)
    VAR             reduce using rule 83 (forRango -> FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE .)
    VAL             reduce using rule 83 (forRango -> FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE .)
    STRINGPALABRA   reduce using rule 83 (forRango -> FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE .)
    FUN             reduce using rule 83 (forRango -> FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE .)
    IF              reduce using rule 83 (forRango -> FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE .)
    WHEN            reduce using rule 83 (forRango -> FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE .)
    FOR             reduce using rule 83 (forRango -> FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE .)
    $end            reduce using rule 83 (forRango -> FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE .)
    RLLAVE          reduce using rule 83 (forRango -> FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE .)


state 286

    (43) repeInt -> valor COMA repeInt .

    RPAREN          reduce using rule 43 (repeInt -> valor COMA repeInt .)


state 287

    (47) repeString -> String COMA repeString .

    RPAREN          reduce using rule 47 (repeString -> String COMA repeString .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VARIABLE in state 0 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 0 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 0 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 0 resolved as shift
WARNING: shift/reduce conflict for VAR in state 0 resolved as shift
WARNING: shift/reduce conflict for VAL in state 0 resolved as shift
WARNING: shift/reduce conflict for STRINGPALABRA in state 0 resolved as shift
WARNING: shift/reduce conflict for FUN in state 0 resolved as shift
WARNING: shift/reduce conflict for IF in state 0 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 0 resolved as shift
WARNING: shift/reduce conflict for FOR in state 0 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 3 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 3 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 3 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 3 resolved as shift
WARNING: shift/reduce conflict for VAR in state 3 resolved as shift
WARNING: shift/reduce conflict for VAL in state 3 resolved as shift
WARNING: shift/reduce conflict for STRINGPALABRA in state 3 resolved as shift
WARNING: shift/reduce conflict for FUN in state 3 resolved as shift
WARNING: shift/reduce conflict for IF in state 3 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 3 resolved as shift
WARNING: shift/reduce conflict for FOR in state 3 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 67 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 67 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 67 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 67 resolved as shift
WARNING: shift/reduce conflict for VAR in state 67 resolved as shift
WARNING: shift/reduce conflict for VAL in state 67 resolved as shift
WARNING: shift/reduce conflict for STRINGPALABRA in state 67 resolved as shift
WARNING: shift/reduce conflict for FUN in state 67 resolved as shift
WARNING: shift/reduce conflict for IF in state 67 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 67 resolved as shift
WARNING: shift/reduce conflict for FOR in state 67 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 165 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 165 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 165 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 165 resolved as shift
WARNING: shift/reduce conflict for VAR in state 165 resolved as shift
WARNING: shift/reduce conflict for VAL in state 165 resolved as shift
WARNING: shift/reduce conflict for STRINGPALABRA in state 165 resolved as shift
WARNING: shift/reduce conflict for FUN in state 165 resolved as shift
WARNING: shift/reduce conflict for IF in state 165 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 165 resolved as shift
WARNING: shift/reduce conflict for FOR in state 165 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 169 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 169 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 169 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 169 resolved as shift
WARNING: shift/reduce conflict for VAR in state 169 resolved as shift
WARNING: shift/reduce conflict for VAL in state 169 resolved as shift
WARNING: shift/reduce conflict for STRINGPALABRA in state 169 resolved as shift
WARNING: shift/reduce conflict for FUN in state 169 resolved as shift
WARNING: shift/reduce conflict for IF in state 169 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 169 resolved as shift
WARNING: shift/reduce conflict for FOR in state 169 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 170 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 170 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 170 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 170 resolved as shift
WARNING: shift/reduce conflict for VAR in state 170 resolved as shift
WARNING: shift/reduce conflict for VAL in state 170 resolved as shift
WARNING: shift/reduce conflict for STRINGPALABRA in state 170 resolved as shift
WARNING: shift/reduce conflict for FUN in state 170 resolved as shift
WARNING: shift/reduce conflict for IF in state 170 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 170 resolved as shift
WARNING: shift/reduce conflict for FOR in state 170 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 171 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 171 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 171 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 171 resolved as shift
WARNING: shift/reduce conflict for VAR in state 171 resolved as shift
WARNING: shift/reduce conflict for VAL in state 171 resolved as shift
WARNING: shift/reduce conflict for STRINGPALABRA in state 171 resolved as shift
WARNING: shift/reduce conflict for FUN in state 171 resolved as shift
WARNING: shift/reduce conflict for IF in state 171 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 171 resolved as shift
WARNING: shift/reduce conflict for FOR in state 171 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 174 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 174 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 174 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 174 resolved as shift
WARNING: shift/reduce conflict for VAR in state 174 resolved as shift
WARNING: shift/reduce conflict for VAL in state 174 resolved as shift
WARNING: shift/reduce conflict for STRINGPALABRA in state 174 resolved as shift
WARNING: shift/reduce conflict for FUN in state 174 resolved as shift
WARNING: shift/reduce conflict for IF in state 174 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 174 resolved as shift
WARNING: shift/reduce conflict for FOR in state 174 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 202 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 202 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 202 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 202 resolved as shift
WARNING: shift/reduce conflict for VAR in state 202 resolved as shift
WARNING: shift/reduce conflict for VAL in state 202 resolved as shift
WARNING: shift/reduce conflict for STRINGPALABRA in state 202 resolved as shift
WARNING: shift/reduce conflict for FUN in state 202 resolved as shift
WARNING: shift/reduce conflict for IF in state 202 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 202 resolved as shift
WARNING: shift/reduce conflict for FOR in state 202 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 220 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 220 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 220 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 220 resolved as shift
WARNING: shift/reduce conflict for VAR in state 220 resolved as shift
WARNING: shift/reduce conflict for VAL in state 220 resolved as shift
WARNING: shift/reduce conflict for STRINGPALABRA in state 220 resolved as shift
WARNING: shift/reduce conflict for FUN in state 220 resolved as shift
WARNING: shift/reduce conflict for IF in state 220 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 220 resolved as shift
WARNING: shift/reduce conflict for FOR in state 220 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 228 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 228 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 228 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 228 resolved as shift
WARNING: shift/reduce conflict for VAR in state 228 resolved as shift
WARNING: shift/reduce conflict for VAL in state 228 resolved as shift
WARNING: shift/reduce conflict for STRINGPALABRA in state 228 resolved as shift
WARNING: shift/reduce conflict for FUN in state 228 resolved as shift
WARNING: shift/reduce conflict for IF in state 228 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 228 resolved as shift
WARNING: shift/reduce conflict for FOR in state 228 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 238 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 238 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 238 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 238 resolved as shift
WARNING: shift/reduce conflict for VAR in state 238 resolved as shift
WARNING: shift/reduce conflict for VAL in state 238 resolved as shift
WARNING: shift/reduce conflict for STRINGPALABRA in state 238 resolved as shift
WARNING: shift/reduce conflict for FUN in state 238 resolved as shift
WARNING: shift/reduce conflict for IF in state 238 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 238 resolved as shift
WARNING: shift/reduce conflict for FOR in state 238 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 263 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 263 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 263 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 263 resolved as shift
WARNING: shift/reduce conflict for VAR in state 263 resolved as shift
WARNING: shift/reduce conflict for VAL in state 263 resolved as shift
WARNING: shift/reduce conflict for STRINGPALABRA in state 263 resolved as shift
WARNING: shift/reduce conflict for FUN in state 263 resolved as shift
WARNING: shift/reduce conflict for IF in state 263 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 263 resolved as shift
WARNING: shift/reduce conflict for FOR in state 263 resolved as shift
WARNING: reduce/reduce conflict in state 3 resolved using rule (repetodo -> todo)
WARNING: rejected rule (contains -> <empty>) in state 3
WARNING: reduce/reduce conflict in state 11 resolved using rule (todo -> sublist)
WARNING: rejected rule (adicionales -> sublist) in state 11
WARNING: Rule (adicionales -> sublist) is never reduced
