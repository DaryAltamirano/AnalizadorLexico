Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    MINUS
    TIMES
    DIVIDE
    MOD
    PUNTOYCOMA
    SALTOLINEA
    THEN
    ELSE
    WHILE
    OR
    AND

Grammar

Rule 0     S' -> todoConLinea
Rule 1     todoConLinea -> repetodo
Rule 2     todo -> lista
Rule 3     todo -> variable
Rule 4     todo -> conjunto
Rule 5     todo -> pair
Rule 6     todo -> control
Rule 7     todo -> adicionales
Rule 8     todo -> funcion
Rule 9     todo -> sublist
Rule 10    todo -> readline
Rule 11    todo -> prin
Rule 12    todo -> contador
Rule 13    todo -> retor
Rule 14    repetodo -> todo
Rule 15    repetodo -> todo repetodo
Rule 16    lista -> ListaConTipo
Rule 17    lista -> ListaSinTipo
Rule 18    variable -> variableConTipo
Rule 19    variable -> variableSinTipo
Rule 20    conjunto -> ConjuntoConTipo
Rule 21    conjunto -> ConjuntoSinTipo
Rule 22    variableConTipo -> valovar VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA
Rule 23    variableConTipo -> valovar VARIABLE DOSPUNTOS INT IGUAL NUMBER
Rule 24    variableConTipo -> valovar VARIABLE DOSPUNTOS BOOLEAN IGUAL
Rule 25    variableSinTipo -> valovar VARIABLE IGUAL datosprimitivos
Rule 26    ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN
Rule 27    ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN
Rule 28    ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN
Rule 29    ListaSinTipo -> valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN
Rule 30    ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN
Rule 31    ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN
Rule 32    ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN
Rule 33    ConjuntoSinTipo -> valovar VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN
Rule 34    pair -> valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN
Rule 35    datosprimitivos -> NUMBER
Rule 36    datosprimitivos -> STRINGPALABRA
Rule 37    datosprimitivos -> BOOLEANPALABRA
Rule 38    datosprimitivos -> VARIABLE
Rule 39    valovar -> VAR
Rule 40    valovar -> VAL
Rule 41    repeInt -> valor
Rule 42    repeInt -> valor COMA repeInt
Rule 43    valor -> NUMBER
Rule 44    valor -> VARIABLE
Rule 45    repeString -> String
Rule 46    repeString -> String COMA repeString
Rule 47    String -> STRINGPALABRA
Rule 48    String -> VARIABLE
Rule 49    repeBool -> bool
Rule 50    repeBool -> bool COMA repeBool
Rule 51    bool -> BOOLEANPALABRA
Rule 52    bool -> VARIABLE
Rule 53    repeCualquier -> datosprimitivos
Rule 54    repeCualquier -> datosprimitivos COMA repeCualquier
Rule 55    comparacion -> valor operadoresComp valor
Rule 56    operadoresComp -> MAYORQUE
Rule 57    operadoresComp -> DIFERENTE
Rule 58    operadoresComp -> MENORQUE
Rule 59    operadoresComp -> ESIGUAL
Rule 60    tipoDato -> INT
Rule 61    tipoDato -> STRING
Rule 62    tipoDato -> BOOLEAN
Rule 63    argumento -> tipoDato VARIABLE
Rule 64    repeArg -> argumento
Rule 65    repeArg -> argumento COMA repeArg
Rule 66    control -> if
Rule 67    control -> when
Rule 68    control -> for
Rule 69    if -> ifBoolean
Rule 70    if -> ifComparacion
Rule 71    if -> ifVariable
Rule 72    when -> whenVacio
Rule 73    when -> whenVariable
Rule 74    for -> forRango
Rule 75    for -> forVariable
Rule 76    ifBoolean -> IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE
Rule 77    ifComparacion -> IF LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE
Rule 78    ifVariable -> IF LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE
Rule 79    whenVariable -> WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE
Rule 80    whenVacio -> WHEN LLLAVE repetodo RLLAVE
Rule 81    forVariable -> FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE
Rule 82    forRango -> FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE
Rule 83    funcion -> funConSalidaArg
Rule 84    funcion -> funConSalida
Rule 85    funcion -> funSinSalidaArg
Rule 86    funcion -> funSinSalida
Rule 87    funConSalida -> FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
Rule 88    funSinSalida -> FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE
Rule 89    funConSalidaArg -> FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
Rule 90    funSinSalidaArg -> FUN VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE
Rule 91    adicionales -> size
Rule 92    adicionales -> rindex
Rule 93    adicionales -> sublist
Rule 94    adicionales -> contains
Rule 95    size -> VARIABLE PUNTO SIZE
Rule 96    contains -> <empty>
Rule 97    contains -> VARIABLE PUNTO CONTAINS LPAREN datosprimitivos RPAREN
Rule 98    contains -> STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN
Rule 99    contains -> STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE RPAREN
Rule 100   rindex -> STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier RPAREN
Rule 101   rindex -> VARIABLE PUNTO RINDEX LPAREN repeCualquier RPAREN
Rule 102   sublist -> sublistIndex
Rule 103   sublist -> sublistInicio
Rule 104   sublist -> sublistFinal
Rule 105   sublistIndex -> lista LCLASP INT DOSPUNTOS INT RCLASP
Rule 106   sublistInicio -> lista LCLASP DOSPUNTOS INT RCLASP
Rule 107   sublistFinal -> lista LCLASP INT DOSPUNTOS RCLASP
Rule 108   readline -> VARIABLE IGUAL READLINE
Rule 109   readline -> valovar VARIABLE IGUAL READLINE
Rule 110   prin -> PRINT LPAREN datosprimitivos RPAREN
Rule 111   prin -> PRINTLN LPAREN datosprimitivos RPAREN
Rule 112   contador -> VARIABLE PLUS PLUS
Rule 113   retor -> RETURN VARIABLE

Terminals, with rules where they appear

AND                  : 
BOOLEAN              : 24 28 32 62
BOOLEANPALABRA       : 37 51 76
COMA                 : 34 42 46 50 54 65
CONTAINS             : 97 98 99
DIFERENTE            : 57
DIVIDE               : 
DOSPUNTOS            : 22 23 24 26 27 28 30 31 32 87 89 105 106 107
ELSE                 : 
ESIGUAL              : 59
FOR                  : 81 82
FUN                  : 87 88 89 90
IF                   : 76 77 78
IGUAL                : 22 23 24 25 26 27 28 29 30 31 32 33 34 108 109
IN                   : 81 82
INT                  : 23 26 30 60 105 105 106 107
LCLASP               : 105 106 107
LIST                 : 26 27 28
LISTOF               : 26 27 28 29
LLLAVE               : 76 77 78 79 80 81 82 87 88 89 90
LPAREN               : 26 27 28 29 30 31 32 33 34 76 77 78 79 81 82 87 88 89 90 97 98 99 100 101 110 111
MAYORQUE             : 26 27 28 30 31 32 56
MENORQUE             : 26 27 28 30 31 32 58
MINUS                : 
MOD                  : 
NUMBER               : 23 35 43 82 82
OR                   : 
PAIR                 : 34
PLUS                 : 112 112
PRINT                : 110
PRINTLN              : 111
PUNTO                : 82 82 95 97 98 99 100 101
PUNTOYCOMA           : 
RCLASP               : 105 106 107
READLINE             : 108 109
RETURN               : 113
RINDEX               : 100 101
RLLAVE               : 76 77 78 79 80 81 82 87 88 89 90
RPAREN               : 26 27 28 29 30 31 32 33 34 76 77 78 79 81 82 87 88 89 90 97 98 99 100 101 110 111
SALTOLINEA           : 
SET                  : 30 31 32
SETOF                : 30 31 32 33
SIZE                 : 95
STRING               : 22 27 31 61
STRINGPALABRA        : 22 36 47 98 98 99 100
THEN                 : 
TIMES                : 
VAL                  : 40
VAR                  : 39
VARIABLE             : 22 23 24 25 26 27 28 29 30 31 32 33 34 38 44 48 52 63 78 79 81 81 82 87 88 89 90 95 97 99 101 108 109 112 113
WHEN                 : 79 80
WHILE                : 
error                : 

Nonterminals, with rules where they appear

ConjuntoConTipo      : 20
ConjuntoSinTipo      : 21
ListaConTipo         : 16
ListaSinTipo         : 17
String               : 45 46
adicionales          : 7
argumento            : 64 65
bool                 : 49 50
comparacion          : 77
conjunto             : 4
contador             : 12
contains             : 94
control              : 6
datosprimitivos      : 25 34 34 53 54 97 110 111
for                  : 68
forRango             : 74
forVariable          : 75
funConSalida         : 84
funConSalidaArg      : 83
funSinSalida         : 86
funSinSalidaArg      : 85
funcion              : 8
if                   : 66
ifBoolean            : 69
ifComparacion        : 70
ifVariable           : 71
lista                : 2 105 106 107
operadoresComp       : 55
pair                 : 5
prin                 : 11
readline             : 10
repeArg              : 65 87 88
repeBool             : 28 32 50
repeCualquier        : 29 33 54 100 101
repeInt              : 26 30 42
repeString           : 27 31 46
repetodo             : 1 15 76 77 78 79 80 81 82 87 88 89 90
retor                : 13
rindex               : 92
size                 : 91
sublist              : 9 93
sublistFinal         : 104
sublistIndex         : 102
sublistInicio        : 103
tipoDato             : 63 87 89
todo                 : 14 15
todoConLinea         : 0
valor                : 41 42 55 55
valovar              : 22 23 24 25 26 27 28 29 30 31 32 33 34 109
variable             : 3
variableConTipo      : 18
variableSinTipo      : 19
when                 : 67
whenVacio            : 72
whenVariable         : 73

Parsing method: LALR

state 0

    (0) S' -> . todoConLinea
    (1) todoConLinea -> . repetodo
    (14) repetodo -> . todo
    (15) repetodo -> . todo repetodo
    (2) todo -> . lista
    (3) todo -> . variable
    (4) todo -> . conjunto
    (5) todo -> . pair
    (6) todo -> . control
    (7) todo -> . adicionales
    (8) todo -> . funcion
    (9) todo -> . sublist
    (10) todo -> . readline
    (11) todo -> . prin
    (12) todo -> . contador
    (13) todo -> . retor
    (16) lista -> . ListaConTipo
    (17) lista -> . ListaSinTipo
    (18) variable -> . variableConTipo
    (19) variable -> . variableSinTipo
    (20) conjunto -> . ConjuntoConTipo
    (21) conjunto -> . ConjuntoSinTipo
    (34) pair -> . valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN
    (66) control -> . if
    (67) control -> . when
    (68) control -> . for
    (91) adicionales -> . size
    (92) adicionales -> . rindex
    (93) adicionales -> . sublist
    (94) adicionales -> . contains
    (83) funcion -> . funConSalidaArg
    (84) funcion -> . funConSalida
    (85) funcion -> . funSinSalidaArg
    (86) funcion -> . funSinSalida
    (102) sublist -> . sublistIndex
    (103) sublist -> . sublistInicio
    (104) sublist -> . sublistFinal
    (108) readline -> . VARIABLE IGUAL READLINE
    (109) readline -> . valovar VARIABLE IGUAL READLINE
    (110) prin -> . PRINT LPAREN datosprimitivos RPAREN
    (111) prin -> . PRINTLN LPAREN datosprimitivos RPAREN
    (112) contador -> . VARIABLE PLUS PLUS
    (113) retor -> . RETURN VARIABLE
    (26) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN
    (27) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN
    (28) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN
    (29) ListaSinTipo -> . valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN
    (22) variableConTipo -> . valovar VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA
    (23) variableConTipo -> . valovar VARIABLE DOSPUNTOS INT IGUAL NUMBER
    (24) variableConTipo -> . valovar VARIABLE DOSPUNTOS BOOLEAN IGUAL
    (25) variableSinTipo -> . valovar VARIABLE IGUAL datosprimitivos
    (30) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN
    (31) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN
    (32) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN
    (33) ConjuntoSinTipo -> . valovar VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN
    (39) valovar -> . VAR
    (40) valovar -> . VAL
    (69) if -> . ifBoolean
    (70) if -> . ifComparacion
    (71) if -> . ifVariable
    (72) when -> . whenVacio
    (73) when -> . whenVariable
    (74) for -> . forRango
    (75) for -> . forVariable
    (95) size -> . VARIABLE PUNTO SIZE
    (100) rindex -> . STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier RPAREN
    (101) rindex -> . VARIABLE PUNTO RINDEX LPAREN repeCualquier RPAREN
    (96) contains -> .
    (97) contains -> . VARIABLE PUNTO CONTAINS LPAREN datosprimitivos RPAREN
    (98) contains -> . STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN
    (99) contains -> . STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE RPAREN
    (89) funConSalidaArg -> . FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (87) funConSalida -> . FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (90) funSinSalidaArg -> . FUN VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE
    (88) funSinSalida -> . FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE
    (105) sublistIndex -> . lista LCLASP INT DOSPUNTOS INT RCLASP
    (106) sublistInicio -> . lista LCLASP DOSPUNTOS INT RCLASP
    (107) sublistFinal -> . lista LCLASP INT DOSPUNTOS RCLASP
    (76) ifBoolean -> . IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE
    (77) ifComparacion -> . IF LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE
    (78) ifVariable -> . IF LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE
    (80) whenVacio -> . WHEN LLLAVE repetodo RLLAVE
    (79) whenVariable -> . WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE
    (82) forRango -> . FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE
    (81) forVariable -> . FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for STRINGPALABRA resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHEN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    VARIABLE        shift and go to state 23
    PRINT           shift and go to state 37
    PRINTLN         shift and go to state 38
    RETURN          shift and go to state 39
    VAR             shift and go to state 41
    VAL             shift and go to state 42
    STRINGPALABRA   shift and go to state 40
    $end            reduce using rule 96 (contains -> .)
    FUN             shift and go to state 50
    IF              shift and go to state 51
    WHEN            shift and go to state 52
    FOR             shift and go to state 53

  ! VARIABLE        [ reduce using rule 96 (contains -> .) ]
  ! PRINT           [ reduce using rule 96 (contains -> .) ]
  ! PRINTLN         [ reduce using rule 96 (contains -> .) ]
  ! RETURN          [ reduce using rule 96 (contains -> .) ]
  ! VAR             [ reduce using rule 96 (contains -> .) ]
  ! VAL             [ reduce using rule 96 (contains -> .) ]
  ! STRINGPALABRA   [ reduce using rule 96 (contains -> .) ]
  ! FUN             [ reduce using rule 96 (contains -> .) ]
  ! IF              [ reduce using rule 96 (contains -> .) ]
  ! WHEN            [ reduce using rule 96 (contains -> .) ]
  ! FOR             [ reduce using rule 96 (contains -> .) ]

    todoConLinea                   shift and go to state 1
    repetodo                       shift and go to state 2
    todo                           shift and go to state 3
    lista                          shift and go to state 4
    variable                       shift and go to state 5
    conjunto                       shift and go to state 6
    pair                           shift and go to state 7
    control                        shift and go to state 8
    adicionales                    shift and go to state 9
    funcion                        shift and go to state 10
    sublist                        shift and go to state 11
    readline                       shift and go to state 12
    prin                           shift and go to state 13
    contador                       shift and go to state 14
    retor                          shift and go to state 15
    ListaConTipo                   shift and go to state 16
    ListaSinTipo                   shift and go to state 17
    variableConTipo                shift and go to state 18
    variableSinTipo                shift and go to state 19
    ConjuntoConTipo                shift and go to state 20
    ConjuntoSinTipo                shift and go to state 21
    valovar                        shift and go to state 22
    if                             shift and go to state 24
    when                           shift and go to state 25
    for                            shift and go to state 26
    size                           shift and go to state 27
    rindex                         shift and go to state 28
    contains                       shift and go to state 29
    funConSalidaArg                shift and go to state 30
    funConSalida                   shift and go to state 31
    funSinSalidaArg                shift and go to state 32
    funSinSalida                   shift and go to state 33
    sublistIndex                   shift and go to state 34
    sublistInicio                  shift and go to state 35
    sublistFinal                   shift and go to state 36
    ifBoolean                      shift and go to state 43
    ifComparacion                  shift and go to state 44
    ifVariable                     shift and go to state 45
    whenVacio                      shift and go to state 46
    whenVariable                   shift and go to state 47
    forRango                       shift and go to state 48
    forVariable                    shift and go to state 49

state 1

    (0) S' -> todoConLinea .



state 2

    (1) todoConLinea -> repetodo .

    $end            reduce using rule 1 (todoConLinea -> repetodo .)


state 3

    (14) repetodo -> todo .
    (15) repetodo -> todo . repetodo
    (14) repetodo -> . todo
    (15) repetodo -> . todo repetodo
    (2) todo -> . lista
    (3) todo -> . variable
    (4) todo -> . conjunto
    (5) todo -> . pair
    (6) todo -> . control
    (7) todo -> . adicionales
    (8) todo -> . funcion
    (9) todo -> . sublist
    (10) todo -> . readline
    (11) todo -> . prin
    (12) todo -> . contador
    (13) todo -> . retor
    (16) lista -> . ListaConTipo
    (17) lista -> . ListaSinTipo
    (18) variable -> . variableConTipo
    (19) variable -> . variableSinTipo
    (20) conjunto -> . ConjuntoConTipo
    (21) conjunto -> . ConjuntoSinTipo
    (34) pair -> . valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN
    (66) control -> . if
    (67) control -> . when
    (68) control -> . for
    (91) adicionales -> . size
    (92) adicionales -> . rindex
    (93) adicionales -> . sublist
    (94) adicionales -> . contains
    (83) funcion -> . funConSalidaArg
    (84) funcion -> . funConSalida
    (85) funcion -> . funSinSalidaArg
    (86) funcion -> . funSinSalida
    (102) sublist -> . sublistIndex
    (103) sublist -> . sublistInicio
    (104) sublist -> . sublistFinal
    (108) readline -> . VARIABLE IGUAL READLINE
    (109) readline -> . valovar VARIABLE IGUAL READLINE
    (110) prin -> . PRINT LPAREN datosprimitivos RPAREN
    (111) prin -> . PRINTLN LPAREN datosprimitivos RPAREN
    (112) contador -> . VARIABLE PLUS PLUS
    (113) retor -> . RETURN VARIABLE
    (26) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN
    (27) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN
    (28) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN
    (29) ListaSinTipo -> . valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN
    (22) variableConTipo -> . valovar VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA
    (23) variableConTipo -> . valovar VARIABLE DOSPUNTOS INT IGUAL NUMBER
    (24) variableConTipo -> . valovar VARIABLE DOSPUNTOS BOOLEAN IGUAL
    (25) variableSinTipo -> . valovar VARIABLE IGUAL datosprimitivos
    (30) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN
    (31) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN
    (32) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN
    (33) ConjuntoSinTipo -> . valovar VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN
    (39) valovar -> . VAR
    (40) valovar -> . VAL
    (69) if -> . ifBoolean
    (70) if -> . ifComparacion
    (71) if -> . ifVariable
    (72) when -> . whenVacio
    (73) when -> . whenVariable
    (74) for -> . forRango
    (75) for -> . forVariable
    (95) size -> . VARIABLE PUNTO SIZE
    (100) rindex -> . STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier RPAREN
    (101) rindex -> . VARIABLE PUNTO RINDEX LPAREN repeCualquier RPAREN
    (96) contains -> .
    (97) contains -> . VARIABLE PUNTO CONTAINS LPAREN datosprimitivos RPAREN
    (98) contains -> . STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN
    (99) contains -> . STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE RPAREN
    (89) funConSalidaArg -> . FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (87) funConSalida -> . FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (90) funSinSalidaArg -> . FUN VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE
    (88) funSinSalida -> . FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE
    (105) sublistIndex -> . lista LCLASP INT DOSPUNTOS INT RCLASP
    (106) sublistInicio -> . lista LCLASP DOSPUNTOS INT RCLASP
    (107) sublistFinal -> . lista LCLASP INT DOSPUNTOS RCLASP
    (76) ifBoolean -> . IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE
    (77) ifComparacion -> . IF LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE
    (78) ifVariable -> . IF LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE
    (80) whenVacio -> . WHEN LLLAVE repetodo RLLAVE
    (79) whenVariable -> . WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE
    (82) forRango -> . FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE
    (81) forVariable -> . FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for STRINGPALABRA resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 14 (repetodo -> todo .)
  ! reduce/reduce conflict for RLLAVE resolved using rule 14 (repetodo -> todo .)
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHEN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    $end            reduce using rule 14 (repetodo -> todo .)
    RLLAVE          reduce using rule 14 (repetodo -> todo .)
    VARIABLE        shift and go to state 23
    PRINT           shift and go to state 37
    PRINTLN         shift and go to state 38
    RETURN          shift and go to state 39
    VAR             shift and go to state 41
    VAL             shift and go to state 42
    STRINGPALABRA   shift and go to state 40
    FUN             shift and go to state 50
    IF              shift and go to state 51
    WHEN            shift and go to state 52
    FOR             shift and go to state 53

  ! VARIABLE        [ reduce using rule 96 (contains -> .) ]
  ! PRINT           [ reduce using rule 96 (contains -> .) ]
  ! PRINTLN         [ reduce using rule 96 (contains -> .) ]
  ! RETURN          [ reduce using rule 96 (contains -> .) ]
  ! VAR             [ reduce using rule 96 (contains -> .) ]
  ! VAL             [ reduce using rule 96 (contains -> .) ]
  ! STRINGPALABRA   [ reduce using rule 96 (contains -> .) ]
  ! FUN             [ reduce using rule 96 (contains -> .) ]
  ! IF              [ reduce using rule 96 (contains -> .) ]
  ! WHEN            [ reduce using rule 96 (contains -> .) ]
  ! FOR             [ reduce using rule 96 (contains -> .) ]
  ! $end            [ reduce using rule 96 (contains -> .) ]
  ! RLLAVE          [ reduce using rule 96 (contains -> .) ]

    todo                           shift and go to state 3
    repetodo                       shift and go to state 54
    lista                          shift and go to state 4
    variable                       shift and go to state 5
    conjunto                       shift and go to state 6
    pair                           shift and go to state 7
    control                        shift and go to state 8
    adicionales                    shift and go to state 9
    funcion                        shift and go to state 10
    sublist                        shift and go to state 11
    readline                       shift and go to state 12
    prin                           shift and go to state 13
    contador                       shift and go to state 14
    retor                          shift and go to state 15
    ListaConTipo                   shift and go to state 16
    ListaSinTipo                   shift and go to state 17
    variableConTipo                shift and go to state 18
    variableSinTipo                shift and go to state 19
    ConjuntoConTipo                shift and go to state 20
    ConjuntoSinTipo                shift and go to state 21
    valovar                        shift and go to state 22
    if                             shift and go to state 24
    when                           shift and go to state 25
    for                            shift and go to state 26
    size                           shift and go to state 27
    rindex                         shift and go to state 28
    contains                       shift and go to state 29
    funConSalidaArg                shift and go to state 30
    funConSalida                   shift and go to state 31
    funSinSalidaArg                shift and go to state 32
    funSinSalida                   shift and go to state 33
    sublistIndex                   shift and go to state 34
    sublistInicio                  shift and go to state 35
    sublistFinal                   shift and go to state 36
    ifBoolean                      shift and go to state 43
    ifComparacion                  shift and go to state 44
    ifVariable                     shift and go to state 45
    whenVacio                      shift and go to state 46
    whenVariable                   shift and go to state 47
    forRango                       shift and go to state 48
    forVariable                    shift and go to state 49

state 4

    (2) todo -> lista .
    (105) sublistIndex -> lista . LCLASP INT DOSPUNTOS INT RCLASP
    (106) sublistInicio -> lista . LCLASP DOSPUNTOS INT RCLASP
    (107) sublistFinal -> lista . LCLASP INT DOSPUNTOS RCLASP

    VARIABLE        reduce using rule 2 (todo -> lista .)
    PRINT           reduce using rule 2 (todo -> lista .)
    PRINTLN         reduce using rule 2 (todo -> lista .)
    RETURN          reduce using rule 2 (todo -> lista .)
    VAR             reduce using rule 2 (todo -> lista .)
    VAL             reduce using rule 2 (todo -> lista .)
    STRINGPALABRA   reduce using rule 2 (todo -> lista .)
    FUN             reduce using rule 2 (todo -> lista .)
    IF              reduce using rule 2 (todo -> lista .)
    WHEN            reduce using rule 2 (todo -> lista .)
    FOR             reduce using rule 2 (todo -> lista .)
    $end            reduce using rule 2 (todo -> lista .)
    RLLAVE          reduce using rule 2 (todo -> lista .)
    LCLASP          shift and go to state 55


state 5

    (3) todo -> variable .

    VARIABLE        reduce using rule 3 (todo -> variable .)
    PRINT           reduce using rule 3 (todo -> variable .)
    PRINTLN         reduce using rule 3 (todo -> variable .)
    RETURN          reduce using rule 3 (todo -> variable .)
    VAR             reduce using rule 3 (todo -> variable .)
    VAL             reduce using rule 3 (todo -> variable .)
    STRINGPALABRA   reduce using rule 3 (todo -> variable .)
    FUN             reduce using rule 3 (todo -> variable .)
    IF              reduce using rule 3 (todo -> variable .)
    WHEN            reduce using rule 3 (todo -> variable .)
    FOR             reduce using rule 3 (todo -> variable .)
    $end            reduce using rule 3 (todo -> variable .)
    RLLAVE          reduce using rule 3 (todo -> variable .)


state 6

    (4) todo -> conjunto .

    VARIABLE        reduce using rule 4 (todo -> conjunto .)
    PRINT           reduce using rule 4 (todo -> conjunto .)
    PRINTLN         reduce using rule 4 (todo -> conjunto .)
    RETURN          reduce using rule 4 (todo -> conjunto .)
    VAR             reduce using rule 4 (todo -> conjunto .)
    VAL             reduce using rule 4 (todo -> conjunto .)
    STRINGPALABRA   reduce using rule 4 (todo -> conjunto .)
    FUN             reduce using rule 4 (todo -> conjunto .)
    IF              reduce using rule 4 (todo -> conjunto .)
    WHEN            reduce using rule 4 (todo -> conjunto .)
    FOR             reduce using rule 4 (todo -> conjunto .)
    $end            reduce using rule 4 (todo -> conjunto .)
    RLLAVE          reduce using rule 4 (todo -> conjunto .)


state 7

    (5) todo -> pair .

    VARIABLE        reduce using rule 5 (todo -> pair .)
    PRINT           reduce using rule 5 (todo -> pair .)
    PRINTLN         reduce using rule 5 (todo -> pair .)
    RETURN          reduce using rule 5 (todo -> pair .)
    VAR             reduce using rule 5 (todo -> pair .)
    VAL             reduce using rule 5 (todo -> pair .)
    STRINGPALABRA   reduce using rule 5 (todo -> pair .)
    FUN             reduce using rule 5 (todo -> pair .)
    IF              reduce using rule 5 (todo -> pair .)
    WHEN            reduce using rule 5 (todo -> pair .)
    FOR             reduce using rule 5 (todo -> pair .)
    $end            reduce using rule 5 (todo -> pair .)
    RLLAVE          reduce using rule 5 (todo -> pair .)


state 8

    (6) todo -> control .

    VARIABLE        reduce using rule 6 (todo -> control .)
    PRINT           reduce using rule 6 (todo -> control .)
    PRINTLN         reduce using rule 6 (todo -> control .)
    RETURN          reduce using rule 6 (todo -> control .)
    VAR             reduce using rule 6 (todo -> control .)
    VAL             reduce using rule 6 (todo -> control .)
    STRINGPALABRA   reduce using rule 6 (todo -> control .)
    FUN             reduce using rule 6 (todo -> control .)
    IF              reduce using rule 6 (todo -> control .)
    WHEN            reduce using rule 6 (todo -> control .)
    FOR             reduce using rule 6 (todo -> control .)
    $end            reduce using rule 6 (todo -> control .)
    RLLAVE          reduce using rule 6 (todo -> control .)


state 9

    (7) todo -> adicionales .

    VARIABLE        reduce using rule 7 (todo -> adicionales .)
    PRINT           reduce using rule 7 (todo -> adicionales .)
    PRINTLN         reduce using rule 7 (todo -> adicionales .)
    RETURN          reduce using rule 7 (todo -> adicionales .)
    VAR             reduce using rule 7 (todo -> adicionales .)
    VAL             reduce using rule 7 (todo -> adicionales .)
    STRINGPALABRA   reduce using rule 7 (todo -> adicionales .)
    FUN             reduce using rule 7 (todo -> adicionales .)
    IF              reduce using rule 7 (todo -> adicionales .)
    WHEN            reduce using rule 7 (todo -> adicionales .)
    FOR             reduce using rule 7 (todo -> adicionales .)
    $end            reduce using rule 7 (todo -> adicionales .)
    RLLAVE          reduce using rule 7 (todo -> adicionales .)


state 10

    (8) todo -> funcion .

    VARIABLE        reduce using rule 8 (todo -> funcion .)
    PRINT           reduce using rule 8 (todo -> funcion .)
    PRINTLN         reduce using rule 8 (todo -> funcion .)
    RETURN          reduce using rule 8 (todo -> funcion .)
    VAR             reduce using rule 8 (todo -> funcion .)
    VAL             reduce using rule 8 (todo -> funcion .)
    STRINGPALABRA   reduce using rule 8 (todo -> funcion .)
    FUN             reduce using rule 8 (todo -> funcion .)
    IF              reduce using rule 8 (todo -> funcion .)
    WHEN            reduce using rule 8 (todo -> funcion .)
    FOR             reduce using rule 8 (todo -> funcion .)
    $end            reduce using rule 8 (todo -> funcion .)
    RLLAVE          reduce using rule 8 (todo -> funcion .)


state 11

    (9) todo -> sublist .
    (93) adicionales -> sublist .

  ! reduce/reduce conflict for VARIABLE resolved using rule 9 (todo -> sublist .)
  ! reduce/reduce conflict for PRINT resolved using rule 9 (todo -> sublist .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 9 (todo -> sublist .)
  ! reduce/reduce conflict for RETURN resolved using rule 9 (todo -> sublist .)
  ! reduce/reduce conflict for VAR resolved using rule 9 (todo -> sublist .)
  ! reduce/reduce conflict for VAL resolved using rule 9 (todo -> sublist .)
  ! reduce/reduce conflict for STRINGPALABRA resolved using rule 9 (todo -> sublist .)
  ! reduce/reduce conflict for FUN resolved using rule 9 (todo -> sublist .)
  ! reduce/reduce conflict for IF resolved using rule 9 (todo -> sublist .)
  ! reduce/reduce conflict for WHEN resolved using rule 9 (todo -> sublist .)
  ! reduce/reduce conflict for FOR resolved using rule 9 (todo -> sublist .)
  ! reduce/reduce conflict for $end resolved using rule 9 (todo -> sublist .)
  ! reduce/reduce conflict for RLLAVE resolved using rule 9 (todo -> sublist .)
    VARIABLE        reduce using rule 9 (todo -> sublist .)
    PRINT           reduce using rule 9 (todo -> sublist .)
    PRINTLN         reduce using rule 9 (todo -> sublist .)
    RETURN          reduce using rule 9 (todo -> sublist .)
    VAR             reduce using rule 9 (todo -> sublist .)
    VAL             reduce using rule 9 (todo -> sublist .)
    STRINGPALABRA   reduce using rule 9 (todo -> sublist .)
    FUN             reduce using rule 9 (todo -> sublist .)
    IF              reduce using rule 9 (todo -> sublist .)
    WHEN            reduce using rule 9 (todo -> sublist .)
    FOR             reduce using rule 9 (todo -> sublist .)
    $end            reduce using rule 9 (todo -> sublist .)
    RLLAVE          reduce using rule 9 (todo -> sublist .)

  ! VARIABLE        [ reduce using rule 93 (adicionales -> sublist .) ]
  ! PRINT           [ reduce using rule 93 (adicionales -> sublist .) ]
  ! PRINTLN         [ reduce using rule 93 (adicionales -> sublist .) ]
  ! RETURN          [ reduce using rule 93 (adicionales -> sublist .) ]
  ! VAR             [ reduce using rule 93 (adicionales -> sublist .) ]
  ! VAL             [ reduce using rule 93 (adicionales -> sublist .) ]
  ! STRINGPALABRA   [ reduce using rule 93 (adicionales -> sublist .) ]
  ! FUN             [ reduce using rule 93 (adicionales -> sublist .) ]
  ! IF              [ reduce using rule 93 (adicionales -> sublist .) ]
  ! WHEN            [ reduce using rule 93 (adicionales -> sublist .) ]
  ! FOR             [ reduce using rule 93 (adicionales -> sublist .) ]
  ! $end            [ reduce using rule 93 (adicionales -> sublist .) ]
  ! RLLAVE          [ reduce using rule 93 (adicionales -> sublist .) ]


state 12

    (10) todo -> readline .

    VARIABLE        reduce using rule 10 (todo -> readline .)
    PRINT           reduce using rule 10 (todo -> readline .)
    PRINTLN         reduce using rule 10 (todo -> readline .)
    RETURN          reduce using rule 10 (todo -> readline .)
    VAR             reduce using rule 10 (todo -> readline .)
    VAL             reduce using rule 10 (todo -> readline .)
    STRINGPALABRA   reduce using rule 10 (todo -> readline .)
    FUN             reduce using rule 10 (todo -> readline .)
    IF              reduce using rule 10 (todo -> readline .)
    WHEN            reduce using rule 10 (todo -> readline .)
    FOR             reduce using rule 10 (todo -> readline .)
    $end            reduce using rule 10 (todo -> readline .)
    RLLAVE          reduce using rule 10 (todo -> readline .)


state 13

    (11) todo -> prin .

    VARIABLE        reduce using rule 11 (todo -> prin .)
    PRINT           reduce using rule 11 (todo -> prin .)
    PRINTLN         reduce using rule 11 (todo -> prin .)
    RETURN          reduce using rule 11 (todo -> prin .)
    VAR             reduce using rule 11 (todo -> prin .)
    VAL             reduce using rule 11 (todo -> prin .)
    STRINGPALABRA   reduce using rule 11 (todo -> prin .)
    FUN             reduce using rule 11 (todo -> prin .)
    IF              reduce using rule 11 (todo -> prin .)
    WHEN            reduce using rule 11 (todo -> prin .)
    FOR             reduce using rule 11 (todo -> prin .)
    $end            reduce using rule 11 (todo -> prin .)
    RLLAVE          reduce using rule 11 (todo -> prin .)


state 14

    (12) todo -> contador .

    VARIABLE        reduce using rule 12 (todo -> contador .)
    PRINT           reduce using rule 12 (todo -> contador .)
    PRINTLN         reduce using rule 12 (todo -> contador .)
    RETURN          reduce using rule 12 (todo -> contador .)
    VAR             reduce using rule 12 (todo -> contador .)
    VAL             reduce using rule 12 (todo -> contador .)
    STRINGPALABRA   reduce using rule 12 (todo -> contador .)
    FUN             reduce using rule 12 (todo -> contador .)
    IF              reduce using rule 12 (todo -> contador .)
    WHEN            reduce using rule 12 (todo -> contador .)
    FOR             reduce using rule 12 (todo -> contador .)
    $end            reduce using rule 12 (todo -> contador .)
    RLLAVE          reduce using rule 12 (todo -> contador .)


state 15

    (13) todo -> retor .

    VARIABLE        reduce using rule 13 (todo -> retor .)
    PRINT           reduce using rule 13 (todo -> retor .)
    PRINTLN         reduce using rule 13 (todo -> retor .)
    RETURN          reduce using rule 13 (todo -> retor .)
    VAR             reduce using rule 13 (todo -> retor .)
    VAL             reduce using rule 13 (todo -> retor .)
    STRINGPALABRA   reduce using rule 13 (todo -> retor .)
    FUN             reduce using rule 13 (todo -> retor .)
    IF              reduce using rule 13 (todo -> retor .)
    WHEN            reduce using rule 13 (todo -> retor .)
    FOR             reduce using rule 13 (todo -> retor .)
    $end            reduce using rule 13 (todo -> retor .)
    RLLAVE          reduce using rule 13 (todo -> retor .)


state 16

    (16) lista -> ListaConTipo .

    LCLASP          reduce using rule 16 (lista -> ListaConTipo .)
    VARIABLE        reduce using rule 16 (lista -> ListaConTipo .)
    PRINT           reduce using rule 16 (lista -> ListaConTipo .)
    PRINTLN         reduce using rule 16 (lista -> ListaConTipo .)
    RETURN          reduce using rule 16 (lista -> ListaConTipo .)
    VAR             reduce using rule 16 (lista -> ListaConTipo .)
    VAL             reduce using rule 16 (lista -> ListaConTipo .)
    STRINGPALABRA   reduce using rule 16 (lista -> ListaConTipo .)
    FUN             reduce using rule 16 (lista -> ListaConTipo .)
    IF              reduce using rule 16 (lista -> ListaConTipo .)
    WHEN            reduce using rule 16 (lista -> ListaConTipo .)
    FOR             reduce using rule 16 (lista -> ListaConTipo .)
    $end            reduce using rule 16 (lista -> ListaConTipo .)
    RLLAVE          reduce using rule 16 (lista -> ListaConTipo .)


state 17

    (17) lista -> ListaSinTipo .

    LCLASP          reduce using rule 17 (lista -> ListaSinTipo .)
    VARIABLE        reduce using rule 17 (lista -> ListaSinTipo .)
    PRINT           reduce using rule 17 (lista -> ListaSinTipo .)
    PRINTLN         reduce using rule 17 (lista -> ListaSinTipo .)
    RETURN          reduce using rule 17 (lista -> ListaSinTipo .)
    VAR             reduce using rule 17 (lista -> ListaSinTipo .)
    VAL             reduce using rule 17 (lista -> ListaSinTipo .)
    STRINGPALABRA   reduce using rule 17 (lista -> ListaSinTipo .)
    FUN             reduce using rule 17 (lista -> ListaSinTipo .)
    IF              reduce using rule 17 (lista -> ListaSinTipo .)
    WHEN            reduce using rule 17 (lista -> ListaSinTipo .)
    FOR             reduce using rule 17 (lista -> ListaSinTipo .)
    $end            reduce using rule 17 (lista -> ListaSinTipo .)
    RLLAVE          reduce using rule 17 (lista -> ListaSinTipo .)


state 18

    (18) variable -> variableConTipo .

    VARIABLE        reduce using rule 18 (variable -> variableConTipo .)
    PRINT           reduce using rule 18 (variable -> variableConTipo .)
    PRINTLN         reduce using rule 18 (variable -> variableConTipo .)
    RETURN          reduce using rule 18 (variable -> variableConTipo .)
    VAR             reduce using rule 18 (variable -> variableConTipo .)
    VAL             reduce using rule 18 (variable -> variableConTipo .)
    STRINGPALABRA   reduce using rule 18 (variable -> variableConTipo .)
    FUN             reduce using rule 18 (variable -> variableConTipo .)
    IF              reduce using rule 18 (variable -> variableConTipo .)
    WHEN            reduce using rule 18 (variable -> variableConTipo .)
    FOR             reduce using rule 18 (variable -> variableConTipo .)
    $end            reduce using rule 18 (variable -> variableConTipo .)
    RLLAVE          reduce using rule 18 (variable -> variableConTipo .)


state 19

    (19) variable -> variableSinTipo .

    VARIABLE        reduce using rule 19 (variable -> variableSinTipo .)
    PRINT           reduce using rule 19 (variable -> variableSinTipo .)
    PRINTLN         reduce using rule 19 (variable -> variableSinTipo .)
    RETURN          reduce using rule 19 (variable -> variableSinTipo .)
    VAR             reduce using rule 19 (variable -> variableSinTipo .)
    VAL             reduce using rule 19 (variable -> variableSinTipo .)
    STRINGPALABRA   reduce using rule 19 (variable -> variableSinTipo .)
    FUN             reduce using rule 19 (variable -> variableSinTipo .)
    IF              reduce using rule 19 (variable -> variableSinTipo .)
    WHEN            reduce using rule 19 (variable -> variableSinTipo .)
    FOR             reduce using rule 19 (variable -> variableSinTipo .)
    $end            reduce using rule 19 (variable -> variableSinTipo .)
    RLLAVE          reduce using rule 19 (variable -> variableSinTipo .)


state 20

    (20) conjunto -> ConjuntoConTipo .

    VARIABLE        reduce using rule 20 (conjunto -> ConjuntoConTipo .)
    PRINT           reduce using rule 20 (conjunto -> ConjuntoConTipo .)
    PRINTLN         reduce using rule 20 (conjunto -> ConjuntoConTipo .)
    RETURN          reduce using rule 20 (conjunto -> ConjuntoConTipo .)
    VAR             reduce using rule 20 (conjunto -> ConjuntoConTipo .)
    VAL             reduce using rule 20 (conjunto -> ConjuntoConTipo .)
    STRINGPALABRA   reduce using rule 20 (conjunto -> ConjuntoConTipo .)
    FUN             reduce using rule 20 (conjunto -> ConjuntoConTipo .)
    IF              reduce using rule 20 (conjunto -> ConjuntoConTipo .)
    WHEN            reduce using rule 20 (conjunto -> ConjuntoConTipo .)
    FOR             reduce using rule 20 (conjunto -> ConjuntoConTipo .)
    $end            reduce using rule 20 (conjunto -> ConjuntoConTipo .)
    RLLAVE          reduce using rule 20 (conjunto -> ConjuntoConTipo .)


state 21

    (21) conjunto -> ConjuntoSinTipo .

    VARIABLE        reduce using rule 21 (conjunto -> ConjuntoSinTipo .)
    PRINT           reduce using rule 21 (conjunto -> ConjuntoSinTipo .)
    PRINTLN         reduce using rule 21 (conjunto -> ConjuntoSinTipo .)
    RETURN          reduce using rule 21 (conjunto -> ConjuntoSinTipo .)
    VAR             reduce using rule 21 (conjunto -> ConjuntoSinTipo .)
    VAL             reduce using rule 21 (conjunto -> ConjuntoSinTipo .)
    STRINGPALABRA   reduce using rule 21 (conjunto -> ConjuntoSinTipo .)
    FUN             reduce using rule 21 (conjunto -> ConjuntoSinTipo .)
    IF              reduce using rule 21 (conjunto -> ConjuntoSinTipo .)
    WHEN            reduce using rule 21 (conjunto -> ConjuntoSinTipo .)
    FOR             reduce using rule 21 (conjunto -> ConjuntoSinTipo .)
    $end            reduce using rule 21 (conjunto -> ConjuntoSinTipo .)
    RLLAVE          reduce using rule 21 (conjunto -> ConjuntoSinTipo .)


state 22

    (34) pair -> valovar . VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN
    (109) readline -> valovar . VARIABLE IGUAL READLINE
    (26) ListaConTipo -> valovar . VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN
    (27) ListaConTipo -> valovar . VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN
    (28) ListaConTipo -> valovar . VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN
    (29) ListaSinTipo -> valovar . VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN
    (22) variableConTipo -> valovar . VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA
    (23) variableConTipo -> valovar . VARIABLE DOSPUNTOS INT IGUAL NUMBER
    (24) variableConTipo -> valovar . VARIABLE DOSPUNTOS BOOLEAN IGUAL
    (25) variableSinTipo -> valovar . VARIABLE IGUAL datosprimitivos
    (30) ConjuntoConTipo -> valovar . VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN
    (31) ConjuntoConTipo -> valovar . VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN
    (32) ConjuntoConTipo -> valovar . VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN
    (33) ConjuntoSinTipo -> valovar . VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN

    VARIABLE        shift and go to state 56


state 23

    (108) readline -> VARIABLE . IGUAL READLINE
    (112) contador -> VARIABLE . PLUS PLUS
    (95) size -> VARIABLE . PUNTO SIZE
    (101) rindex -> VARIABLE . PUNTO RINDEX LPAREN repeCualquier RPAREN
    (97) contains -> VARIABLE . PUNTO CONTAINS LPAREN datosprimitivos RPAREN

    IGUAL           shift and go to state 57
    PLUS            shift and go to state 58
    PUNTO           shift and go to state 59


state 24

    (66) control -> if .

    VARIABLE        reduce using rule 66 (control -> if .)
    PRINT           reduce using rule 66 (control -> if .)
    PRINTLN         reduce using rule 66 (control -> if .)
    RETURN          reduce using rule 66 (control -> if .)
    VAR             reduce using rule 66 (control -> if .)
    VAL             reduce using rule 66 (control -> if .)
    STRINGPALABRA   reduce using rule 66 (control -> if .)
    FUN             reduce using rule 66 (control -> if .)
    IF              reduce using rule 66 (control -> if .)
    WHEN            reduce using rule 66 (control -> if .)
    FOR             reduce using rule 66 (control -> if .)
    $end            reduce using rule 66 (control -> if .)
    RLLAVE          reduce using rule 66 (control -> if .)


state 25

    (67) control -> when .

    VARIABLE        reduce using rule 67 (control -> when .)
    PRINT           reduce using rule 67 (control -> when .)
    PRINTLN         reduce using rule 67 (control -> when .)
    RETURN          reduce using rule 67 (control -> when .)
    VAR             reduce using rule 67 (control -> when .)
    VAL             reduce using rule 67 (control -> when .)
    STRINGPALABRA   reduce using rule 67 (control -> when .)
    FUN             reduce using rule 67 (control -> when .)
    IF              reduce using rule 67 (control -> when .)
    WHEN            reduce using rule 67 (control -> when .)
    FOR             reduce using rule 67 (control -> when .)
    $end            reduce using rule 67 (control -> when .)
    RLLAVE          reduce using rule 67 (control -> when .)


state 26

    (68) control -> for .

    VARIABLE        reduce using rule 68 (control -> for .)
    PRINT           reduce using rule 68 (control -> for .)
    PRINTLN         reduce using rule 68 (control -> for .)
    RETURN          reduce using rule 68 (control -> for .)
    VAR             reduce using rule 68 (control -> for .)
    VAL             reduce using rule 68 (control -> for .)
    STRINGPALABRA   reduce using rule 68 (control -> for .)
    FUN             reduce using rule 68 (control -> for .)
    IF              reduce using rule 68 (control -> for .)
    WHEN            reduce using rule 68 (control -> for .)
    FOR             reduce using rule 68 (control -> for .)
    $end            reduce using rule 68 (control -> for .)
    RLLAVE          reduce using rule 68 (control -> for .)


state 27

    (91) adicionales -> size .

    VARIABLE        reduce using rule 91 (adicionales -> size .)
    PRINT           reduce using rule 91 (adicionales -> size .)
    PRINTLN         reduce using rule 91 (adicionales -> size .)
    RETURN          reduce using rule 91 (adicionales -> size .)
    VAR             reduce using rule 91 (adicionales -> size .)
    VAL             reduce using rule 91 (adicionales -> size .)
    STRINGPALABRA   reduce using rule 91 (adicionales -> size .)
    FUN             reduce using rule 91 (adicionales -> size .)
    IF              reduce using rule 91 (adicionales -> size .)
    WHEN            reduce using rule 91 (adicionales -> size .)
    FOR             reduce using rule 91 (adicionales -> size .)
    $end            reduce using rule 91 (adicionales -> size .)
    RLLAVE          reduce using rule 91 (adicionales -> size .)


state 28

    (92) adicionales -> rindex .

    VARIABLE        reduce using rule 92 (adicionales -> rindex .)
    PRINT           reduce using rule 92 (adicionales -> rindex .)
    PRINTLN         reduce using rule 92 (adicionales -> rindex .)
    RETURN          reduce using rule 92 (adicionales -> rindex .)
    VAR             reduce using rule 92 (adicionales -> rindex .)
    VAL             reduce using rule 92 (adicionales -> rindex .)
    STRINGPALABRA   reduce using rule 92 (adicionales -> rindex .)
    FUN             reduce using rule 92 (adicionales -> rindex .)
    IF              reduce using rule 92 (adicionales -> rindex .)
    WHEN            reduce using rule 92 (adicionales -> rindex .)
    FOR             reduce using rule 92 (adicionales -> rindex .)
    $end            reduce using rule 92 (adicionales -> rindex .)
    RLLAVE          reduce using rule 92 (adicionales -> rindex .)


state 29

    (94) adicionales -> contains .

    VARIABLE        reduce using rule 94 (adicionales -> contains .)
    PRINT           reduce using rule 94 (adicionales -> contains .)
    PRINTLN         reduce using rule 94 (adicionales -> contains .)
    RETURN          reduce using rule 94 (adicionales -> contains .)
    VAR             reduce using rule 94 (adicionales -> contains .)
    VAL             reduce using rule 94 (adicionales -> contains .)
    STRINGPALABRA   reduce using rule 94 (adicionales -> contains .)
    FUN             reduce using rule 94 (adicionales -> contains .)
    IF              reduce using rule 94 (adicionales -> contains .)
    WHEN            reduce using rule 94 (adicionales -> contains .)
    FOR             reduce using rule 94 (adicionales -> contains .)
    $end            reduce using rule 94 (adicionales -> contains .)
    RLLAVE          reduce using rule 94 (adicionales -> contains .)


state 30

    (83) funcion -> funConSalidaArg .

    VARIABLE        reduce using rule 83 (funcion -> funConSalidaArg .)
    PRINT           reduce using rule 83 (funcion -> funConSalidaArg .)
    PRINTLN         reduce using rule 83 (funcion -> funConSalidaArg .)
    RETURN          reduce using rule 83 (funcion -> funConSalidaArg .)
    VAR             reduce using rule 83 (funcion -> funConSalidaArg .)
    VAL             reduce using rule 83 (funcion -> funConSalidaArg .)
    STRINGPALABRA   reduce using rule 83 (funcion -> funConSalidaArg .)
    FUN             reduce using rule 83 (funcion -> funConSalidaArg .)
    IF              reduce using rule 83 (funcion -> funConSalidaArg .)
    WHEN            reduce using rule 83 (funcion -> funConSalidaArg .)
    FOR             reduce using rule 83 (funcion -> funConSalidaArg .)
    $end            reduce using rule 83 (funcion -> funConSalidaArg .)
    RLLAVE          reduce using rule 83 (funcion -> funConSalidaArg .)


state 31

    (84) funcion -> funConSalida .

    VARIABLE        reduce using rule 84 (funcion -> funConSalida .)
    PRINT           reduce using rule 84 (funcion -> funConSalida .)
    PRINTLN         reduce using rule 84 (funcion -> funConSalida .)
    RETURN          reduce using rule 84 (funcion -> funConSalida .)
    VAR             reduce using rule 84 (funcion -> funConSalida .)
    VAL             reduce using rule 84 (funcion -> funConSalida .)
    STRINGPALABRA   reduce using rule 84 (funcion -> funConSalida .)
    FUN             reduce using rule 84 (funcion -> funConSalida .)
    IF              reduce using rule 84 (funcion -> funConSalida .)
    WHEN            reduce using rule 84 (funcion -> funConSalida .)
    FOR             reduce using rule 84 (funcion -> funConSalida .)
    $end            reduce using rule 84 (funcion -> funConSalida .)
    RLLAVE          reduce using rule 84 (funcion -> funConSalida .)


state 32

    (85) funcion -> funSinSalidaArg .

    VARIABLE        reduce using rule 85 (funcion -> funSinSalidaArg .)
    PRINT           reduce using rule 85 (funcion -> funSinSalidaArg .)
    PRINTLN         reduce using rule 85 (funcion -> funSinSalidaArg .)
    RETURN          reduce using rule 85 (funcion -> funSinSalidaArg .)
    VAR             reduce using rule 85 (funcion -> funSinSalidaArg .)
    VAL             reduce using rule 85 (funcion -> funSinSalidaArg .)
    STRINGPALABRA   reduce using rule 85 (funcion -> funSinSalidaArg .)
    FUN             reduce using rule 85 (funcion -> funSinSalidaArg .)
    IF              reduce using rule 85 (funcion -> funSinSalidaArg .)
    WHEN            reduce using rule 85 (funcion -> funSinSalidaArg .)
    FOR             reduce using rule 85 (funcion -> funSinSalidaArg .)
    $end            reduce using rule 85 (funcion -> funSinSalidaArg .)
    RLLAVE          reduce using rule 85 (funcion -> funSinSalidaArg .)


state 33

    (86) funcion -> funSinSalida .

    VARIABLE        reduce using rule 86 (funcion -> funSinSalida .)
    PRINT           reduce using rule 86 (funcion -> funSinSalida .)
    PRINTLN         reduce using rule 86 (funcion -> funSinSalida .)
    RETURN          reduce using rule 86 (funcion -> funSinSalida .)
    VAR             reduce using rule 86 (funcion -> funSinSalida .)
    VAL             reduce using rule 86 (funcion -> funSinSalida .)
    STRINGPALABRA   reduce using rule 86 (funcion -> funSinSalida .)
    FUN             reduce using rule 86 (funcion -> funSinSalida .)
    IF              reduce using rule 86 (funcion -> funSinSalida .)
    WHEN            reduce using rule 86 (funcion -> funSinSalida .)
    FOR             reduce using rule 86 (funcion -> funSinSalida .)
    $end            reduce using rule 86 (funcion -> funSinSalida .)
    RLLAVE          reduce using rule 86 (funcion -> funSinSalida .)


state 34

    (102) sublist -> sublistIndex .

    VARIABLE        reduce using rule 102 (sublist -> sublistIndex .)
    PRINT           reduce using rule 102 (sublist -> sublistIndex .)
    PRINTLN         reduce using rule 102 (sublist -> sublistIndex .)
    RETURN          reduce using rule 102 (sublist -> sublistIndex .)
    VAR             reduce using rule 102 (sublist -> sublistIndex .)
    VAL             reduce using rule 102 (sublist -> sublistIndex .)
    STRINGPALABRA   reduce using rule 102 (sublist -> sublistIndex .)
    FUN             reduce using rule 102 (sublist -> sublistIndex .)
    IF              reduce using rule 102 (sublist -> sublistIndex .)
    WHEN            reduce using rule 102 (sublist -> sublistIndex .)
    FOR             reduce using rule 102 (sublist -> sublistIndex .)
    $end            reduce using rule 102 (sublist -> sublistIndex .)
    RLLAVE          reduce using rule 102 (sublist -> sublistIndex .)


state 35

    (103) sublist -> sublistInicio .

    VARIABLE        reduce using rule 103 (sublist -> sublistInicio .)
    PRINT           reduce using rule 103 (sublist -> sublistInicio .)
    PRINTLN         reduce using rule 103 (sublist -> sublistInicio .)
    RETURN          reduce using rule 103 (sublist -> sublistInicio .)
    VAR             reduce using rule 103 (sublist -> sublistInicio .)
    VAL             reduce using rule 103 (sublist -> sublistInicio .)
    STRINGPALABRA   reduce using rule 103 (sublist -> sublistInicio .)
    FUN             reduce using rule 103 (sublist -> sublistInicio .)
    IF              reduce using rule 103 (sublist -> sublistInicio .)
    WHEN            reduce using rule 103 (sublist -> sublistInicio .)
    FOR             reduce using rule 103 (sublist -> sublistInicio .)
    $end            reduce using rule 103 (sublist -> sublistInicio .)
    RLLAVE          reduce using rule 103 (sublist -> sublistInicio .)


state 36

    (104) sublist -> sublistFinal .

    VARIABLE        reduce using rule 104 (sublist -> sublistFinal .)
    PRINT           reduce using rule 104 (sublist -> sublistFinal .)
    PRINTLN         reduce using rule 104 (sublist -> sublistFinal .)
    RETURN          reduce using rule 104 (sublist -> sublistFinal .)
    VAR             reduce using rule 104 (sublist -> sublistFinal .)
    VAL             reduce using rule 104 (sublist -> sublistFinal .)
    STRINGPALABRA   reduce using rule 104 (sublist -> sublistFinal .)
    FUN             reduce using rule 104 (sublist -> sublistFinal .)
    IF              reduce using rule 104 (sublist -> sublistFinal .)
    WHEN            reduce using rule 104 (sublist -> sublistFinal .)
    FOR             reduce using rule 104 (sublist -> sublistFinal .)
    $end            reduce using rule 104 (sublist -> sublistFinal .)
    RLLAVE          reduce using rule 104 (sublist -> sublistFinal .)


state 37

    (110) prin -> PRINT . LPAREN datosprimitivos RPAREN

    LPAREN          shift and go to state 60


state 38

    (111) prin -> PRINTLN . LPAREN datosprimitivos RPAREN

    LPAREN          shift and go to state 61


state 39

    (113) retor -> RETURN . VARIABLE

    VARIABLE        shift and go to state 62


state 40

    (100) rindex -> STRINGPALABRA . PUNTO RINDEX LPAREN repeCualquier RPAREN
    (98) contains -> STRINGPALABRA . PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN
    (99) contains -> STRINGPALABRA . PUNTO CONTAINS LPAREN VARIABLE RPAREN

    PUNTO           shift and go to state 63


state 41

    (39) valovar -> VAR .

    VARIABLE        reduce using rule 39 (valovar -> VAR .)


state 42

    (40) valovar -> VAL .

    VARIABLE        reduce using rule 40 (valovar -> VAL .)


state 43

    (69) if -> ifBoolean .

    VARIABLE        reduce using rule 69 (if -> ifBoolean .)
    PRINT           reduce using rule 69 (if -> ifBoolean .)
    PRINTLN         reduce using rule 69 (if -> ifBoolean .)
    RETURN          reduce using rule 69 (if -> ifBoolean .)
    VAR             reduce using rule 69 (if -> ifBoolean .)
    VAL             reduce using rule 69 (if -> ifBoolean .)
    STRINGPALABRA   reduce using rule 69 (if -> ifBoolean .)
    FUN             reduce using rule 69 (if -> ifBoolean .)
    IF              reduce using rule 69 (if -> ifBoolean .)
    WHEN            reduce using rule 69 (if -> ifBoolean .)
    FOR             reduce using rule 69 (if -> ifBoolean .)
    $end            reduce using rule 69 (if -> ifBoolean .)
    RLLAVE          reduce using rule 69 (if -> ifBoolean .)


state 44

    (70) if -> ifComparacion .

    VARIABLE        reduce using rule 70 (if -> ifComparacion .)
    PRINT           reduce using rule 70 (if -> ifComparacion .)
    PRINTLN         reduce using rule 70 (if -> ifComparacion .)
    RETURN          reduce using rule 70 (if -> ifComparacion .)
    VAR             reduce using rule 70 (if -> ifComparacion .)
    VAL             reduce using rule 70 (if -> ifComparacion .)
    STRINGPALABRA   reduce using rule 70 (if -> ifComparacion .)
    FUN             reduce using rule 70 (if -> ifComparacion .)
    IF              reduce using rule 70 (if -> ifComparacion .)
    WHEN            reduce using rule 70 (if -> ifComparacion .)
    FOR             reduce using rule 70 (if -> ifComparacion .)
    $end            reduce using rule 70 (if -> ifComparacion .)
    RLLAVE          reduce using rule 70 (if -> ifComparacion .)


state 45

    (71) if -> ifVariable .

    VARIABLE        reduce using rule 71 (if -> ifVariable .)
    PRINT           reduce using rule 71 (if -> ifVariable .)
    PRINTLN         reduce using rule 71 (if -> ifVariable .)
    RETURN          reduce using rule 71 (if -> ifVariable .)
    VAR             reduce using rule 71 (if -> ifVariable .)
    VAL             reduce using rule 71 (if -> ifVariable .)
    STRINGPALABRA   reduce using rule 71 (if -> ifVariable .)
    FUN             reduce using rule 71 (if -> ifVariable .)
    IF              reduce using rule 71 (if -> ifVariable .)
    WHEN            reduce using rule 71 (if -> ifVariable .)
    FOR             reduce using rule 71 (if -> ifVariable .)
    $end            reduce using rule 71 (if -> ifVariable .)
    RLLAVE          reduce using rule 71 (if -> ifVariable .)


state 46

    (72) when -> whenVacio .

    VARIABLE        reduce using rule 72 (when -> whenVacio .)
    PRINT           reduce using rule 72 (when -> whenVacio .)
    PRINTLN         reduce using rule 72 (when -> whenVacio .)
    RETURN          reduce using rule 72 (when -> whenVacio .)
    VAR             reduce using rule 72 (when -> whenVacio .)
    VAL             reduce using rule 72 (when -> whenVacio .)
    STRINGPALABRA   reduce using rule 72 (when -> whenVacio .)
    FUN             reduce using rule 72 (when -> whenVacio .)
    IF              reduce using rule 72 (when -> whenVacio .)
    WHEN            reduce using rule 72 (when -> whenVacio .)
    FOR             reduce using rule 72 (when -> whenVacio .)
    $end            reduce using rule 72 (when -> whenVacio .)
    RLLAVE          reduce using rule 72 (when -> whenVacio .)


state 47

    (73) when -> whenVariable .

    VARIABLE        reduce using rule 73 (when -> whenVariable .)
    PRINT           reduce using rule 73 (when -> whenVariable .)
    PRINTLN         reduce using rule 73 (when -> whenVariable .)
    RETURN          reduce using rule 73 (when -> whenVariable .)
    VAR             reduce using rule 73 (when -> whenVariable .)
    VAL             reduce using rule 73 (when -> whenVariable .)
    STRINGPALABRA   reduce using rule 73 (when -> whenVariable .)
    FUN             reduce using rule 73 (when -> whenVariable .)
    IF              reduce using rule 73 (when -> whenVariable .)
    WHEN            reduce using rule 73 (when -> whenVariable .)
    FOR             reduce using rule 73 (when -> whenVariable .)
    $end            reduce using rule 73 (when -> whenVariable .)
    RLLAVE          reduce using rule 73 (when -> whenVariable .)


state 48

    (74) for -> forRango .

    VARIABLE        reduce using rule 74 (for -> forRango .)
    PRINT           reduce using rule 74 (for -> forRango .)
    PRINTLN         reduce using rule 74 (for -> forRango .)
    RETURN          reduce using rule 74 (for -> forRango .)
    VAR             reduce using rule 74 (for -> forRango .)
    VAL             reduce using rule 74 (for -> forRango .)
    STRINGPALABRA   reduce using rule 74 (for -> forRango .)
    FUN             reduce using rule 74 (for -> forRango .)
    IF              reduce using rule 74 (for -> forRango .)
    WHEN            reduce using rule 74 (for -> forRango .)
    FOR             reduce using rule 74 (for -> forRango .)
    $end            reduce using rule 74 (for -> forRango .)
    RLLAVE          reduce using rule 74 (for -> forRango .)


state 49

    (75) for -> forVariable .

    VARIABLE        reduce using rule 75 (for -> forVariable .)
    PRINT           reduce using rule 75 (for -> forVariable .)
    PRINTLN         reduce using rule 75 (for -> forVariable .)
    RETURN          reduce using rule 75 (for -> forVariable .)
    VAR             reduce using rule 75 (for -> forVariable .)
    VAL             reduce using rule 75 (for -> forVariable .)
    STRINGPALABRA   reduce using rule 75 (for -> forVariable .)
    FUN             reduce using rule 75 (for -> forVariable .)
    IF              reduce using rule 75 (for -> forVariable .)
    WHEN            reduce using rule 75 (for -> forVariable .)
    FOR             reduce using rule 75 (for -> forVariable .)
    $end            reduce using rule 75 (for -> forVariable .)
    RLLAVE          reduce using rule 75 (for -> forVariable .)


state 50

    (89) funConSalidaArg -> FUN . VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (87) funConSalida -> FUN . VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (90) funSinSalidaArg -> FUN . VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE
    (88) funSinSalida -> FUN . VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE

    VARIABLE        shift and go to state 64


state 51

    (76) ifBoolean -> IF . LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE
    (77) ifComparacion -> IF . LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE
    (78) ifVariable -> IF . LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE

    LPAREN          shift and go to state 65


state 52

    (80) whenVacio -> WHEN . LLLAVE repetodo RLLAVE
    (79) whenVariable -> WHEN . LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE

    LLLAVE          shift and go to state 66
    LPAREN          shift and go to state 67


state 53

    (82) forRango -> FOR . LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE
    (81) forVariable -> FOR . LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE

    LPAREN          shift and go to state 68


state 54

    (15) repetodo -> todo repetodo .

    $end            reduce using rule 15 (repetodo -> todo repetodo .)
    RLLAVE          reduce using rule 15 (repetodo -> todo repetodo .)


state 55

    (105) sublistIndex -> lista LCLASP . INT DOSPUNTOS INT RCLASP
    (106) sublistInicio -> lista LCLASP . DOSPUNTOS INT RCLASP
    (107) sublistFinal -> lista LCLASP . INT DOSPUNTOS RCLASP

    INT             shift and go to state 69
    DOSPUNTOS       shift and go to state 70


state 56

    (34) pair -> valovar VARIABLE . IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN
    (109) readline -> valovar VARIABLE . IGUAL READLINE
    (26) ListaConTipo -> valovar VARIABLE . DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN
    (27) ListaConTipo -> valovar VARIABLE . DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN
    (28) ListaConTipo -> valovar VARIABLE . DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN
    (29) ListaSinTipo -> valovar VARIABLE . IGUAL LISTOF LPAREN repeCualquier RPAREN
    (22) variableConTipo -> valovar VARIABLE . DOSPUNTOS STRING IGUAL STRINGPALABRA
    (23) variableConTipo -> valovar VARIABLE . DOSPUNTOS INT IGUAL NUMBER
    (24) variableConTipo -> valovar VARIABLE . DOSPUNTOS BOOLEAN IGUAL
    (25) variableSinTipo -> valovar VARIABLE . IGUAL datosprimitivos
    (30) ConjuntoConTipo -> valovar VARIABLE . DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN
    (31) ConjuntoConTipo -> valovar VARIABLE . DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN
    (32) ConjuntoConTipo -> valovar VARIABLE . DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN
    (33) ConjuntoSinTipo -> valovar VARIABLE . IGUAL SETOF LPAREN repeCualquier RPAREN

    IGUAL           shift and go to state 71
    DOSPUNTOS       shift and go to state 72


state 57

    (108) readline -> VARIABLE IGUAL . READLINE

    READLINE        shift and go to state 73


state 58

    (112) contador -> VARIABLE PLUS . PLUS

    PLUS            shift and go to state 74


state 59

    (95) size -> VARIABLE PUNTO . SIZE
    (101) rindex -> VARIABLE PUNTO . RINDEX LPAREN repeCualquier RPAREN
    (97) contains -> VARIABLE PUNTO . CONTAINS LPAREN datosprimitivos RPAREN

    SIZE            shift and go to state 75
    RINDEX          shift and go to state 76
    CONTAINS        shift and go to state 77


state 60

    (110) prin -> PRINT LPAREN . datosprimitivos RPAREN
    (35) datosprimitivos -> . NUMBER
    (36) datosprimitivos -> . STRINGPALABRA
    (37) datosprimitivos -> . BOOLEANPALABRA
    (38) datosprimitivos -> . VARIABLE

    NUMBER          shift and go to state 79
    STRINGPALABRA   shift and go to state 80
    BOOLEANPALABRA  shift and go to state 81
    VARIABLE        shift and go to state 82

    datosprimitivos                shift and go to state 78

state 61

    (111) prin -> PRINTLN LPAREN . datosprimitivos RPAREN
    (35) datosprimitivos -> . NUMBER
    (36) datosprimitivos -> . STRINGPALABRA
    (37) datosprimitivos -> . BOOLEANPALABRA
    (38) datosprimitivos -> . VARIABLE

    NUMBER          shift and go to state 79
    STRINGPALABRA   shift and go to state 80
    BOOLEANPALABRA  shift and go to state 81
    VARIABLE        shift and go to state 82

    datosprimitivos                shift and go to state 83

state 62

    (113) retor -> RETURN VARIABLE .

    VARIABLE        reduce using rule 113 (retor -> RETURN VARIABLE .)
    PRINT           reduce using rule 113 (retor -> RETURN VARIABLE .)
    PRINTLN         reduce using rule 113 (retor -> RETURN VARIABLE .)
    RETURN          reduce using rule 113 (retor -> RETURN VARIABLE .)
    VAR             reduce using rule 113 (retor -> RETURN VARIABLE .)
    VAL             reduce using rule 113 (retor -> RETURN VARIABLE .)
    STRINGPALABRA   reduce using rule 113 (retor -> RETURN VARIABLE .)
    FUN             reduce using rule 113 (retor -> RETURN VARIABLE .)
    IF              reduce using rule 113 (retor -> RETURN VARIABLE .)
    WHEN            reduce using rule 113 (retor -> RETURN VARIABLE .)
    FOR             reduce using rule 113 (retor -> RETURN VARIABLE .)
    $end            reduce using rule 113 (retor -> RETURN VARIABLE .)
    RLLAVE          reduce using rule 113 (retor -> RETURN VARIABLE .)


state 63

    (100) rindex -> STRINGPALABRA PUNTO . RINDEX LPAREN repeCualquier RPAREN
    (98) contains -> STRINGPALABRA PUNTO . CONTAINS LPAREN STRINGPALABRA RPAREN
    (99) contains -> STRINGPALABRA PUNTO . CONTAINS LPAREN VARIABLE RPAREN

    RINDEX          shift and go to state 84
    CONTAINS        shift and go to state 85


state 64

    (89) funConSalidaArg -> FUN VARIABLE . LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (87) funConSalida -> FUN VARIABLE . LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (90) funSinSalidaArg -> FUN VARIABLE . LPAREN RPAREN LLLAVE repetodo RLLAVE
    (88) funSinSalida -> FUN VARIABLE . LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE

    LPAREN          shift and go to state 86


state 65

    (76) ifBoolean -> IF LPAREN . BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE
    (77) ifComparacion -> IF LPAREN . comparacion RPAREN LLLAVE repetodo RLLAVE
    (78) ifVariable -> IF LPAREN . VARIABLE RPAREN LLLAVE repetodo RLLAVE
    (55) comparacion -> . valor operadoresComp valor
    (43) valor -> . NUMBER
    (44) valor -> . VARIABLE

    BOOLEANPALABRA  shift and go to state 87
    VARIABLE        shift and go to state 89
    NUMBER          shift and go to state 91

    comparacion                    shift and go to state 88
    valor                          shift and go to state 90

state 66

    (80) whenVacio -> WHEN LLLAVE . repetodo RLLAVE
    (14) repetodo -> . todo
    (15) repetodo -> . todo repetodo
    (2) todo -> . lista
    (3) todo -> . variable
    (4) todo -> . conjunto
    (5) todo -> . pair
    (6) todo -> . control
    (7) todo -> . adicionales
    (8) todo -> . funcion
    (9) todo -> . sublist
    (10) todo -> . readline
    (11) todo -> . prin
    (12) todo -> . contador
    (13) todo -> . retor
    (16) lista -> . ListaConTipo
    (17) lista -> . ListaSinTipo
    (18) variable -> . variableConTipo
    (19) variable -> . variableSinTipo
    (20) conjunto -> . ConjuntoConTipo
    (21) conjunto -> . ConjuntoSinTipo
    (34) pair -> . valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN
    (66) control -> . if
    (67) control -> . when
    (68) control -> . for
    (91) adicionales -> . size
    (92) adicionales -> . rindex
    (93) adicionales -> . sublist
    (94) adicionales -> . contains
    (83) funcion -> . funConSalidaArg
    (84) funcion -> . funConSalida
    (85) funcion -> . funSinSalidaArg
    (86) funcion -> . funSinSalida
    (102) sublist -> . sublistIndex
    (103) sublist -> . sublistInicio
    (104) sublist -> . sublistFinal
    (108) readline -> . VARIABLE IGUAL READLINE
    (109) readline -> . valovar VARIABLE IGUAL READLINE
    (110) prin -> . PRINT LPAREN datosprimitivos RPAREN
    (111) prin -> . PRINTLN LPAREN datosprimitivos RPAREN
    (112) contador -> . VARIABLE PLUS PLUS
    (113) retor -> . RETURN VARIABLE
    (26) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN
    (27) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN
    (28) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN
    (29) ListaSinTipo -> . valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN
    (22) variableConTipo -> . valovar VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA
    (23) variableConTipo -> . valovar VARIABLE DOSPUNTOS INT IGUAL NUMBER
    (24) variableConTipo -> . valovar VARIABLE DOSPUNTOS BOOLEAN IGUAL
    (25) variableSinTipo -> . valovar VARIABLE IGUAL datosprimitivos
    (30) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN
    (31) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN
    (32) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN
    (33) ConjuntoSinTipo -> . valovar VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN
    (39) valovar -> . VAR
    (40) valovar -> . VAL
    (69) if -> . ifBoolean
    (70) if -> . ifComparacion
    (71) if -> . ifVariable
    (72) when -> . whenVacio
    (73) when -> . whenVariable
    (74) for -> . forRango
    (75) for -> . forVariable
    (95) size -> . VARIABLE PUNTO SIZE
    (100) rindex -> . STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier RPAREN
    (101) rindex -> . VARIABLE PUNTO RINDEX LPAREN repeCualquier RPAREN
    (96) contains -> .
    (97) contains -> . VARIABLE PUNTO CONTAINS LPAREN datosprimitivos RPAREN
    (98) contains -> . STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN
    (99) contains -> . STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE RPAREN
    (89) funConSalidaArg -> . FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (87) funConSalida -> . FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (90) funSinSalidaArg -> . FUN VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE
    (88) funSinSalida -> . FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE
    (105) sublistIndex -> . lista LCLASP INT DOSPUNTOS INT RCLASP
    (106) sublistInicio -> . lista LCLASP DOSPUNTOS INT RCLASP
    (107) sublistFinal -> . lista LCLASP INT DOSPUNTOS RCLASP
    (76) ifBoolean -> . IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE
    (77) ifComparacion -> . IF LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE
    (78) ifVariable -> . IF LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE
    (80) whenVacio -> . WHEN LLLAVE repetodo RLLAVE
    (79) whenVariable -> . WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE
    (82) forRango -> . FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE
    (81) forVariable -> . FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for STRINGPALABRA resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHEN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    VARIABLE        shift and go to state 23
    PRINT           shift and go to state 37
    PRINTLN         shift and go to state 38
    RETURN          shift and go to state 39
    VAR             shift and go to state 41
    VAL             shift and go to state 42
    STRINGPALABRA   shift and go to state 40
    RLLAVE          reduce using rule 96 (contains -> .)
    FUN             shift and go to state 50
    IF              shift and go to state 51
    WHEN            shift and go to state 52
    FOR             shift and go to state 53

  ! VARIABLE        [ reduce using rule 96 (contains -> .) ]
  ! PRINT           [ reduce using rule 96 (contains -> .) ]
  ! PRINTLN         [ reduce using rule 96 (contains -> .) ]
  ! RETURN          [ reduce using rule 96 (contains -> .) ]
  ! VAR             [ reduce using rule 96 (contains -> .) ]
  ! VAL             [ reduce using rule 96 (contains -> .) ]
  ! STRINGPALABRA   [ reduce using rule 96 (contains -> .) ]
  ! FUN             [ reduce using rule 96 (contains -> .) ]
  ! IF              [ reduce using rule 96 (contains -> .) ]
  ! WHEN            [ reduce using rule 96 (contains -> .) ]
  ! FOR             [ reduce using rule 96 (contains -> .) ]

    repetodo                       shift and go to state 92
    todo                           shift and go to state 3
    lista                          shift and go to state 4
    variable                       shift and go to state 5
    conjunto                       shift and go to state 6
    pair                           shift and go to state 7
    control                        shift and go to state 8
    adicionales                    shift and go to state 9
    funcion                        shift and go to state 10
    sublist                        shift and go to state 11
    readline                       shift and go to state 12
    prin                           shift and go to state 13
    contador                       shift and go to state 14
    retor                          shift and go to state 15
    ListaConTipo                   shift and go to state 16
    ListaSinTipo                   shift and go to state 17
    variableConTipo                shift and go to state 18
    variableSinTipo                shift and go to state 19
    ConjuntoConTipo                shift and go to state 20
    ConjuntoSinTipo                shift and go to state 21
    valovar                        shift and go to state 22
    if                             shift and go to state 24
    when                           shift and go to state 25
    for                            shift and go to state 26
    size                           shift and go to state 27
    rindex                         shift and go to state 28
    contains                       shift and go to state 29
    funConSalidaArg                shift and go to state 30
    funConSalida                   shift and go to state 31
    funSinSalidaArg                shift and go to state 32
    funSinSalida                   shift and go to state 33
    sublistIndex                   shift and go to state 34
    sublistInicio                  shift and go to state 35
    sublistFinal                   shift and go to state 36
    ifBoolean                      shift and go to state 43
    ifComparacion                  shift and go to state 44
    ifVariable                     shift and go to state 45
    whenVacio                      shift and go to state 46
    whenVariable                   shift and go to state 47
    forRango                       shift and go to state 48
    forVariable                    shift and go to state 49

state 67

    (79) whenVariable -> WHEN LPAREN . VARIABLE RPAREN LLLAVE repetodo RLLAVE

    VARIABLE        shift and go to state 93


state 68

    (82) forRango -> FOR LPAREN . VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE
    (81) forVariable -> FOR LPAREN . VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE

    VARIABLE        shift and go to state 94


state 69

    (105) sublistIndex -> lista LCLASP INT . DOSPUNTOS INT RCLASP
    (107) sublistFinal -> lista LCLASP INT . DOSPUNTOS RCLASP

    DOSPUNTOS       shift and go to state 95


state 70

    (106) sublistInicio -> lista LCLASP DOSPUNTOS . INT RCLASP

    INT             shift and go to state 96


state 71

    (34) pair -> valovar VARIABLE IGUAL . PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN
    (109) readline -> valovar VARIABLE IGUAL . READLINE
    (29) ListaSinTipo -> valovar VARIABLE IGUAL . LISTOF LPAREN repeCualquier RPAREN
    (25) variableSinTipo -> valovar VARIABLE IGUAL . datosprimitivos
    (33) ConjuntoSinTipo -> valovar VARIABLE IGUAL . SETOF LPAREN repeCualquier RPAREN
    (35) datosprimitivos -> . NUMBER
    (36) datosprimitivos -> . STRINGPALABRA
    (37) datosprimitivos -> . BOOLEANPALABRA
    (38) datosprimitivos -> . VARIABLE

    PAIR            shift and go to state 97
    READLINE        shift and go to state 99
    LISTOF          shift and go to state 100
    SETOF           shift and go to state 101
    NUMBER          shift and go to state 79
    STRINGPALABRA   shift and go to state 80
    BOOLEANPALABRA  shift and go to state 81
    VARIABLE        shift and go to state 82

    datosprimitivos                shift and go to state 98

state 72

    (26) ListaConTipo -> valovar VARIABLE DOSPUNTOS . LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN
    (27) ListaConTipo -> valovar VARIABLE DOSPUNTOS . LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN
    (28) ListaConTipo -> valovar VARIABLE DOSPUNTOS . LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN
    (22) variableConTipo -> valovar VARIABLE DOSPUNTOS . STRING IGUAL STRINGPALABRA
    (23) variableConTipo -> valovar VARIABLE DOSPUNTOS . INT IGUAL NUMBER
    (24) variableConTipo -> valovar VARIABLE DOSPUNTOS . BOOLEAN IGUAL
    (30) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS . SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN
    (31) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS . SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN
    (32) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS . SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN

    LIST            shift and go to state 102
    STRING          shift and go to state 104
    INT             shift and go to state 103
    BOOLEAN         shift and go to state 105
    SET             shift and go to state 106


state 73

    (108) readline -> VARIABLE IGUAL READLINE .

    VARIABLE        reduce using rule 108 (readline -> VARIABLE IGUAL READLINE .)
    PRINT           reduce using rule 108 (readline -> VARIABLE IGUAL READLINE .)
    PRINTLN         reduce using rule 108 (readline -> VARIABLE IGUAL READLINE .)
    RETURN          reduce using rule 108 (readline -> VARIABLE IGUAL READLINE .)
    VAR             reduce using rule 108 (readline -> VARIABLE IGUAL READLINE .)
    VAL             reduce using rule 108 (readline -> VARIABLE IGUAL READLINE .)
    STRINGPALABRA   reduce using rule 108 (readline -> VARIABLE IGUAL READLINE .)
    FUN             reduce using rule 108 (readline -> VARIABLE IGUAL READLINE .)
    IF              reduce using rule 108 (readline -> VARIABLE IGUAL READLINE .)
    WHEN            reduce using rule 108 (readline -> VARIABLE IGUAL READLINE .)
    FOR             reduce using rule 108 (readline -> VARIABLE IGUAL READLINE .)
    $end            reduce using rule 108 (readline -> VARIABLE IGUAL READLINE .)
    RLLAVE          reduce using rule 108 (readline -> VARIABLE IGUAL READLINE .)


state 74

    (112) contador -> VARIABLE PLUS PLUS .

    VARIABLE        reduce using rule 112 (contador -> VARIABLE PLUS PLUS .)
    PRINT           reduce using rule 112 (contador -> VARIABLE PLUS PLUS .)
    PRINTLN         reduce using rule 112 (contador -> VARIABLE PLUS PLUS .)
    RETURN          reduce using rule 112 (contador -> VARIABLE PLUS PLUS .)
    VAR             reduce using rule 112 (contador -> VARIABLE PLUS PLUS .)
    VAL             reduce using rule 112 (contador -> VARIABLE PLUS PLUS .)
    STRINGPALABRA   reduce using rule 112 (contador -> VARIABLE PLUS PLUS .)
    FUN             reduce using rule 112 (contador -> VARIABLE PLUS PLUS .)
    IF              reduce using rule 112 (contador -> VARIABLE PLUS PLUS .)
    WHEN            reduce using rule 112 (contador -> VARIABLE PLUS PLUS .)
    FOR             reduce using rule 112 (contador -> VARIABLE PLUS PLUS .)
    $end            reduce using rule 112 (contador -> VARIABLE PLUS PLUS .)
    RLLAVE          reduce using rule 112 (contador -> VARIABLE PLUS PLUS .)


state 75

    (95) size -> VARIABLE PUNTO SIZE .

    VARIABLE        reduce using rule 95 (size -> VARIABLE PUNTO SIZE .)
    PRINT           reduce using rule 95 (size -> VARIABLE PUNTO SIZE .)
    PRINTLN         reduce using rule 95 (size -> VARIABLE PUNTO SIZE .)
    RETURN          reduce using rule 95 (size -> VARIABLE PUNTO SIZE .)
    VAR             reduce using rule 95 (size -> VARIABLE PUNTO SIZE .)
    VAL             reduce using rule 95 (size -> VARIABLE PUNTO SIZE .)
    STRINGPALABRA   reduce using rule 95 (size -> VARIABLE PUNTO SIZE .)
    FUN             reduce using rule 95 (size -> VARIABLE PUNTO SIZE .)
    IF              reduce using rule 95 (size -> VARIABLE PUNTO SIZE .)
    WHEN            reduce using rule 95 (size -> VARIABLE PUNTO SIZE .)
    FOR             reduce using rule 95 (size -> VARIABLE PUNTO SIZE .)
    $end            reduce using rule 95 (size -> VARIABLE PUNTO SIZE .)
    RLLAVE          reduce using rule 95 (size -> VARIABLE PUNTO SIZE .)


state 76

    (101) rindex -> VARIABLE PUNTO RINDEX . LPAREN repeCualquier RPAREN

    LPAREN          shift and go to state 107


state 77

    (97) contains -> VARIABLE PUNTO CONTAINS . LPAREN datosprimitivos RPAREN

    LPAREN          shift and go to state 108


state 78

    (110) prin -> PRINT LPAREN datosprimitivos . RPAREN

    RPAREN          shift and go to state 109


state 79

    (35) datosprimitivos -> NUMBER .

    RPAREN          reduce using rule 35 (datosprimitivos -> NUMBER .)
    VARIABLE        reduce using rule 35 (datosprimitivos -> NUMBER .)
    PRINT           reduce using rule 35 (datosprimitivos -> NUMBER .)
    PRINTLN         reduce using rule 35 (datosprimitivos -> NUMBER .)
    RETURN          reduce using rule 35 (datosprimitivos -> NUMBER .)
    VAR             reduce using rule 35 (datosprimitivos -> NUMBER .)
    VAL             reduce using rule 35 (datosprimitivos -> NUMBER .)
    STRINGPALABRA   reduce using rule 35 (datosprimitivos -> NUMBER .)
    FUN             reduce using rule 35 (datosprimitivos -> NUMBER .)
    IF              reduce using rule 35 (datosprimitivos -> NUMBER .)
    WHEN            reduce using rule 35 (datosprimitivos -> NUMBER .)
    FOR             reduce using rule 35 (datosprimitivos -> NUMBER .)
    $end            reduce using rule 35 (datosprimitivos -> NUMBER .)
    RLLAVE          reduce using rule 35 (datosprimitivos -> NUMBER .)
    COMA            reduce using rule 35 (datosprimitivos -> NUMBER .)


state 80

    (36) datosprimitivos -> STRINGPALABRA .

    RPAREN          reduce using rule 36 (datosprimitivos -> STRINGPALABRA .)
    VARIABLE        reduce using rule 36 (datosprimitivos -> STRINGPALABRA .)
    PRINT           reduce using rule 36 (datosprimitivos -> STRINGPALABRA .)
    PRINTLN         reduce using rule 36 (datosprimitivos -> STRINGPALABRA .)
    RETURN          reduce using rule 36 (datosprimitivos -> STRINGPALABRA .)
    VAR             reduce using rule 36 (datosprimitivos -> STRINGPALABRA .)
    VAL             reduce using rule 36 (datosprimitivos -> STRINGPALABRA .)
    STRINGPALABRA   reduce using rule 36 (datosprimitivos -> STRINGPALABRA .)
    FUN             reduce using rule 36 (datosprimitivos -> STRINGPALABRA .)
    IF              reduce using rule 36 (datosprimitivos -> STRINGPALABRA .)
    WHEN            reduce using rule 36 (datosprimitivos -> STRINGPALABRA .)
    FOR             reduce using rule 36 (datosprimitivos -> STRINGPALABRA .)
    $end            reduce using rule 36 (datosprimitivos -> STRINGPALABRA .)
    RLLAVE          reduce using rule 36 (datosprimitivos -> STRINGPALABRA .)
    COMA            reduce using rule 36 (datosprimitivos -> STRINGPALABRA .)


state 81

    (37) datosprimitivos -> BOOLEANPALABRA .

    RPAREN          reduce using rule 37 (datosprimitivos -> BOOLEANPALABRA .)
    VARIABLE        reduce using rule 37 (datosprimitivos -> BOOLEANPALABRA .)
    PRINT           reduce using rule 37 (datosprimitivos -> BOOLEANPALABRA .)
    PRINTLN         reduce using rule 37 (datosprimitivos -> BOOLEANPALABRA .)
    RETURN          reduce using rule 37 (datosprimitivos -> BOOLEANPALABRA .)
    VAR             reduce using rule 37 (datosprimitivos -> BOOLEANPALABRA .)
    VAL             reduce using rule 37 (datosprimitivos -> BOOLEANPALABRA .)
    STRINGPALABRA   reduce using rule 37 (datosprimitivos -> BOOLEANPALABRA .)
    FUN             reduce using rule 37 (datosprimitivos -> BOOLEANPALABRA .)
    IF              reduce using rule 37 (datosprimitivos -> BOOLEANPALABRA .)
    WHEN            reduce using rule 37 (datosprimitivos -> BOOLEANPALABRA .)
    FOR             reduce using rule 37 (datosprimitivos -> BOOLEANPALABRA .)
    $end            reduce using rule 37 (datosprimitivos -> BOOLEANPALABRA .)
    RLLAVE          reduce using rule 37 (datosprimitivos -> BOOLEANPALABRA .)
    COMA            reduce using rule 37 (datosprimitivos -> BOOLEANPALABRA .)


state 82

    (38) datosprimitivos -> VARIABLE .

    RPAREN          reduce using rule 38 (datosprimitivos -> VARIABLE .)
    VARIABLE        reduce using rule 38 (datosprimitivos -> VARIABLE .)
    PRINT           reduce using rule 38 (datosprimitivos -> VARIABLE .)
    PRINTLN         reduce using rule 38 (datosprimitivos -> VARIABLE .)
    RETURN          reduce using rule 38 (datosprimitivos -> VARIABLE .)
    VAR             reduce using rule 38 (datosprimitivos -> VARIABLE .)
    VAL             reduce using rule 38 (datosprimitivos -> VARIABLE .)
    STRINGPALABRA   reduce using rule 38 (datosprimitivos -> VARIABLE .)
    FUN             reduce using rule 38 (datosprimitivos -> VARIABLE .)
    IF              reduce using rule 38 (datosprimitivos -> VARIABLE .)
    WHEN            reduce using rule 38 (datosprimitivos -> VARIABLE .)
    FOR             reduce using rule 38 (datosprimitivos -> VARIABLE .)
    $end            reduce using rule 38 (datosprimitivos -> VARIABLE .)
    RLLAVE          reduce using rule 38 (datosprimitivos -> VARIABLE .)
    COMA            reduce using rule 38 (datosprimitivos -> VARIABLE .)


state 83

    (111) prin -> PRINTLN LPAREN datosprimitivos . RPAREN

    RPAREN          shift and go to state 110


state 84

    (100) rindex -> STRINGPALABRA PUNTO RINDEX . LPAREN repeCualquier RPAREN

    LPAREN          shift and go to state 111


state 85

    (98) contains -> STRINGPALABRA PUNTO CONTAINS . LPAREN STRINGPALABRA RPAREN
    (99) contains -> STRINGPALABRA PUNTO CONTAINS . LPAREN VARIABLE RPAREN

    LPAREN          shift and go to state 112


state 86

    (89) funConSalidaArg -> FUN VARIABLE LPAREN . RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (87) funConSalida -> FUN VARIABLE LPAREN . repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (90) funSinSalidaArg -> FUN VARIABLE LPAREN . RPAREN LLLAVE repetodo RLLAVE
    (88) funSinSalida -> FUN VARIABLE LPAREN . repeArg RPAREN LLLAVE repetodo RLLAVE
    (64) repeArg -> . argumento
    (65) repeArg -> . argumento COMA repeArg
    (63) argumento -> . tipoDato VARIABLE
    (60) tipoDato -> . INT
    (61) tipoDato -> . STRING
    (62) tipoDato -> . BOOLEAN

    RPAREN          shift and go to state 113
    INT             shift and go to state 117
    STRING          shift and go to state 118
    BOOLEAN         shift and go to state 119

    tipoDato                       shift and go to state 114
    repeArg                        shift and go to state 115
    argumento                      shift and go to state 116

state 87

    (76) ifBoolean -> IF LPAREN BOOLEANPALABRA . RPAREN LLLAVE repetodo RLLAVE

    RPAREN          shift and go to state 120


state 88

    (77) ifComparacion -> IF LPAREN comparacion . RPAREN LLLAVE repetodo RLLAVE

    RPAREN          shift and go to state 121


state 89

    (78) ifVariable -> IF LPAREN VARIABLE . RPAREN LLLAVE repetodo RLLAVE
    (44) valor -> VARIABLE .

    RPAREN          shift and go to state 122
    MAYORQUE        reduce using rule 44 (valor -> VARIABLE .)
    DIFERENTE       reduce using rule 44 (valor -> VARIABLE .)
    MENORQUE        reduce using rule 44 (valor -> VARIABLE .)
    ESIGUAL         reduce using rule 44 (valor -> VARIABLE .)


state 90

    (55) comparacion -> valor . operadoresComp valor
    (56) operadoresComp -> . MAYORQUE
    (57) operadoresComp -> . DIFERENTE
    (58) operadoresComp -> . MENORQUE
    (59) operadoresComp -> . ESIGUAL

    MAYORQUE        shift and go to state 124
    DIFERENTE       shift and go to state 125
    MENORQUE        shift and go to state 126
    ESIGUAL         shift and go to state 127

    operadoresComp                 shift and go to state 123

state 91

    (43) valor -> NUMBER .

    MAYORQUE        reduce using rule 43 (valor -> NUMBER .)
    DIFERENTE       reduce using rule 43 (valor -> NUMBER .)
    MENORQUE        reduce using rule 43 (valor -> NUMBER .)
    ESIGUAL         reduce using rule 43 (valor -> NUMBER .)
    RPAREN          reduce using rule 43 (valor -> NUMBER .)
    COMA            reduce using rule 43 (valor -> NUMBER .)


state 92

    (80) whenVacio -> WHEN LLLAVE repetodo . RLLAVE

    RLLAVE          shift and go to state 128


state 93

    (79) whenVariable -> WHEN LPAREN VARIABLE . RPAREN LLLAVE repetodo RLLAVE

    RPAREN          shift and go to state 129


state 94

    (82) forRango -> FOR LPAREN VARIABLE . IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE
    (81) forVariable -> FOR LPAREN VARIABLE . IN VARIABLE RPAREN LLLAVE repetodo RLLAVE

    IN              shift and go to state 130


state 95

    (105) sublistIndex -> lista LCLASP INT DOSPUNTOS . INT RCLASP
    (107) sublistFinal -> lista LCLASP INT DOSPUNTOS . RCLASP

    INT             shift and go to state 131
    RCLASP          shift and go to state 132


state 96

    (106) sublistInicio -> lista LCLASP DOSPUNTOS INT . RCLASP

    RCLASP          shift and go to state 133


state 97

    (34) pair -> valovar VARIABLE IGUAL PAIR . LPAREN datosprimitivos COMA datosprimitivos RPAREN

    LPAREN          shift and go to state 134


state 98

    (25) variableSinTipo -> valovar VARIABLE IGUAL datosprimitivos .

    VARIABLE        reduce using rule 25 (variableSinTipo -> valovar VARIABLE IGUAL datosprimitivos .)
    PRINT           reduce using rule 25 (variableSinTipo -> valovar VARIABLE IGUAL datosprimitivos .)
    PRINTLN         reduce using rule 25 (variableSinTipo -> valovar VARIABLE IGUAL datosprimitivos .)
    RETURN          reduce using rule 25 (variableSinTipo -> valovar VARIABLE IGUAL datosprimitivos .)
    VAR             reduce using rule 25 (variableSinTipo -> valovar VARIABLE IGUAL datosprimitivos .)
    VAL             reduce using rule 25 (variableSinTipo -> valovar VARIABLE IGUAL datosprimitivos .)
    STRINGPALABRA   reduce using rule 25 (variableSinTipo -> valovar VARIABLE IGUAL datosprimitivos .)
    FUN             reduce using rule 25 (variableSinTipo -> valovar VARIABLE IGUAL datosprimitivos .)
    IF              reduce using rule 25 (variableSinTipo -> valovar VARIABLE IGUAL datosprimitivos .)
    WHEN            reduce using rule 25 (variableSinTipo -> valovar VARIABLE IGUAL datosprimitivos .)
    FOR             reduce using rule 25 (variableSinTipo -> valovar VARIABLE IGUAL datosprimitivos .)
    $end            reduce using rule 25 (variableSinTipo -> valovar VARIABLE IGUAL datosprimitivos .)
    RLLAVE          reduce using rule 25 (variableSinTipo -> valovar VARIABLE IGUAL datosprimitivos .)


state 99

    (109) readline -> valovar VARIABLE IGUAL READLINE .

    VARIABLE        reduce using rule 109 (readline -> valovar VARIABLE IGUAL READLINE .)
    PRINT           reduce using rule 109 (readline -> valovar VARIABLE IGUAL READLINE .)
    PRINTLN         reduce using rule 109 (readline -> valovar VARIABLE IGUAL READLINE .)
    RETURN          reduce using rule 109 (readline -> valovar VARIABLE IGUAL READLINE .)
    VAR             reduce using rule 109 (readline -> valovar VARIABLE IGUAL READLINE .)
    VAL             reduce using rule 109 (readline -> valovar VARIABLE IGUAL READLINE .)
    STRINGPALABRA   reduce using rule 109 (readline -> valovar VARIABLE IGUAL READLINE .)
    FUN             reduce using rule 109 (readline -> valovar VARIABLE IGUAL READLINE .)
    IF              reduce using rule 109 (readline -> valovar VARIABLE IGUAL READLINE .)
    WHEN            reduce using rule 109 (readline -> valovar VARIABLE IGUAL READLINE .)
    FOR             reduce using rule 109 (readline -> valovar VARIABLE IGUAL READLINE .)
    $end            reduce using rule 109 (readline -> valovar VARIABLE IGUAL READLINE .)
    RLLAVE          reduce using rule 109 (readline -> valovar VARIABLE IGUAL READLINE .)


state 100

    (29) ListaSinTipo -> valovar VARIABLE IGUAL LISTOF . LPAREN repeCualquier RPAREN

    LPAREN          shift and go to state 135


state 101

    (33) ConjuntoSinTipo -> valovar VARIABLE IGUAL SETOF . LPAREN repeCualquier RPAREN

    LPAREN          shift and go to state 136


state 102

    (26) ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST . MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN
    (27) ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST . MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN
    (28) ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST . MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN

    MENORQUE        shift and go to state 137


state 103

    (23) variableConTipo -> valovar VARIABLE DOSPUNTOS INT . IGUAL NUMBER

    IGUAL           shift and go to state 138


state 104

    (22) variableConTipo -> valovar VARIABLE DOSPUNTOS STRING . IGUAL STRINGPALABRA

    IGUAL           shift and go to state 139


state 105

    (24) variableConTipo -> valovar VARIABLE DOSPUNTOS BOOLEAN . IGUAL

    IGUAL           shift and go to state 140


state 106

    (30) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET . MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN
    (31) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET . MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN
    (32) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET . MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN

    MENORQUE        shift and go to state 141


state 107

    (101) rindex -> VARIABLE PUNTO RINDEX LPAREN . repeCualquier RPAREN
    (53) repeCualquier -> . datosprimitivos
    (54) repeCualquier -> . datosprimitivos COMA repeCualquier
    (35) datosprimitivos -> . NUMBER
    (36) datosprimitivos -> . STRINGPALABRA
    (37) datosprimitivos -> . BOOLEANPALABRA
    (38) datosprimitivos -> . VARIABLE

    NUMBER          shift and go to state 79
    STRINGPALABRA   shift and go to state 80
    BOOLEANPALABRA  shift and go to state 81
    VARIABLE        shift and go to state 82

    repeCualquier                  shift and go to state 142
    datosprimitivos                shift and go to state 143

state 108

    (97) contains -> VARIABLE PUNTO CONTAINS LPAREN . datosprimitivos RPAREN
    (35) datosprimitivos -> . NUMBER
    (36) datosprimitivos -> . STRINGPALABRA
    (37) datosprimitivos -> . BOOLEANPALABRA
    (38) datosprimitivos -> . VARIABLE

    NUMBER          shift and go to state 79
    STRINGPALABRA   shift and go to state 80
    BOOLEANPALABRA  shift and go to state 81
    VARIABLE        shift and go to state 82

    datosprimitivos                shift and go to state 144

state 109

    (110) prin -> PRINT LPAREN datosprimitivos RPAREN .

    VARIABLE        reduce using rule 110 (prin -> PRINT LPAREN datosprimitivos RPAREN .)
    PRINT           reduce using rule 110 (prin -> PRINT LPAREN datosprimitivos RPAREN .)
    PRINTLN         reduce using rule 110 (prin -> PRINT LPAREN datosprimitivos RPAREN .)
    RETURN          reduce using rule 110 (prin -> PRINT LPAREN datosprimitivos RPAREN .)
    VAR             reduce using rule 110 (prin -> PRINT LPAREN datosprimitivos RPAREN .)
    VAL             reduce using rule 110 (prin -> PRINT LPAREN datosprimitivos RPAREN .)
    STRINGPALABRA   reduce using rule 110 (prin -> PRINT LPAREN datosprimitivos RPAREN .)
    FUN             reduce using rule 110 (prin -> PRINT LPAREN datosprimitivos RPAREN .)
    IF              reduce using rule 110 (prin -> PRINT LPAREN datosprimitivos RPAREN .)
    WHEN            reduce using rule 110 (prin -> PRINT LPAREN datosprimitivos RPAREN .)
    FOR             reduce using rule 110 (prin -> PRINT LPAREN datosprimitivos RPAREN .)
    $end            reduce using rule 110 (prin -> PRINT LPAREN datosprimitivos RPAREN .)
    RLLAVE          reduce using rule 110 (prin -> PRINT LPAREN datosprimitivos RPAREN .)


state 110

    (111) prin -> PRINTLN LPAREN datosprimitivos RPAREN .

    VARIABLE        reduce using rule 111 (prin -> PRINTLN LPAREN datosprimitivos RPAREN .)
    PRINT           reduce using rule 111 (prin -> PRINTLN LPAREN datosprimitivos RPAREN .)
    PRINTLN         reduce using rule 111 (prin -> PRINTLN LPAREN datosprimitivos RPAREN .)
    RETURN          reduce using rule 111 (prin -> PRINTLN LPAREN datosprimitivos RPAREN .)
    VAR             reduce using rule 111 (prin -> PRINTLN LPAREN datosprimitivos RPAREN .)
    VAL             reduce using rule 111 (prin -> PRINTLN LPAREN datosprimitivos RPAREN .)
    STRINGPALABRA   reduce using rule 111 (prin -> PRINTLN LPAREN datosprimitivos RPAREN .)
    FUN             reduce using rule 111 (prin -> PRINTLN LPAREN datosprimitivos RPAREN .)
    IF              reduce using rule 111 (prin -> PRINTLN LPAREN datosprimitivos RPAREN .)
    WHEN            reduce using rule 111 (prin -> PRINTLN LPAREN datosprimitivos RPAREN .)
    FOR             reduce using rule 111 (prin -> PRINTLN LPAREN datosprimitivos RPAREN .)
    $end            reduce using rule 111 (prin -> PRINTLN LPAREN datosprimitivos RPAREN .)
    RLLAVE          reduce using rule 111 (prin -> PRINTLN LPAREN datosprimitivos RPAREN .)


state 111

    (100) rindex -> STRINGPALABRA PUNTO RINDEX LPAREN . repeCualquier RPAREN
    (53) repeCualquier -> . datosprimitivos
    (54) repeCualquier -> . datosprimitivos COMA repeCualquier
    (35) datosprimitivos -> . NUMBER
    (36) datosprimitivos -> . STRINGPALABRA
    (37) datosprimitivos -> . BOOLEANPALABRA
    (38) datosprimitivos -> . VARIABLE

    NUMBER          shift and go to state 79
    STRINGPALABRA   shift and go to state 80
    BOOLEANPALABRA  shift and go to state 81
    VARIABLE        shift and go to state 82

    repeCualquier                  shift and go to state 145
    datosprimitivos                shift and go to state 143

state 112

    (98) contains -> STRINGPALABRA PUNTO CONTAINS LPAREN . STRINGPALABRA RPAREN
    (99) contains -> STRINGPALABRA PUNTO CONTAINS LPAREN . VARIABLE RPAREN

    STRINGPALABRA   shift and go to state 146
    VARIABLE        shift and go to state 147


state 113

    (89) funConSalidaArg -> FUN VARIABLE LPAREN RPAREN . DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (90) funSinSalidaArg -> FUN VARIABLE LPAREN RPAREN . LLLAVE repetodo RLLAVE

    DOSPUNTOS       shift and go to state 148
    LLLAVE          shift and go to state 149


state 114

    (63) argumento -> tipoDato . VARIABLE

    VARIABLE        shift and go to state 150


state 115

    (87) funConSalida -> FUN VARIABLE LPAREN repeArg . RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (88) funSinSalida -> FUN VARIABLE LPAREN repeArg . RPAREN LLLAVE repetodo RLLAVE

    RPAREN          shift and go to state 151


state 116

    (64) repeArg -> argumento .
    (65) repeArg -> argumento . COMA repeArg

    RPAREN          reduce using rule 64 (repeArg -> argumento .)
    COMA            shift and go to state 152


state 117

    (60) tipoDato -> INT .

    VARIABLE        reduce using rule 60 (tipoDato -> INT .)
    LLLAVE          reduce using rule 60 (tipoDato -> INT .)


state 118

    (61) tipoDato -> STRING .

    VARIABLE        reduce using rule 61 (tipoDato -> STRING .)
    LLLAVE          reduce using rule 61 (tipoDato -> STRING .)


state 119

    (62) tipoDato -> BOOLEAN .

    VARIABLE        reduce using rule 62 (tipoDato -> BOOLEAN .)
    LLLAVE          reduce using rule 62 (tipoDato -> BOOLEAN .)


state 120

    (76) ifBoolean -> IF LPAREN BOOLEANPALABRA RPAREN . LLLAVE repetodo RLLAVE

    LLLAVE          shift and go to state 153


state 121

    (77) ifComparacion -> IF LPAREN comparacion RPAREN . LLLAVE repetodo RLLAVE

    LLLAVE          shift and go to state 154


state 122

    (78) ifVariable -> IF LPAREN VARIABLE RPAREN . LLLAVE repetodo RLLAVE

    LLLAVE          shift and go to state 155


state 123

    (55) comparacion -> valor operadoresComp . valor
    (43) valor -> . NUMBER
    (44) valor -> . VARIABLE

    NUMBER          shift and go to state 91
    VARIABLE        shift and go to state 157

    valor                          shift and go to state 156

state 124

    (56) operadoresComp -> MAYORQUE .

    NUMBER          reduce using rule 56 (operadoresComp -> MAYORQUE .)
    VARIABLE        reduce using rule 56 (operadoresComp -> MAYORQUE .)


state 125

    (57) operadoresComp -> DIFERENTE .

    NUMBER          reduce using rule 57 (operadoresComp -> DIFERENTE .)
    VARIABLE        reduce using rule 57 (operadoresComp -> DIFERENTE .)


state 126

    (58) operadoresComp -> MENORQUE .

    NUMBER          reduce using rule 58 (operadoresComp -> MENORQUE .)
    VARIABLE        reduce using rule 58 (operadoresComp -> MENORQUE .)


state 127

    (59) operadoresComp -> ESIGUAL .

    NUMBER          reduce using rule 59 (operadoresComp -> ESIGUAL .)
    VARIABLE        reduce using rule 59 (operadoresComp -> ESIGUAL .)


state 128

    (80) whenVacio -> WHEN LLLAVE repetodo RLLAVE .

    VARIABLE        reduce using rule 80 (whenVacio -> WHEN LLLAVE repetodo RLLAVE .)
    PRINT           reduce using rule 80 (whenVacio -> WHEN LLLAVE repetodo RLLAVE .)
    PRINTLN         reduce using rule 80 (whenVacio -> WHEN LLLAVE repetodo RLLAVE .)
    RETURN          reduce using rule 80 (whenVacio -> WHEN LLLAVE repetodo RLLAVE .)
    VAR             reduce using rule 80 (whenVacio -> WHEN LLLAVE repetodo RLLAVE .)
    VAL             reduce using rule 80 (whenVacio -> WHEN LLLAVE repetodo RLLAVE .)
    STRINGPALABRA   reduce using rule 80 (whenVacio -> WHEN LLLAVE repetodo RLLAVE .)
    FUN             reduce using rule 80 (whenVacio -> WHEN LLLAVE repetodo RLLAVE .)
    IF              reduce using rule 80 (whenVacio -> WHEN LLLAVE repetodo RLLAVE .)
    WHEN            reduce using rule 80 (whenVacio -> WHEN LLLAVE repetodo RLLAVE .)
    FOR             reduce using rule 80 (whenVacio -> WHEN LLLAVE repetodo RLLAVE .)
    $end            reduce using rule 80 (whenVacio -> WHEN LLLAVE repetodo RLLAVE .)
    RLLAVE          reduce using rule 80 (whenVacio -> WHEN LLLAVE repetodo RLLAVE .)


state 129

    (79) whenVariable -> WHEN LPAREN VARIABLE RPAREN . LLLAVE repetodo RLLAVE

    LLLAVE          shift and go to state 158


state 130

    (82) forRango -> FOR LPAREN VARIABLE IN . NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE
    (81) forVariable -> FOR LPAREN VARIABLE IN . VARIABLE RPAREN LLLAVE repetodo RLLAVE

    NUMBER          shift and go to state 160
    VARIABLE        shift and go to state 159


state 131

    (105) sublistIndex -> lista LCLASP INT DOSPUNTOS INT . RCLASP

    RCLASP          shift and go to state 161


state 132

    (107) sublistFinal -> lista LCLASP INT DOSPUNTOS RCLASP .

    VARIABLE        reduce using rule 107 (sublistFinal -> lista LCLASP INT DOSPUNTOS RCLASP .)
    PRINT           reduce using rule 107 (sublistFinal -> lista LCLASP INT DOSPUNTOS RCLASP .)
    PRINTLN         reduce using rule 107 (sublistFinal -> lista LCLASP INT DOSPUNTOS RCLASP .)
    RETURN          reduce using rule 107 (sublistFinal -> lista LCLASP INT DOSPUNTOS RCLASP .)
    VAR             reduce using rule 107 (sublistFinal -> lista LCLASP INT DOSPUNTOS RCLASP .)
    VAL             reduce using rule 107 (sublistFinal -> lista LCLASP INT DOSPUNTOS RCLASP .)
    STRINGPALABRA   reduce using rule 107 (sublistFinal -> lista LCLASP INT DOSPUNTOS RCLASP .)
    FUN             reduce using rule 107 (sublistFinal -> lista LCLASP INT DOSPUNTOS RCLASP .)
    IF              reduce using rule 107 (sublistFinal -> lista LCLASP INT DOSPUNTOS RCLASP .)
    WHEN            reduce using rule 107 (sublistFinal -> lista LCLASP INT DOSPUNTOS RCLASP .)
    FOR             reduce using rule 107 (sublistFinal -> lista LCLASP INT DOSPUNTOS RCLASP .)
    $end            reduce using rule 107 (sublistFinal -> lista LCLASP INT DOSPUNTOS RCLASP .)
    RLLAVE          reduce using rule 107 (sublistFinal -> lista LCLASP INT DOSPUNTOS RCLASP .)


state 133

    (106) sublistInicio -> lista LCLASP DOSPUNTOS INT RCLASP .

    VARIABLE        reduce using rule 106 (sublistInicio -> lista LCLASP DOSPUNTOS INT RCLASP .)
    PRINT           reduce using rule 106 (sublistInicio -> lista LCLASP DOSPUNTOS INT RCLASP .)
    PRINTLN         reduce using rule 106 (sublistInicio -> lista LCLASP DOSPUNTOS INT RCLASP .)
    RETURN          reduce using rule 106 (sublistInicio -> lista LCLASP DOSPUNTOS INT RCLASP .)
    VAR             reduce using rule 106 (sublistInicio -> lista LCLASP DOSPUNTOS INT RCLASP .)
    VAL             reduce using rule 106 (sublistInicio -> lista LCLASP DOSPUNTOS INT RCLASP .)
    STRINGPALABRA   reduce using rule 106 (sublistInicio -> lista LCLASP DOSPUNTOS INT RCLASP .)
    FUN             reduce using rule 106 (sublistInicio -> lista LCLASP DOSPUNTOS INT RCLASP .)
    IF              reduce using rule 106 (sublistInicio -> lista LCLASP DOSPUNTOS INT RCLASP .)
    WHEN            reduce using rule 106 (sublistInicio -> lista LCLASP DOSPUNTOS INT RCLASP .)
    FOR             reduce using rule 106 (sublistInicio -> lista LCLASP DOSPUNTOS INT RCLASP .)
    $end            reduce using rule 106 (sublistInicio -> lista LCLASP DOSPUNTOS INT RCLASP .)
    RLLAVE          reduce using rule 106 (sublistInicio -> lista LCLASP DOSPUNTOS INT RCLASP .)


state 134

    (34) pair -> valovar VARIABLE IGUAL PAIR LPAREN . datosprimitivos COMA datosprimitivos RPAREN
    (35) datosprimitivos -> . NUMBER
    (36) datosprimitivos -> . STRINGPALABRA
    (37) datosprimitivos -> . BOOLEANPALABRA
    (38) datosprimitivos -> . VARIABLE

    NUMBER          shift and go to state 79
    STRINGPALABRA   shift and go to state 80
    BOOLEANPALABRA  shift and go to state 81
    VARIABLE        shift and go to state 82

    datosprimitivos                shift and go to state 162

state 135

    (29) ListaSinTipo -> valovar VARIABLE IGUAL LISTOF LPAREN . repeCualquier RPAREN
    (53) repeCualquier -> . datosprimitivos
    (54) repeCualquier -> . datosprimitivos COMA repeCualquier
    (35) datosprimitivos -> . NUMBER
    (36) datosprimitivos -> . STRINGPALABRA
    (37) datosprimitivos -> . BOOLEANPALABRA
    (38) datosprimitivos -> . VARIABLE

    NUMBER          shift and go to state 79
    STRINGPALABRA   shift and go to state 80
    BOOLEANPALABRA  shift and go to state 81
    VARIABLE        shift and go to state 82

    repeCualquier                  shift and go to state 163
    datosprimitivos                shift and go to state 143

state 136

    (33) ConjuntoSinTipo -> valovar VARIABLE IGUAL SETOF LPAREN . repeCualquier RPAREN
    (53) repeCualquier -> . datosprimitivos
    (54) repeCualquier -> . datosprimitivos COMA repeCualquier
    (35) datosprimitivos -> . NUMBER
    (36) datosprimitivos -> . STRINGPALABRA
    (37) datosprimitivos -> . BOOLEANPALABRA
    (38) datosprimitivos -> . VARIABLE

    NUMBER          shift and go to state 79
    STRINGPALABRA   shift and go to state 80
    BOOLEANPALABRA  shift and go to state 81
    VARIABLE        shift and go to state 82

    repeCualquier                  shift and go to state 164
    datosprimitivos                shift and go to state 143

state 137

    (26) ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE . INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN
    (27) ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE . STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN
    (28) ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE . BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN

    INT             shift and go to state 165
    STRING          shift and go to state 166
    BOOLEAN         shift and go to state 167


state 138

    (23) variableConTipo -> valovar VARIABLE DOSPUNTOS INT IGUAL . NUMBER

    NUMBER          shift and go to state 168


state 139

    (22) variableConTipo -> valovar VARIABLE DOSPUNTOS STRING IGUAL . STRINGPALABRA

    STRINGPALABRA   shift and go to state 169


state 140

    (24) variableConTipo -> valovar VARIABLE DOSPUNTOS BOOLEAN IGUAL .

    VARIABLE        reduce using rule 24 (variableConTipo -> valovar VARIABLE DOSPUNTOS BOOLEAN IGUAL .)
    PRINT           reduce using rule 24 (variableConTipo -> valovar VARIABLE DOSPUNTOS BOOLEAN IGUAL .)
    PRINTLN         reduce using rule 24 (variableConTipo -> valovar VARIABLE DOSPUNTOS BOOLEAN IGUAL .)
    RETURN          reduce using rule 24 (variableConTipo -> valovar VARIABLE DOSPUNTOS BOOLEAN IGUAL .)
    VAR             reduce using rule 24 (variableConTipo -> valovar VARIABLE DOSPUNTOS BOOLEAN IGUAL .)
    VAL             reduce using rule 24 (variableConTipo -> valovar VARIABLE DOSPUNTOS BOOLEAN IGUAL .)
    STRINGPALABRA   reduce using rule 24 (variableConTipo -> valovar VARIABLE DOSPUNTOS BOOLEAN IGUAL .)
    FUN             reduce using rule 24 (variableConTipo -> valovar VARIABLE DOSPUNTOS BOOLEAN IGUAL .)
    IF              reduce using rule 24 (variableConTipo -> valovar VARIABLE DOSPUNTOS BOOLEAN IGUAL .)
    WHEN            reduce using rule 24 (variableConTipo -> valovar VARIABLE DOSPUNTOS BOOLEAN IGUAL .)
    FOR             reduce using rule 24 (variableConTipo -> valovar VARIABLE DOSPUNTOS BOOLEAN IGUAL .)
    $end            reduce using rule 24 (variableConTipo -> valovar VARIABLE DOSPUNTOS BOOLEAN IGUAL .)
    RLLAVE          reduce using rule 24 (variableConTipo -> valovar VARIABLE DOSPUNTOS BOOLEAN IGUAL .)


state 141

    (30) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE . INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN
    (31) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE . STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN
    (32) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE . BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN

    INT             shift and go to state 170
    STRING          shift and go to state 171
    BOOLEAN         shift and go to state 172


state 142

    (101) rindex -> VARIABLE PUNTO RINDEX LPAREN repeCualquier . RPAREN

    RPAREN          shift and go to state 173


state 143

    (53) repeCualquier -> datosprimitivos .
    (54) repeCualquier -> datosprimitivos . COMA repeCualquier

    RPAREN          reduce using rule 53 (repeCualquier -> datosprimitivos .)
    COMA            shift and go to state 174


state 144

    (97) contains -> VARIABLE PUNTO CONTAINS LPAREN datosprimitivos . RPAREN

    RPAREN          shift and go to state 175


state 145

    (100) rindex -> STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier . RPAREN

    RPAREN          shift and go to state 176


state 146

    (98) contains -> STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA . RPAREN

    RPAREN          shift and go to state 177


state 147

    (99) contains -> STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE . RPAREN

    RPAREN          shift and go to state 178


state 148

    (89) funConSalidaArg -> FUN VARIABLE LPAREN RPAREN DOSPUNTOS . tipoDato LLLAVE repetodo RLLAVE
    (60) tipoDato -> . INT
    (61) tipoDato -> . STRING
    (62) tipoDato -> . BOOLEAN

    INT             shift and go to state 117
    STRING          shift and go to state 118
    BOOLEAN         shift and go to state 119

    tipoDato                       shift and go to state 179

state 149

    (90) funSinSalidaArg -> FUN VARIABLE LPAREN RPAREN LLLAVE . repetodo RLLAVE
    (14) repetodo -> . todo
    (15) repetodo -> . todo repetodo
    (2) todo -> . lista
    (3) todo -> . variable
    (4) todo -> . conjunto
    (5) todo -> . pair
    (6) todo -> . control
    (7) todo -> . adicionales
    (8) todo -> . funcion
    (9) todo -> . sublist
    (10) todo -> . readline
    (11) todo -> . prin
    (12) todo -> . contador
    (13) todo -> . retor
    (16) lista -> . ListaConTipo
    (17) lista -> . ListaSinTipo
    (18) variable -> . variableConTipo
    (19) variable -> . variableSinTipo
    (20) conjunto -> . ConjuntoConTipo
    (21) conjunto -> . ConjuntoSinTipo
    (34) pair -> . valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN
    (66) control -> . if
    (67) control -> . when
    (68) control -> . for
    (91) adicionales -> . size
    (92) adicionales -> . rindex
    (93) adicionales -> . sublist
    (94) adicionales -> . contains
    (83) funcion -> . funConSalidaArg
    (84) funcion -> . funConSalida
    (85) funcion -> . funSinSalidaArg
    (86) funcion -> . funSinSalida
    (102) sublist -> . sublistIndex
    (103) sublist -> . sublistInicio
    (104) sublist -> . sublistFinal
    (108) readline -> . VARIABLE IGUAL READLINE
    (109) readline -> . valovar VARIABLE IGUAL READLINE
    (110) prin -> . PRINT LPAREN datosprimitivos RPAREN
    (111) prin -> . PRINTLN LPAREN datosprimitivos RPAREN
    (112) contador -> . VARIABLE PLUS PLUS
    (113) retor -> . RETURN VARIABLE
    (26) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN
    (27) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN
    (28) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN
    (29) ListaSinTipo -> . valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN
    (22) variableConTipo -> . valovar VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA
    (23) variableConTipo -> . valovar VARIABLE DOSPUNTOS INT IGUAL NUMBER
    (24) variableConTipo -> . valovar VARIABLE DOSPUNTOS BOOLEAN IGUAL
    (25) variableSinTipo -> . valovar VARIABLE IGUAL datosprimitivos
    (30) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN
    (31) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN
    (32) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN
    (33) ConjuntoSinTipo -> . valovar VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN
    (39) valovar -> . VAR
    (40) valovar -> . VAL
    (69) if -> . ifBoolean
    (70) if -> . ifComparacion
    (71) if -> . ifVariable
    (72) when -> . whenVacio
    (73) when -> . whenVariable
    (74) for -> . forRango
    (75) for -> . forVariable
    (95) size -> . VARIABLE PUNTO SIZE
    (100) rindex -> . STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier RPAREN
    (101) rindex -> . VARIABLE PUNTO RINDEX LPAREN repeCualquier RPAREN
    (96) contains -> .
    (97) contains -> . VARIABLE PUNTO CONTAINS LPAREN datosprimitivos RPAREN
    (98) contains -> . STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN
    (99) contains -> . STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE RPAREN
    (89) funConSalidaArg -> . FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (87) funConSalida -> . FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (90) funSinSalidaArg -> . FUN VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE
    (88) funSinSalida -> . FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE
    (105) sublistIndex -> . lista LCLASP INT DOSPUNTOS INT RCLASP
    (106) sublistInicio -> . lista LCLASP DOSPUNTOS INT RCLASP
    (107) sublistFinal -> . lista LCLASP INT DOSPUNTOS RCLASP
    (76) ifBoolean -> . IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE
    (77) ifComparacion -> . IF LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE
    (78) ifVariable -> . IF LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE
    (80) whenVacio -> . WHEN LLLAVE repetodo RLLAVE
    (79) whenVariable -> . WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE
    (82) forRango -> . FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE
    (81) forVariable -> . FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for STRINGPALABRA resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHEN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    VARIABLE        shift and go to state 23
    PRINT           shift and go to state 37
    PRINTLN         shift and go to state 38
    RETURN          shift and go to state 39
    VAR             shift and go to state 41
    VAL             shift and go to state 42
    STRINGPALABRA   shift and go to state 40
    RLLAVE          reduce using rule 96 (contains -> .)
    FUN             shift and go to state 50
    IF              shift and go to state 51
    WHEN            shift and go to state 52
    FOR             shift and go to state 53

  ! VARIABLE        [ reduce using rule 96 (contains -> .) ]
  ! PRINT           [ reduce using rule 96 (contains -> .) ]
  ! PRINTLN         [ reduce using rule 96 (contains -> .) ]
  ! RETURN          [ reduce using rule 96 (contains -> .) ]
  ! VAR             [ reduce using rule 96 (contains -> .) ]
  ! VAL             [ reduce using rule 96 (contains -> .) ]
  ! STRINGPALABRA   [ reduce using rule 96 (contains -> .) ]
  ! FUN             [ reduce using rule 96 (contains -> .) ]
  ! IF              [ reduce using rule 96 (contains -> .) ]
  ! WHEN            [ reduce using rule 96 (contains -> .) ]
  ! FOR             [ reduce using rule 96 (contains -> .) ]

    repetodo                       shift and go to state 180
    todo                           shift and go to state 3
    lista                          shift and go to state 4
    variable                       shift and go to state 5
    conjunto                       shift and go to state 6
    pair                           shift and go to state 7
    control                        shift and go to state 8
    adicionales                    shift and go to state 9
    funcion                        shift and go to state 10
    sublist                        shift and go to state 11
    readline                       shift and go to state 12
    prin                           shift and go to state 13
    contador                       shift and go to state 14
    retor                          shift and go to state 15
    ListaConTipo                   shift and go to state 16
    ListaSinTipo                   shift and go to state 17
    variableConTipo                shift and go to state 18
    variableSinTipo                shift and go to state 19
    ConjuntoConTipo                shift and go to state 20
    ConjuntoSinTipo                shift and go to state 21
    valovar                        shift and go to state 22
    if                             shift and go to state 24
    when                           shift and go to state 25
    for                            shift and go to state 26
    size                           shift and go to state 27
    rindex                         shift and go to state 28
    contains                       shift and go to state 29
    funConSalidaArg                shift and go to state 30
    funConSalida                   shift and go to state 31
    funSinSalidaArg                shift and go to state 32
    funSinSalida                   shift and go to state 33
    sublistIndex                   shift and go to state 34
    sublistInicio                  shift and go to state 35
    sublistFinal                   shift and go to state 36
    ifBoolean                      shift and go to state 43
    ifComparacion                  shift and go to state 44
    ifVariable                     shift and go to state 45
    whenVacio                      shift and go to state 46
    whenVariable                   shift and go to state 47
    forRango                       shift and go to state 48
    forVariable                    shift and go to state 49

state 150

    (63) argumento -> tipoDato VARIABLE .

    COMA            reduce using rule 63 (argumento -> tipoDato VARIABLE .)
    RPAREN          reduce using rule 63 (argumento -> tipoDato VARIABLE .)


state 151

    (87) funConSalida -> FUN VARIABLE LPAREN repeArg RPAREN . DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (88) funSinSalida -> FUN VARIABLE LPAREN repeArg RPAREN . LLLAVE repetodo RLLAVE

    DOSPUNTOS       shift and go to state 181
    LLLAVE          shift and go to state 182


state 152

    (65) repeArg -> argumento COMA . repeArg
    (64) repeArg -> . argumento
    (65) repeArg -> . argumento COMA repeArg
    (63) argumento -> . tipoDato VARIABLE
    (60) tipoDato -> . INT
    (61) tipoDato -> . STRING
    (62) tipoDato -> . BOOLEAN

    INT             shift and go to state 117
    STRING          shift and go to state 118
    BOOLEAN         shift and go to state 119

    argumento                      shift and go to state 116
    repeArg                        shift and go to state 183
    tipoDato                       shift and go to state 114

state 153

    (76) ifBoolean -> IF LPAREN BOOLEANPALABRA RPAREN LLLAVE . repetodo RLLAVE
    (14) repetodo -> . todo
    (15) repetodo -> . todo repetodo
    (2) todo -> . lista
    (3) todo -> . variable
    (4) todo -> . conjunto
    (5) todo -> . pair
    (6) todo -> . control
    (7) todo -> . adicionales
    (8) todo -> . funcion
    (9) todo -> . sublist
    (10) todo -> . readline
    (11) todo -> . prin
    (12) todo -> . contador
    (13) todo -> . retor
    (16) lista -> . ListaConTipo
    (17) lista -> . ListaSinTipo
    (18) variable -> . variableConTipo
    (19) variable -> . variableSinTipo
    (20) conjunto -> . ConjuntoConTipo
    (21) conjunto -> . ConjuntoSinTipo
    (34) pair -> . valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN
    (66) control -> . if
    (67) control -> . when
    (68) control -> . for
    (91) adicionales -> . size
    (92) adicionales -> . rindex
    (93) adicionales -> . sublist
    (94) adicionales -> . contains
    (83) funcion -> . funConSalidaArg
    (84) funcion -> . funConSalida
    (85) funcion -> . funSinSalidaArg
    (86) funcion -> . funSinSalida
    (102) sublist -> . sublistIndex
    (103) sublist -> . sublistInicio
    (104) sublist -> . sublistFinal
    (108) readline -> . VARIABLE IGUAL READLINE
    (109) readline -> . valovar VARIABLE IGUAL READLINE
    (110) prin -> . PRINT LPAREN datosprimitivos RPAREN
    (111) prin -> . PRINTLN LPAREN datosprimitivos RPAREN
    (112) contador -> . VARIABLE PLUS PLUS
    (113) retor -> . RETURN VARIABLE
    (26) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN
    (27) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN
    (28) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN
    (29) ListaSinTipo -> . valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN
    (22) variableConTipo -> . valovar VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA
    (23) variableConTipo -> . valovar VARIABLE DOSPUNTOS INT IGUAL NUMBER
    (24) variableConTipo -> . valovar VARIABLE DOSPUNTOS BOOLEAN IGUAL
    (25) variableSinTipo -> . valovar VARIABLE IGUAL datosprimitivos
    (30) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN
    (31) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN
    (32) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN
    (33) ConjuntoSinTipo -> . valovar VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN
    (39) valovar -> . VAR
    (40) valovar -> . VAL
    (69) if -> . ifBoolean
    (70) if -> . ifComparacion
    (71) if -> . ifVariable
    (72) when -> . whenVacio
    (73) when -> . whenVariable
    (74) for -> . forRango
    (75) for -> . forVariable
    (95) size -> . VARIABLE PUNTO SIZE
    (100) rindex -> . STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier RPAREN
    (101) rindex -> . VARIABLE PUNTO RINDEX LPAREN repeCualquier RPAREN
    (96) contains -> .
    (97) contains -> . VARIABLE PUNTO CONTAINS LPAREN datosprimitivos RPAREN
    (98) contains -> . STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN
    (99) contains -> . STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE RPAREN
    (89) funConSalidaArg -> . FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (87) funConSalida -> . FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (90) funSinSalidaArg -> . FUN VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE
    (88) funSinSalida -> . FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE
    (105) sublistIndex -> . lista LCLASP INT DOSPUNTOS INT RCLASP
    (106) sublistInicio -> . lista LCLASP DOSPUNTOS INT RCLASP
    (107) sublistFinal -> . lista LCLASP INT DOSPUNTOS RCLASP
    (76) ifBoolean -> . IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE
    (77) ifComparacion -> . IF LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE
    (78) ifVariable -> . IF LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE
    (80) whenVacio -> . WHEN LLLAVE repetodo RLLAVE
    (79) whenVariable -> . WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE
    (82) forRango -> . FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE
    (81) forVariable -> . FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for STRINGPALABRA resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHEN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    VARIABLE        shift and go to state 23
    PRINT           shift and go to state 37
    PRINTLN         shift and go to state 38
    RETURN          shift and go to state 39
    VAR             shift and go to state 41
    VAL             shift and go to state 42
    STRINGPALABRA   shift and go to state 40
    RLLAVE          reduce using rule 96 (contains -> .)
    FUN             shift and go to state 50
    IF              shift and go to state 51
    WHEN            shift and go to state 52
    FOR             shift and go to state 53

  ! VARIABLE        [ reduce using rule 96 (contains -> .) ]
  ! PRINT           [ reduce using rule 96 (contains -> .) ]
  ! PRINTLN         [ reduce using rule 96 (contains -> .) ]
  ! RETURN          [ reduce using rule 96 (contains -> .) ]
  ! VAR             [ reduce using rule 96 (contains -> .) ]
  ! VAL             [ reduce using rule 96 (contains -> .) ]
  ! STRINGPALABRA   [ reduce using rule 96 (contains -> .) ]
  ! FUN             [ reduce using rule 96 (contains -> .) ]
  ! IF              [ reduce using rule 96 (contains -> .) ]
  ! WHEN            [ reduce using rule 96 (contains -> .) ]
  ! FOR             [ reduce using rule 96 (contains -> .) ]

    repetodo                       shift and go to state 184
    todo                           shift and go to state 3
    lista                          shift and go to state 4
    variable                       shift and go to state 5
    conjunto                       shift and go to state 6
    pair                           shift and go to state 7
    control                        shift and go to state 8
    adicionales                    shift and go to state 9
    funcion                        shift and go to state 10
    sublist                        shift and go to state 11
    readline                       shift and go to state 12
    prin                           shift and go to state 13
    contador                       shift and go to state 14
    retor                          shift and go to state 15
    ListaConTipo                   shift and go to state 16
    ListaSinTipo                   shift and go to state 17
    variableConTipo                shift and go to state 18
    variableSinTipo                shift and go to state 19
    ConjuntoConTipo                shift and go to state 20
    ConjuntoSinTipo                shift and go to state 21
    valovar                        shift and go to state 22
    if                             shift and go to state 24
    when                           shift and go to state 25
    for                            shift and go to state 26
    size                           shift and go to state 27
    rindex                         shift and go to state 28
    contains                       shift and go to state 29
    funConSalidaArg                shift and go to state 30
    funConSalida                   shift and go to state 31
    funSinSalidaArg                shift and go to state 32
    funSinSalida                   shift and go to state 33
    sublistIndex                   shift and go to state 34
    sublistInicio                  shift and go to state 35
    sublistFinal                   shift and go to state 36
    ifBoolean                      shift and go to state 43
    ifComparacion                  shift and go to state 44
    ifVariable                     shift and go to state 45
    whenVacio                      shift and go to state 46
    whenVariable                   shift and go to state 47
    forRango                       shift and go to state 48
    forVariable                    shift and go to state 49

state 154

    (77) ifComparacion -> IF LPAREN comparacion RPAREN LLLAVE . repetodo RLLAVE
    (14) repetodo -> . todo
    (15) repetodo -> . todo repetodo
    (2) todo -> . lista
    (3) todo -> . variable
    (4) todo -> . conjunto
    (5) todo -> . pair
    (6) todo -> . control
    (7) todo -> . adicionales
    (8) todo -> . funcion
    (9) todo -> . sublist
    (10) todo -> . readline
    (11) todo -> . prin
    (12) todo -> . contador
    (13) todo -> . retor
    (16) lista -> . ListaConTipo
    (17) lista -> . ListaSinTipo
    (18) variable -> . variableConTipo
    (19) variable -> . variableSinTipo
    (20) conjunto -> . ConjuntoConTipo
    (21) conjunto -> . ConjuntoSinTipo
    (34) pair -> . valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN
    (66) control -> . if
    (67) control -> . when
    (68) control -> . for
    (91) adicionales -> . size
    (92) adicionales -> . rindex
    (93) adicionales -> . sublist
    (94) adicionales -> . contains
    (83) funcion -> . funConSalidaArg
    (84) funcion -> . funConSalida
    (85) funcion -> . funSinSalidaArg
    (86) funcion -> . funSinSalida
    (102) sublist -> . sublistIndex
    (103) sublist -> . sublistInicio
    (104) sublist -> . sublistFinal
    (108) readline -> . VARIABLE IGUAL READLINE
    (109) readline -> . valovar VARIABLE IGUAL READLINE
    (110) prin -> . PRINT LPAREN datosprimitivos RPAREN
    (111) prin -> . PRINTLN LPAREN datosprimitivos RPAREN
    (112) contador -> . VARIABLE PLUS PLUS
    (113) retor -> . RETURN VARIABLE
    (26) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN
    (27) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN
    (28) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN
    (29) ListaSinTipo -> . valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN
    (22) variableConTipo -> . valovar VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA
    (23) variableConTipo -> . valovar VARIABLE DOSPUNTOS INT IGUAL NUMBER
    (24) variableConTipo -> . valovar VARIABLE DOSPUNTOS BOOLEAN IGUAL
    (25) variableSinTipo -> . valovar VARIABLE IGUAL datosprimitivos
    (30) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN
    (31) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN
    (32) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN
    (33) ConjuntoSinTipo -> . valovar VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN
    (39) valovar -> . VAR
    (40) valovar -> . VAL
    (69) if -> . ifBoolean
    (70) if -> . ifComparacion
    (71) if -> . ifVariable
    (72) when -> . whenVacio
    (73) when -> . whenVariable
    (74) for -> . forRango
    (75) for -> . forVariable
    (95) size -> . VARIABLE PUNTO SIZE
    (100) rindex -> . STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier RPAREN
    (101) rindex -> . VARIABLE PUNTO RINDEX LPAREN repeCualquier RPAREN
    (96) contains -> .
    (97) contains -> . VARIABLE PUNTO CONTAINS LPAREN datosprimitivos RPAREN
    (98) contains -> . STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN
    (99) contains -> . STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE RPAREN
    (89) funConSalidaArg -> . FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (87) funConSalida -> . FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (90) funSinSalidaArg -> . FUN VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE
    (88) funSinSalida -> . FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE
    (105) sublistIndex -> . lista LCLASP INT DOSPUNTOS INT RCLASP
    (106) sublistInicio -> . lista LCLASP DOSPUNTOS INT RCLASP
    (107) sublistFinal -> . lista LCLASP INT DOSPUNTOS RCLASP
    (76) ifBoolean -> . IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE
    (77) ifComparacion -> . IF LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE
    (78) ifVariable -> . IF LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE
    (80) whenVacio -> . WHEN LLLAVE repetodo RLLAVE
    (79) whenVariable -> . WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE
    (82) forRango -> . FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE
    (81) forVariable -> . FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for STRINGPALABRA resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHEN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    VARIABLE        shift and go to state 23
    PRINT           shift and go to state 37
    PRINTLN         shift and go to state 38
    RETURN          shift and go to state 39
    VAR             shift and go to state 41
    VAL             shift and go to state 42
    STRINGPALABRA   shift and go to state 40
    RLLAVE          reduce using rule 96 (contains -> .)
    FUN             shift and go to state 50
    IF              shift and go to state 51
    WHEN            shift and go to state 52
    FOR             shift and go to state 53

  ! VARIABLE        [ reduce using rule 96 (contains -> .) ]
  ! PRINT           [ reduce using rule 96 (contains -> .) ]
  ! PRINTLN         [ reduce using rule 96 (contains -> .) ]
  ! RETURN          [ reduce using rule 96 (contains -> .) ]
  ! VAR             [ reduce using rule 96 (contains -> .) ]
  ! VAL             [ reduce using rule 96 (contains -> .) ]
  ! STRINGPALABRA   [ reduce using rule 96 (contains -> .) ]
  ! FUN             [ reduce using rule 96 (contains -> .) ]
  ! IF              [ reduce using rule 96 (contains -> .) ]
  ! WHEN            [ reduce using rule 96 (contains -> .) ]
  ! FOR             [ reduce using rule 96 (contains -> .) ]

    repetodo                       shift and go to state 185
    todo                           shift and go to state 3
    lista                          shift and go to state 4
    variable                       shift and go to state 5
    conjunto                       shift and go to state 6
    pair                           shift and go to state 7
    control                        shift and go to state 8
    adicionales                    shift and go to state 9
    funcion                        shift and go to state 10
    sublist                        shift and go to state 11
    readline                       shift and go to state 12
    prin                           shift and go to state 13
    contador                       shift and go to state 14
    retor                          shift and go to state 15
    ListaConTipo                   shift and go to state 16
    ListaSinTipo                   shift and go to state 17
    variableConTipo                shift and go to state 18
    variableSinTipo                shift and go to state 19
    ConjuntoConTipo                shift and go to state 20
    ConjuntoSinTipo                shift and go to state 21
    valovar                        shift and go to state 22
    if                             shift and go to state 24
    when                           shift and go to state 25
    for                            shift and go to state 26
    size                           shift and go to state 27
    rindex                         shift and go to state 28
    contains                       shift and go to state 29
    funConSalidaArg                shift and go to state 30
    funConSalida                   shift and go to state 31
    funSinSalidaArg                shift and go to state 32
    funSinSalida                   shift and go to state 33
    sublistIndex                   shift and go to state 34
    sublistInicio                  shift and go to state 35
    sublistFinal                   shift and go to state 36
    ifBoolean                      shift and go to state 43
    ifComparacion                  shift and go to state 44
    ifVariable                     shift and go to state 45
    whenVacio                      shift and go to state 46
    whenVariable                   shift and go to state 47
    forRango                       shift and go to state 48
    forVariable                    shift and go to state 49

state 155

    (78) ifVariable -> IF LPAREN VARIABLE RPAREN LLLAVE . repetodo RLLAVE
    (14) repetodo -> . todo
    (15) repetodo -> . todo repetodo
    (2) todo -> . lista
    (3) todo -> . variable
    (4) todo -> . conjunto
    (5) todo -> . pair
    (6) todo -> . control
    (7) todo -> . adicionales
    (8) todo -> . funcion
    (9) todo -> . sublist
    (10) todo -> . readline
    (11) todo -> . prin
    (12) todo -> . contador
    (13) todo -> . retor
    (16) lista -> . ListaConTipo
    (17) lista -> . ListaSinTipo
    (18) variable -> . variableConTipo
    (19) variable -> . variableSinTipo
    (20) conjunto -> . ConjuntoConTipo
    (21) conjunto -> . ConjuntoSinTipo
    (34) pair -> . valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN
    (66) control -> . if
    (67) control -> . when
    (68) control -> . for
    (91) adicionales -> . size
    (92) adicionales -> . rindex
    (93) adicionales -> . sublist
    (94) adicionales -> . contains
    (83) funcion -> . funConSalidaArg
    (84) funcion -> . funConSalida
    (85) funcion -> . funSinSalidaArg
    (86) funcion -> . funSinSalida
    (102) sublist -> . sublistIndex
    (103) sublist -> . sublistInicio
    (104) sublist -> . sublistFinal
    (108) readline -> . VARIABLE IGUAL READLINE
    (109) readline -> . valovar VARIABLE IGUAL READLINE
    (110) prin -> . PRINT LPAREN datosprimitivos RPAREN
    (111) prin -> . PRINTLN LPAREN datosprimitivos RPAREN
    (112) contador -> . VARIABLE PLUS PLUS
    (113) retor -> . RETURN VARIABLE
    (26) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN
    (27) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN
    (28) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN
    (29) ListaSinTipo -> . valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN
    (22) variableConTipo -> . valovar VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA
    (23) variableConTipo -> . valovar VARIABLE DOSPUNTOS INT IGUAL NUMBER
    (24) variableConTipo -> . valovar VARIABLE DOSPUNTOS BOOLEAN IGUAL
    (25) variableSinTipo -> . valovar VARIABLE IGUAL datosprimitivos
    (30) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN
    (31) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN
    (32) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN
    (33) ConjuntoSinTipo -> . valovar VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN
    (39) valovar -> . VAR
    (40) valovar -> . VAL
    (69) if -> . ifBoolean
    (70) if -> . ifComparacion
    (71) if -> . ifVariable
    (72) when -> . whenVacio
    (73) when -> . whenVariable
    (74) for -> . forRango
    (75) for -> . forVariable
    (95) size -> . VARIABLE PUNTO SIZE
    (100) rindex -> . STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier RPAREN
    (101) rindex -> . VARIABLE PUNTO RINDEX LPAREN repeCualquier RPAREN
    (96) contains -> .
    (97) contains -> . VARIABLE PUNTO CONTAINS LPAREN datosprimitivos RPAREN
    (98) contains -> . STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN
    (99) contains -> . STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE RPAREN
    (89) funConSalidaArg -> . FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (87) funConSalida -> . FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (90) funSinSalidaArg -> . FUN VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE
    (88) funSinSalida -> . FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE
    (105) sublistIndex -> . lista LCLASP INT DOSPUNTOS INT RCLASP
    (106) sublistInicio -> . lista LCLASP DOSPUNTOS INT RCLASP
    (107) sublistFinal -> . lista LCLASP INT DOSPUNTOS RCLASP
    (76) ifBoolean -> . IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE
    (77) ifComparacion -> . IF LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE
    (78) ifVariable -> . IF LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE
    (80) whenVacio -> . WHEN LLLAVE repetodo RLLAVE
    (79) whenVariable -> . WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE
    (82) forRango -> . FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE
    (81) forVariable -> . FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for STRINGPALABRA resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHEN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    VARIABLE        shift and go to state 23
    PRINT           shift and go to state 37
    PRINTLN         shift and go to state 38
    RETURN          shift and go to state 39
    VAR             shift and go to state 41
    VAL             shift and go to state 42
    STRINGPALABRA   shift and go to state 40
    RLLAVE          reduce using rule 96 (contains -> .)
    FUN             shift and go to state 50
    IF              shift and go to state 51
    WHEN            shift and go to state 52
    FOR             shift and go to state 53

  ! VARIABLE        [ reduce using rule 96 (contains -> .) ]
  ! PRINT           [ reduce using rule 96 (contains -> .) ]
  ! PRINTLN         [ reduce using rule 96 (contains -> .) ]
  ! RETURN          [ reduce using rule 96 (contains -> .) ]
  ! VAR             [ reduce using rule 96 (contains -> .) ]
  ! VAL             [ reduce using rule 96 (contains -> .) ]
  ! STRINGPALABRA   [ reduce using rule 96 (contains -> .) ]
  ! FUN             [ reduce using rule 96 (contains -> .) ]
  ! IF              [ reduce using rule 96 (contains -> .) ]
  ! WHEN            [ reduce using rule 96 (contains -> .) ]
  ! FOR             [ reduce using rule 96 (contains -> .) ]

    repetodo                       shift and go to state 186
    todo                           shift and go to state 3
    lista                          shift and go to state 4
    variable                       shift and go to state 5
    conjunto                       shift and go to state 6
    pair                           shift and go to state 7
    control                        shift and go to state 8
    adicionales                    shift and go to state 9
    funcion                        shift and go to state 10
    sublist                        shift and go to state 11
    readline                       shift and go to state 12
    prin                           shift and go to state 13
    contador                       shift and go to state 14
    retor                          shift and go to state 15
    ListaConTipo                   shift and go to state 16
    ListaSinTipo                   shift and go to state 17
    variableConTipo                shift and go to state 18
    variableSinTipo                shift and go to state 19
    ConjuntoConTipo                shift and go to state 20
    ConjuntoSinTipo                shift and go to state 21
    valovar                        shift and go to state 22
    if                             shift and go to state 24
    when                           shift and go to state 25
    for                            shift and go to state 26
    size                           shift and go to state 27
    rindex                         shift and go to state 28
    contains                       shift and go to state 29
    funConSalidaArg                shift and go to state 30
    funConSalida                   shift and go to state 31
    funSinSalidaArg                shift and go to state 32
    funSinSalida                   shift and go to state 33
    sublistIndex                   shift and go to state 34
    sublistInicio                  shift and go to state 35
    sublistFinal                   shift and go to state 36
    ifBoolean                      shift and go to state 43
    ifComparacion                  shift and go to state 44
    ifVariable                     shift and go to state 45
    whenVacio                      shift and go to state 46
    whenVariable                   shift and go to state 47
    forRango                       shift and go to state 48
    forVariable                    shift and go to state 49

state 156

    (55) comparacion -> valor operadoresComp valor .

    RPAREN          reduce using rule 55 (comparacion -> valor operadoresComp valor .)


state 157

    (44) valor -> VARIABLE .

    RPAREN          reduce using rule 44 (valor -> VARIABLE .)
    COMA            reduce using rule 44 (valor -> VARIABLE .)


state 158

    (79) whenVariable -> WHEN LPAREN VARIABLE RPAREN LLLAVE . repetodo RLLAVE
    (14) repetodo -> . todo
    (15) repetodo -> . todo repetodo
    (2) todo -> . lista
    (3) todo -> . variable
    (4) todo -> . conjunto
    (5) todo -> . pair
    (6) todo -> . control
    (7) todo -> . adicionales
    (8) todo -> . funcion
    (9) todo -> . sublist
    (10) todo -> . readline
    (11) todo -> . prin
    (12) todo -> . contador
    (13) todo -> . retor
    (16) lista -> . ListaConTipo
    (17) lista -> . ListaSinTipo
    (18) variable -> . variableConTipo
    (19) variable -> . variableSinTipo
    (20) conjunto -> . ConjuntoConTipo
    (21) conjunto -> . ConjuntoSinTipo
    (34) pair -> . valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN
    (66) control -> . if
    (67) control -> . when
    (68) control -> . for
    (91) adicionales -> . size
    (92) adicionales -> . rindex
    (93) adicionales -> . sublist
    (94) adicionales -> . contains
    (83) funcion -> . funConSalidaArg
    (84) funcion -> . funConSalida
    (85) funcion -> . funSinSalidaArg
    (86) funcion -> . funSinSalida
    (102) sublist -> . sublistIndex
    (103) sublist -> . sublistInicio
    (104) sublist -> . sublistFinal
    (108) readline -> . VARIABLE IGUAL READLINE
    (109) readline -> . valovar VARIABLE IGUAL READLINE
    (110) prin -> . PRINT LPAREN datosprimitivos RPAREN
    (111) prin -> . PRINTLN LPAREN datosprimitivos RPAREN
    (112) contador -> . VARIABLE PLUS PLUS
    (113) retor -> . RETURN VARIABLE
    (26) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN
    (27) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN
    (28) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN
    (29) ListaSinTipo -> . valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN
    (22) variableConTipo -> . valovar VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA
    (23) variableConTipo -> . valovar VARIABLE DOSPUNTOS INT IGUAL NUMBER
    (24) variableConTipo -> . valovar VARIABLE DOSPUNTOS BOOLEAN IGUAL
    (25) variableSinTipo -> . valovar VARIABLE IGUAL datosprimitivos
    (30) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN
    (31) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN
    (32) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN
    (33) ConjuntoSinTipo -> . valovar VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN
    (39) valovar -> . VAR
    (40) valovar -> . VAL
    (69) if -> . ifBoolean
    (70) if -> . ifComparacion
    (71) if -> . ifVariable
    (72) when -> . whenVacio
    (73) when -> . whenVariable
    (74) for -> . forRango
    (75) for -> . forVariable
    (95) size -> . VARIABLE PUNTO SIZE
    (100) rindex -> . STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier RPAREN
    (101) rindex -> . VARIABLE PUNTO RINDEX LPAREN repeCualquier RPAREN
    (96) contains -> .
    (97) contains -> . VARIABLE PUNTO CONTAINS LPAREN datosprimitivos RPAREN
    (98) contains -> . STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN
    (99) contains -> . STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE RPAREN
    (89) funConSalidaArg -> . FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (87) funConSalida -> . FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (90) funSinSalidaArg -> . FUN VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE
    (88) funSinSalida -> . FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE
    (105) sublistIndex -> . lista LCLASP INT DOSPUNTOS INT RCLASP
    (106) sublistInicio -> . lista LCLASP DOSPUNTOS INT RCLASP
    (107) sublistFinal -> . lista LCLASP INT DOSPUNTOS RCLASP
    (76) ifBoolean -> . IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE
    (77) ifComparacion -> . IF LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE
    (78) ifVariable -> . IF LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE
    (80) whenVacio -> . WHEN LLLAVE repetodo RLLAVE
    (79) whenVariable -> . WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE
    (82) forRango -> . FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE
    (81) forVariable -> . FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for STRINGPALABRA resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHEN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    VARIABLE        shift and go to state 23
    PRINT           shift and go to state 37
    PRINTLN         shift and go to state 38
    RETURN          shift and go to state 39
    VAR             shift and go to state 41
    VAL             shift and go to state 42
    STRINGPALABRA   shift and go to state 40
    RLLAVE          reduce using rule 96 (contains -> .)
    FUN             shift and go to state 50
    IF              shift and go to state 51
    WHEN            shift and go to state 52
    FOR             shift and go to state 53

  ! VARIABLE        [ reduce using rule 96 (contains -> .) ]
  ! PRINT           [ reduce using rule 96 (contains -> .) ]
  ! PRINTLN         [ reduce using rule 96 (contains -> .) ]
  ! RETURN          [ reduce using rule 96 (contains -> .) ]
  ! VAR             [ reduce using rule 96 (contains -> .) ]
  ! VAL             [ reduce using rule 96 (contains -> .) ]
  ! STRINGPALABRA   [ reduce using rule 96 (contains -> .) ]
  ! FUN             [ reduce using rule 96 (contains -> .) ]
  ! IF              [ reduce using rule 96 (contains -> .) ]
  ! WHEN            [ reduce using rule 96 (contains -> .) ]
  ! FOR             [ reduce using rule 96 (contains -> .) ]

    repetodo                       shift and go to state 187
    todo                           shift and go to state 3
    lista                          shift and go to state 4
    variable                       shift and go to state 5
    conjunto                       shift and go to state 6
    pair                           shift and go to state 7
    control                        shift and go to state 8
    adicionales                    shift and go to state 9
    funcion                        shift and go to state 10
    sublist                        shift and go to state 11
    readline                       shift and go to state 12
    prin                           shift and go to state 13
    contador                       shift and go to state 14
    retor                          shift and go to state 15
    ListaConTipo                   shift and go to state 16
    ListaSinTipo                   shift and go to state 17
    variableConTipo                shift and go to state 18
    variableSinTipo                shift and go to state 19
    ConjuntoConTipo                shift and go to state 20
    ConjuntoSinTipo                shift and go to state 21
    valovar                        shift and go to state 22
    if                             shift and go to state 24
    when                           shift and go to state 25
    for                            shift and go to state 26
    size                           shift and go to state 27
    rindex                         shift and go to state 28
    contains                       shift and go to state 29
    funConSalidaArg                shift and go to state 30
    funConSalida                   shift and go to state 31
    funSinSalidaArg                shift and go to state 32
    funSinSalida                   shift and go to state 33
    sublistIndex                   shift and go to state 34
    sublistInicio                  shift and go to state 35
    sublistFinal                   shift and go to state 36
    ifBoolean                      shift and go to state 43
    ifComparacion                  shift and go to state 44
    ifVariable                     shift and go to state 45
    whenVacio                      shift and go to state 46
    whenVariable                   shift and go to state 47
    forRango                       shift and go to state 48
    forVariable                    shift and go to state 49

state 159

    (81) forVariable -> FOR LPAREN VARIABLE IN VARIABLE . RPAREN LLLAVE repetodo RLLAVE

    RPAREN          shift and go to state 188


state 160

    (82) forRango -> FOR LPAREN VARIABLE IN NUMBER . PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE

    PUNTO           shift and go to state 189


state 161

    (105) sublistIndex -> lista LCLASP INT DOSPUNTOS INT RCLASP .

    VARIABLE        reduce using rule 105 (sublistIndex -> lista LCLASP INT DOSPUNTOS INT RCLASP .)
    PRINT           reduce using rule 105 (sublistIndex -> lista LCLASP INT DOSPUNTOS INT RCLASP .)
    PRINTLN         reduce using rule 105 (sublistIndex -> lista LCLASP INT DOSPUNTOS INT RCLASP .)
    RETURN          reduce using rule 105 (sublistIndex -> lista LCLASP INT DOSPUNTOS INT RCLASP .)
    VAR             reduce using rule 105 (sublistIndex -> lista LCLASP INT DOSPUNTOS INT RCLASP .)
    VAL             reduce using rule 105 (sublistIndex -> lista LCLASP INT DOSPUNTOS INT RCLASP .)
    STRINGPALABRA   reduce using rule 105 (sublistIndex -> lista LCLASP INT DOSPUNTOS INT RCLASP .)
    FUN             reduce using rule 105 (sublistIndex -> lista LCLASP INT DOSPUNTOS INT RCLASP .)
    IF              reduce using rule 105 (sublistIndex -> lista LCLASP INT DOSPUNTOS INT RCLASP .)
    WHEN            reduce using rule 105 (sublistIndex -> lista LCLASP INT DOSPUNTOS INT RCLASP .)
    FOR             reduce using rule 105 (sublistIndex -> lista LCLASP INT DOSPUNTOS INT RCLASP .)
    $end            reduce using rule 105 (sublistIndex -> lista LCLASP INT DOSPUNTOS INT RCLASP .)
    RLLAVE          reduce using rule 105 (sublistIndex -> lista LCLASP INT DOSPUNTOS INT RCLASP .)


state 162

    (34) pair -> valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos . COMA datosprimitivos RPAREN

    COMA            shift and go to state 190


state 163

    (29) ListaSinTipo -> valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier . RPAREN

    RPAREN          shift and go to state 191


state 164

    (33) ConjuntoSinTipo -> valovar VARIABLE IGUAL SETOF LPAREN repeCualquier . RPAREN

    RPAREN          shift and go to state 192


state 165

    (26) ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE INT . MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN

    MAYORQUE        shift and go to state 193


state 166

    (27) ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING . MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN

    MAYORQUE        shift and go to state 194


state 167

    (28) ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN . MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN

    MAYORQUE        shift and go to state 195


state 168

    (23) variableConTipo -> valovar VARIABLE DOSPUNTOS INT IGUAL NUMBER .

    VARIABLE        reduce using rule 23 (variableConTipo -> valovar VARIABLE DOSPUNTOS INT IGUAL NUMBER .)
    PRINT           reduce using rule 23 (variableConTipo -> valovar VARIABLE DOSPUNTOS INT IGUAL NUMBER .)
    PRINTLN         reduce using rule 23 (variableConTipo -> valovar VARIABLE DOSPUNTOS INT IGUAL NUMBER .)
    RETURN          reduce using rule 23 (variableConTipo -> valovar VARIABLE DOSPUNTOS INT IGUAL NUMBER .)
    VAR             reduce using rule 23 (variableConTipo -> valovar VARIABLE DOSPUNTOS INT IGUAL NUMBER .)
    VAL             reduce using rule 23 (variableConTipo -> valovar VARIABLE DOSPUNTOS INT IGUAL NUMBER .)
    STRINGPALABRA   reduce using rule 23 (variableConTipo -> valovar VARIABLE DOSPUNTOS INT IGUAL NUMBER .)
    FUN             reduce using rule 23 (variableConTipo -> valovar VARIABLE DOSPUNTOS INT IGUAL NUMBER .)
    IF              reduce using rule 23 (variableConTipo -> valovar VARIABLE DOSPUNTOS INT IGUAL NUMBER .)
    WHEN            reduce using rule 23 (variableConTipo -> valovar VARIABLE DOSPUNTOS INT IGUAL NUMBER .)
    FOR             reduce using rule 23 (variableConTipo -> valovar VARIABLE DOSPUNTOS INT IGUAL NUMBER .)
    $end            reduce using rule 23 (variableConTipo -> valovar VARIABLE DOSPUNTOS INT IGUAL NUMBER .)
    RLLAVE          reduce using rule 23 (variableConTipo -> valovar VARIABLE DOSPUNTOS INT IGUAL NUMBER .)


state 169

    (22) variableConTipo -> valovar VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA .

    VARIABLE        reduce using rule 22 (variableConTipo -> valovar VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA .)
    PRINT           reduce using rule 22 (variableConTipo -> valovar VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA .)
    PRINTLN         reduce using rule 22 (variableConTipo -> valovar VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA .)
    RETURN          reduce using rule 22 (variableConTipo -> valovar VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA .)
    VAR             reduce using rule 22 (variableConTipo -> valovar VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA .)
    VAL             reduce using rule 22 (variableConTipo -> valovar VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA .)
    STRINGPALABRA   reduce using rule 22 (variableConTipo -> valovar VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA .)
    FUN             reduce using rule 22 (variableConTipo -> valovar VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA .)
    IF              reduce using rule 22 (variableConTipo -> valovar VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA .)
    WHEN            reduce using rule 22 (variableConTipo -> valovar VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA .)
    FOR             reduce using rule 22 (variableConTipo -> valovar VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA .)
    $end            reduce using rule 22 (variableConTipo -> valovar VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA .)
    RLLAVE          reduce using rule 22 (variableConTipo -> valovar VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA .)


state 170

    (30) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE INT . MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN

    MAYORQUE        shift and go to state 196


state 171

    (31) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE STRING . MAYORQUE IGUAL SETOF LPAREN repeString RPAREN

    MAYORQUE        shift and go to state 197


state 172

    (32) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN . MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN

    MAYORQUE        shift and go to state 198


state 173

    (101) rindex -> VARIABLE PUNTO RINDEX LPAREN repeCualquier RPAREN .

    VARIABLE        reduce using rule 101 (rindex -> VARIABLE PUNTO RINDEX LPAREN repeCualquier RPAREN .)
    PRINT           reduce using rule 101 (rindex -> VARIABLE PUNTO RINDEX LPAREN repeCualquier RPAREN .)
    PRINTLN         reduce using rule 101 (rindex -> VARIABLE PUNTO RINDEX LPAREN repeCualquier RPAREN .)
    RETURN          reduce using rule 101 (rindex -> VARIABLE PUNTO RINDEX LPAREN repeCualquier RPAREN .)
    VAR             reduce using rule 101 (rindex -> VARIABLE PUNTO RINDEX LPAREN repeCualquier RPAREN .)
    VAL             reduce using rule 101 (rindex -> VARIABLE PUNTO RINDEX LPAREN repeCualquier RPAREN .)
    STRINGPALABRA   reduce using rule 101 (rindex -> VARIABLE PUNTO RINDEX LPAREN repeCualquier RPAREN .)
    FUN             reduce using rule 101 (rindex -> VARIABLE PUNTO RINDEX LPAREN repeCualquier RPAREN .)
    IF              reduce using rule 101 (rindex -> VARIABLE PUNTO RINDEX LPAREN repeCualquier RPAREN .)
    WHEN            reduce using rule 101 (rindex -> VARIABLE PUNTO RINDEX LPAREN repeCualquier RPAREN .)
    FOR             reduce using rule 101 (rindex -> VARIABLE PUNTO RINDEX LPAREN repeCualquier RPAREN .)
    $end            reduce using rule 101 (rindex -> VARIABLE PUNTO RINDEX LPAREN repeCualquier RPAREN .)
    RLLAVE          reduce using rule 101 (rindex -> VARIABLE PUNTO RINDEX LPAREN repeCualquier RPAREN .)


state 174

    (54) repeCualquier -> datosprimitivos COMA . repeCualquier
    (53) repeCualquier -> . datosprimitivos
    (54) repeCualquier -> . datosprimitivos COMA repeCualquier
    (35) datosprimitivos -> . NUMBER
    (36) datosprimitivos -> . STRINGPALABRA
    (37) datosprimitivos -> . BOOLEANPALABRA
    (38) datosprimitivos -> . VARIABLE

    NUMBER          shift and go to state 79
    STRINGPALABRA   shift and go to state 80
    BOOLEANPALABRA  shift and go to state 81
    VARIABLE        shift and go to state 82

    datosprimitivos                shift and go to state 143
    repeCualquier                  shift and go to state 199

state 175

    (97) contains -> VARIABLE PUNTO CONTAINS LPAREN datosprimitivos RPAREN .

    VARIABLE        reduce using rule 97 (contains -> VARIABLE PUNTO CONTAINS LPAREN datosprimitivos RPAREN .)
    PRINT           reduce using rule 97 (contains -> VARIABLE PUNTO CONTAINS LPAREN datosprimitivos RPAREN .)
    PRINTLN         reduce using rule 97 (contains -> VARIABLE PUNTO CONTAINS LPAREN datosprimitivos RPAREN .)
    RETURN          reduce using rule 97 (contains -> VARIABLE PUNTO CONTAINS LPAREN datosprimitivos RPAREN .)
    VAR             reduce using rule 97 (contains -> VARIABLE PUNTO CONTAINS LPAREN datosprimitivos RPAREN .)
    VAL             reduce using rule 97 (contains -> VARIABLE PUNTO CONTAINS LPAREN datosprimitivos RPAREN .)
    STRINGPALABRA   reduce using rule 97 (contains -> VARIABLE PUNTO CONTAINS LPAREN datosprimitivos RPAREN .)
    FUN             reduce using rule 97 (contains -> VARIABLE PUNTO CONTAINS LPAREN datosprimitivos RPAREN .)
    IF              reduce using rule 97 (contains -> VARIABLE PUNTO CONTAINS LPAREN datosprimitivos RPAREN .)
    WHEN            reduce using rule 97 (contains -> VARIABLE PUNTO CONTAINS LPAREN datosprimitivos RPAREN .)
    FOR             reduce using rule 97 (contains -> VARIABLE PUNTO CONTAINS LPAREN datosprimitivos RPAREN .)
    $end            reduce using rule 97 (contains -> VARIABLE PUNTO CONTAINS LPAREN datosprimitivos RPAREN .)
    RLLAVE          reduce using rule 97 (contains -> VARIABLE PUNTO CONTAINS LPAREN datosprimitivos RPAREN .)


state 176

    (100) rindex -> STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier RPAREN .

    VARIABLE        reduce using rule 100 (rindex -> STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier RPAREN .)
    PRINT           reduce using rule 100 (rindex -> STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier RPAREN .)
    PRINTLN         reduce using rule 100 (rindex -> STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier RPAREN .)
    RETURN          reduce using rule 100 (rindex -> STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier RPAREN .)
    VAR             reduce using rule 100 (rindex -> STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier RPAREN .)
    VAL             reduce using rule 100 (rindex -> STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier RPAREN .)
    STRINGPALABRA   reduce using rule 100 (rindex -> STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier RPAREN .)
    FUN             reduce using rule 100 (rindex -> STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier RPAREN .)
    IF              reduce using rule 100 (rindex -> STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier RPAREN .)
    WHEN            reduce using rule 100 (rindex -> STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier RPAREN .)
    FOR             reduce using rule 100 (rindex -> STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier RPAREN .)
    $end            reduce using rule 100 (rindex -> STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier RPAREN .)
    RLLAVE          reduce using rule 100 (rindex -> STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier RPAREN .)


state 177

    (98) contains -> STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN .

    VARIABLE        reduce using rule 98 (contains -> STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN .)
    PRINT           reduce using rule 98 (contains -> STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN .)
    PRINTLN         reduce using rule 98 (contains -> STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN .)
    RETURN          reduce using rule 98 (contains -> STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN .)
    VAR             reduce using rule 98 (contains -> STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN .)
    VAL             reduce using rule 98 (contains -> STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN .)
    STRINGPALABRA   reduce using rule 98 (contains -> STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN .)
    FUN             reduce using rule 98 (contains -> STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN .)
    IF              reduce using rule 98 (contains -> STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN .)
    WHEN            reduce using rule 98 (contains -> STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN .)
    FOR             reduce using rule 98 (contains -> STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN .)
    $end            reduce using rule 98 (contains -> STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN .)
    RLLAVE          reduce using rule 98 (contains -> STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN .)


state 178

    (99) contains -> STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE RPAREN .

    VARIABLE        reduce using rule 99 (contains -> STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE RPAREN .)
    PRINT           reduce using rule 99 (contains -> STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE RPAREN .)
    PRINTLN         reduce using rule 99 (contains -> STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE RPAREN .)
    RETURN          reduce using rule 99 (contains -> STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE RPAREN .)
    VAR             reduce using rule 99 (contains -> STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE RPAREN .)
    VAL             reduce using rule 99 (contains -> STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE RPAREN .)
    STRINGPALABRA   reduce using rule 99 (contains -> STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE RPAREN .)
    FUN             reduce using rule 99 (contains -> STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE RPAREN .)
    IF              reduce using rule 99 (contains -> STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE RPAREN .)
    WHEN            reduce using rule 99 (contains -> STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE RPAREN .)
    FOR             reduce using rule 99 (contains -> STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE RPAREN .)
    $end            reduce using rule 99 (contains -> STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE RPAREN .)
    RLLAVE          reduce using rule 99 (contains -> STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE RPAREN .)


state 179

    (89) funConSalidaArg -> FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato . LLLAVE repetodo RLLAVE

    LLLAVE          shift and go to state 200


state 180

    (90) funSinSalidaArg -> FUN VARIABLE LPAREN RPAREN LLLAVE repetodo . RLLAVE

    RLLAVE          shift and go to state 201


state 181

    (87) funConSalida -> FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS . tipoDato LLLAVE repetodo RLLAVE
    (60) tipoDato -> . INT
    (61) tipoDato -> . STRING
    (62) tipoDato -> . BOOLEAN

    INT             shift and go to state 117
    STRING          shift and go to state 118
    BOOLEAN         shift and go to state 119

    tipoDato                       shift and go to state 202

state 182

    (88) funSinSalida -> FUN VARIABLE LPAREN repeArg RPAREN LLLAVE . repetodo RLLAVE
    (14) repetodo -> . todo
    (15) repetodo -> . todo repetodo
    (2) todo -> . lista
    (3) todo -> . variable
    (4) todo -> . conjunto
    (5) todo -> . pair
    (6) todo -> . control
    (7) todo -> . adicionales
    (8) todo -> . funcion
    (9) todo -> . sublist
    (10) todo -> . readline
    (11) todo -> . prin
    (12) todo -> . contador
    (13) todo -> . retor
    (16) lista -> . ListaConTipo
    (17) lista -> . ListaSinTipo
    (18) variable -> . variableConTipo
    (19) variable -> . variableSinTipo
    (20) conjunto -> . ConjuntoConTipo
    (21) conjunto -> . ConjuntoSinTipo
    (34) pair -> . valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN
    (66) control -> . if
    (67) control -> . when
    (68) control -> . for
    (91) adicionales -> . size
    (92) adicionales -> . rindex
    (93) adicionales -> . sublist
    (94) adicionales -> . contains
    (83) funcion -> . funConSalidaArg
    (84) funcion -> . funConSalida
    (85) funcion -> . funSinSalidaArg
    (86) funcion -> . funSinSalida
    (102) sublist -> . sublistIndex
    (103) sublist -> . sublistInicio
    (104) sublist -> . sublistFinal
    (108) readline -> . VARIABLE IGUAL READLINE
    (109) readline -> . valovar VARIABLE IGUAL READLINE
    (110) prin -> . PRINT LPAREN datosprimitivos RPAREN
    (111) prin -> . PRINTLN LPAREN datosprimitivos RPAREN
    (112) contador -> . VARIABLE PLUS PLUS
    (113) retor -> . RETURN VARIABLE
    (26) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN
    (27) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN
    (28) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN
    (29) ListaSinTipo -> . valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN
    (22) variableConTipo -> . valovar VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA
    (23) variableConTipo -> . valovar VARIABLE DOSPUNTOS INT IGUAL NUMBER
    (24) variableConTipo -> . valovar VARIABLE DOSPUNTOS BOOLEAN IGUAL
    (25) variableSinTipo -> . valovar VARIABLE IGUAL datosprimitivos
    (30) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN
    (31) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN
    (32) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN
    (33) ConjuntoSinTipo -> . valovar VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN
    (39) valovar -> . VAR
    (40) valovar -> . VAL
    (69) if -> . ifBoolean
    (70) if -> . ifComparacion
    (71) if -> . ifVariable
    (72) when -> . whenVacio
    (73) when -> . whenVariable
    (74) for -> . forRango
    (75) for -> . forVariable
    (95) size -> . VARIABLE PUNTO SIZE
    (100) rindex -> . STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier RPAREN
    (101) rindex -> . VARIABLE PUNTO RINDEX LPAREN repeCualquier RPAREN
    (96) contains -> .
    (97) contains -> . VARIABLE PUNTO CONTAINS LPAREN datosprimitivos RPAREN
    (98) contains -> . STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN
    (99) contains -> . STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE RPAREN
    (89) funConSalidaArg -> . FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (87) funConSalida -> . FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (90) funSinSalidaArg -> . FUN VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE
    (88) funSinSalida -> . FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE
    (105) sublistIndex -> . lista LCLASP INT DOSPUNTOS INT RCLASP
    (106) sublistInicio -> . lista LCLASP DOSPUNTOS INT RCLASP
    (107) sublistFinal -> . lista LCLASP INT DOSPUNTOS RCLASP
    (76) ifBoolean -> . IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE
    (77) ifComparacion -> . IF LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE
    (78) ifVariable -> . IF LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE
    (80) whenVacio -> . WHEN LLLAVE repetodo RLLAVE
    (79) whenVariable -> . WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE
    (82) forRango -> . FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE
    (81) forVariable -> . FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for STRINGPALABRA resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHEN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    VARIABLE        shift and go to state 23
    PRINT           shift and go to state 37
    PRINTLN         shift and go to state 38
    RETURN          shift and go to state 39
    VAR             shift and go to state 41
    VAL             shift and go to state 42
    STRINGPALABRA   shift and go to state 40
    RLLAVE          reduce using rule 96 (contains -> .)
    FUN             shift and go to state 50
    IF              shift and go to state 51
    WHEN            shift and go to state 52
    FOR             shift and go to state 53

  ! VARIABLE        [ reduce using rule 96 (contains -> .) ]
  ! PRINT           [ reduce using rule 96 (contains -> .) ]
  ! PRINTLN         [ reduce using rule 96 (contains -> .) ]
  ! RETURN          [ reduce using rule 96 (contains -> .) ]
  ! VAR             [ reduce using rule 96 (contains -> .) ]
  ! VAL             [ reduce using rule 96 (contains -> .) ]
  ! STRINGPALABRA   [ reduce using rule 96 (contains -> .) ]
  ! FUN             [ reduce using rule 96 (contains -> .) ]
  ! IF              [ reduce using rule 96 (contains -> .) ]
  ! WHEN            [ reduce using rule 96 (contains -> .) ]
  ! FOR             [ reduce using rule 96 (contains -> .) ]

    repetodo                       shift and go to state 203
    todo                           shift and go to state 3
    lista                          shift and go to state 4
    variable                       shift and go to state 5
    conjunto                       shift and go to state 6
    pair                           shift and go to state 7
    control                        shift and go to state 8
    adicionales                    shift and go to state 9
    funcion                        shift and go to state 10
    sublist                        shift and go to state 11
    readline                       shift and go to state 12
    prin                           shift and go to state 13
    contador                       shift and go to state 14
    retor                          shift and go to state 15
    ListaConTipo                   shift and go to state 16
    ListaSinTipo                   shift and go to state 17
    variableConTipo                shift and go to state 18
    variableSinTipo                shift and go to state 19
    ConjuntoConTipo                shift and go to state 20
    ConjuntoSinTipo                shift and go to state 21
    valovar                        shift and go to state 22
    if                             shift and go to state 24
    when                           shift and go to state 25
    for                            shift and go to state 26
    size                           shift and go to state 27
    rindex                         shift and go to state 28
    contains                       shift and go to state 29
    funConSalidaArg                shift and go to state 30
    funConSalida                   shift and go to state 31
    funSinSalidaArg                shift and go to state 32
    funSinSalida                   shift and go to state 33
    sublistIndex                   shift and go to state 34
    sublistInicio                  shift and go to state 35
    sublistFinal                   shift and go to state 36
    ifBoolean                      shift and go to state 43
    ifComparacion                  shift and go to state 44
    ifVariable                     shift and go to state 45
    whenVacio                      shift and go to state 46
    whenVariable                   shift and go to state 47
    forRango                       shift and go to state 48
    forVariable                    shift and go to state 49

state 183

    (65) repeArg -> argumento COMA repeArg .

    RPAREN          reduce using rule 65 (repeArg -> argumento COMA repeArg .)


state 184

    (76) ifBoolean -> IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo . RLLAVE

    RLLAVE          shift and go to state 204


state 185

    (77) ifComparacion -> IF LPAREN comparacion RPAREN LLLAVE repetodo . RLLAVE

    RLLAVE          shift and go to state 205


state 186

    (78) ifVariable -> IF LPAREN VARIABLE RPAREN LLLAVE repetodo . RLLAVE

    RLLAVE          shift and go to state 206


state 187

    (79) whenVariable -> WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo . RLLAVE

    RLLAVE          shift and go to state 207


state 188

    (81) forVariable -> FOR LPAREN VARIABLE IN VARIABLE RPAREN . LLLAVE repetodo RLLAVE

    LLLAVE          shift and go to state 208


state 189

    (82) forRango -> FOR LPAREN VARIABLE IN NUMBER PUNTO . PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE

    PUNTO           shift and go to state 209


state 190

    (34) pair -> valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA . datosprimitivos RPAREN
    (35) datosprimitivos -> . NUMBER
    (36) datosprimitivos -> . STRINGPALABRA
    (37) datosprimitivos -> . BOOLEANPALABRA
    (38) datosprimitivos -> . VARIABLE

    NUMBER          shift and go to state 79
    STRINGPALABRA   shift and go to state 80
    BOOLEANPALABRA  shift and go to state 81
    VARIABLE        shift and go to state 82

    datosprimitivos                shift and go to state 210

state 191

    (29) ListaSinTipo -> valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN .

    LCLASP          reduce using rule 29 (ListaSinTipo -> valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN .)
    VARIABLE        reduce using rule 29 (ListaSinTipo -> valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN .)
    PRINT           reduce using rule 29 (ListaSinTipo -> valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN .)
    PRINTLN         reduce using rule 29 (ListaSinTipo -> valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN .)
    RETURN          reduce using rule 29 (ListaSinTipo -> valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN .)
    VAR             reduce using rule 29 (ListaSinTipo -> valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN .)
    VAL             reduce using rule 29 (ListaSinTipo -> valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN .)
    STRINGPALABRA   reduce using rule 29 (ListaSinTipo -> valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN .)
    FUN             reduce using rule 29 (ListaSinTipo -> valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN .)
    IF              reduce using rule 29 (ListaSinTipo -> valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN .)
    WHEN            reduce using rule 29 (ListaSinTipo -> valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN .)
    FOR             reduce using rule 29 (ListaSinTipo -> valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN .)
    $end            reduce using rule 29 (ListaSinTipo -> valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN .)
    RLLAVE          reduce using rule 29 (ListaSinTipo -> valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN .)


state 192

    (33) ConjuntoSinTipo -> valovar VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN .

    VARIABLE        reduce using rule 33 (ConjuntoSinTipo -> valovar VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN .)
    PRINT           reduce using rule 33 (ConjuntoSinTipo -> valovar VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN .)
    PRINTLN         reduce using rule 33 (ConjuntoSinTipo -> valovar VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN .)
    RETURN          reduce using rule 33 (ConjuntoSinTipo -> valovar VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN .)
    VAR             reduce using rule 33 (ConjuntoSinTipo -> valovar VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN .)
    VAL             reduce using rule 33 (ConjuntoSinTipo -> valovar VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN .)
    STRINGPALABRA   reduce using rule 33 (ConjuntoSinTipo -> valovar VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN .)
    FUN             reduce using rule 33 (ConjuntoSinTipo -> valovar VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN .)
    IF              reduce using rule 33 (ConjuntoSinTipo -> valovar VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN .)
    WHEN            reduce using rule 33 (ConjuntoSinTipo -> valovar VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN .)
    FOR             reduce using rule 33 (ConjuntoSinTipo -> valovar VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN .)
    $end            reduce using rule 33 (ConjuntoSinTipo -> valovar VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN .)
    RLLAVE          reduce using rule 33 (ConjuntoSinTipo -> valovar VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN .)


state 193

    (26) ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE . IGUAL LISTOF LPAREN repeInt RPAREN

    IGUAL           shift and go to state 211


state 194

    (27) ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE . IGUAL LISTOF LPAREN repeString RPAREN

    IGUAL           shift and go to state 212


state 195

    (28) ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE . IGUAL LISTOF repeBool LPAREN RPAREN

    IGUAL           shift and go to state 213


state 196

    (30) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE . IGUAL SETOF LPAREN repeInt RPAREN

    IGUAL           shift and go to state 214


state 197

    (31) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE . IGUAL SETOF LPAREN repeString RPAREN

    IGUAL           shift and go to state 215


state 198

    (32) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE . IGUAL SETOF LPAREN repeBool RPAREN

    IGUAL           shift and go to state 216


state 199

    (54) repeCualquier -> datosprimitivos COMA repeCualquier .

    RPAREN          reduce using rule 54 (repeCualquier -> datosprimitivos COMA repeCualquier .)


state 200

    (89) funConSalidaArg -> FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE . repetodo RLLAVE
    (14) repetodo -> . todo
    (15) repetodo -> . todo repetodo
    (2) todo -> . lista
    (3) todo -> . variable
    (4) todo -> . conjunto
    (5) todo -> . pair
    (6) todo -> . control
    (7) todo -> . adicionales
    (8) todo -> . funcion
    (9) todo -> . sublist
    (10) todo -> . readline
    (11) todo -> . prin
    (12) todo -> . contador
    (13) todo -> . retor
    (16) lista -> . ListaConTipo
    (17) lista -> . ListaSinTipo
    (18) variable -> . variableConTipo
    (19) variable -> . variableSinTipo
    (20) conjunto -> . ConjuntoConTipo
    (21) conjunto -> . ConjuntoSinTipo
    (34) pair -> . valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN
    (66) control -> . if
    (67) control -> . when
    (68) control -> . for
    (91) adicionales -> . size
    (92) adicionales -> . rindex
    (93) adicionales -> . sublist
    (94) adicionales -> . contains
    (83) funcion -> . funConSalidaArg
    (84) funcion -> . funConSalida
    (85) funcion -> . funSinSalidaArg
    (86) funcion -> . funSinSalida
    (102) sublist -> . sublistIndex
    (103) sublist -> . sublistInicio
    (104) sublist -> . sublistFinal
    (108) readline -> . VARIABLE IGUAL READLINE
    (109) readline -> . valovar VARIABLE IGUAL READLINE
    (110) prin -> . PRINT LPAREN datosprimitivos RPAREN
    (111) prin -> . PRINTLN LPAREN datosprimitivos RPAREN
    (112) contador -> . VARIABLE PLUS PLUS
    (113) retor -> . RETURN VARIABLE
    (26) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN
    (27) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN
    (28) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN
    (29) ListaSinTipo -> . valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN
    (22) variableConTipo -> . valovar VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA
    (23) variableConTipo -> . valovar VARIABLE DOSPUNTOS INT IGUAL NUMBER
    (24) variableConTipo -> . valovar VARIABLE DOSPUNTOS BOOLEAN IGUAL
    (25) variableSinTipo -> . valovar VARIABLE IGUAL datosprimitivos
    (30) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN
    (31) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN
    (32) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN
    (33) ConjuntoSinTipo -> . valovar VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN
    (39) valovar -> . VAR
    (40) valovar -> . VAL
    (69) if -> . ifBoolean
    (70) if -> . ifComparacion
    (71) if -> . ifVariable
    (72) when -> . whenVacio
    (73) when -> . whenVariable
    (74) for -> . forRango
    (75) for -> . forVariable
    (95) size -> . VARIABLE PUNTO SIZE
    (100) rindex -> . STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier RPAREN
    (101) rindex -> . VARIABLE PUNTO RINDEX LPAREN repeCualquier RPAREN
    (96) contains -> .
    (97) contains -> . VARIABLE PUNTO CONTAINS LPAREN datosprimitivos RPAREN
    (98) contains -> . STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN
    (99) contains -> . STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE RPAREN
    (89) funConSalidaArg -> . FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (87) funConSalida -> . FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (90) funSinSalidaArg -> . FUN VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE
    (88) funSinSalida -> . FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE
    (105) sublistIndex -> . lista LCLASP INT DOSPUNTOS INT RCLASP
    (106) sublistInicio -> . lista LCLASP DOSPUNTOS INT RCLASP
    (107) sublistFinal -> . lista LCLASP INT DOSPUNTOS RCLASP
    (76) ifBoolean -> . IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE
    (77) ifComparacion -> . IF LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE
    (78) ifVariable -> . IF LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE
    (80) whenVacio -> . WHEN LLLAVE repetodo RLLAVE
    (79) whenVariable -> . WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE
    (82) forRango -> . FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE
    (81) forVariable -> . FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for STRINGPALABRA resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHEN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    VARIABLE        shift and go to state 23
    PRINT           shift and go to state 37
    PRINTLN         shift and go to state 38
    RETURN          shift and go to state 39
    VAR             shift and go to state 41
    VAL             shift and go to state 42
    STRINGPALABRA   shift and go to state 40
    RLLAVE          reduce using rule 96 (contains -> .)
    FUN             shift and go to state 50
    IF              shift and go to state 51
    WHEN            shift and go to state 52
    FOR             shift and go to state 53

  ! VARIABLE        [ reduce using rule 96 (contains -> .) ]
  ! PRINT           [ reduce using rule 96 (contains -> .) ]
  ! PRINTLN         [ reduce using rule 96 (contains -> .) ]
  ! RETURN          [ reduce using rule 96 (contains -> .) ]
  ! VAR             [ reduce using rule 96 (contains -> .) ]
  ! VAL             [ reduce using rule 96 (contains -> .) ]
  ! STRINGPALABRA   [ reduce using rule 96 (contains -> .) ]
  ! FUN             [ reduce using rule 96 (contains -> .) ]
  ! IF              [ reduce using rule 96 (contains -> .) ]
  ! WHEN            [ reduce using rule 96 (contains -> .) ]
  ! FOR             [ reduce using rule 96 (contains -> .) ]

    repetodo                       shift and go to state 217
    todo                           shift and go to state 3
    lista                          shift and go to state 4
    variable                       shift and go to state 5
    conjunto                       shift and go to state 6
    pair                           shift and go to state 7
    control                        shift and go to state 8
    adicionales                    shift and go to state 9
    funcion                        shift and go to state 10
    sublist                        shift and go to state 11
    readline                       shift and go to state 12
    prin                           shift and go to state 13
    contador                       shift and go to state 14
    retor                          shift and go to state 15
    ListaConTipo                   shift and go to state 16
    ListaSinTipo                   shift and go to state 17
    variableConTipo                shift and go to state 18
    variableSinTipo                shift and go to state 19
    ConjuntoConTipo                shift and go to state 20
    ConjuntoSinTipo                shift and go to state 21
    valovar                        shift and go to state 22
    if                             shift and go to state 24
    when                           shift and go to state 25
    for                            shift and go to state 26
    size                           shift and go to state 27
    rindex                         shift and go to state 28
    contains                       shift and go to state 29
    funConSalidaArg                shift and go to state 30
    funConSalida                   shift and go to state 31
    funSinSalidaArg                shift and go to state 32
    funSinSalida                   shift and go to state 33
    sublistIndex                   shift and go to state 34
    sublistInicio                  shift and go to state 35
    sublistFinal                   shift and go to state 36
    ifBoolean                      shift and go to state 43
    ifComparacion                  shift and go to state 44
    ifVariable                     shift and go to state 45
    whenVacio                      shift and go to state 46
    whenVariable                   shift and go to state 47
    forRango                       shift and go to state 48
    forVariable                    shift and go to state 49

state 201

    (90) funSinSalidaArg -> FUN VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE .

    VARIABLE        reduce using rule 90 (funSinSalidaArg -> FUN VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE .)
    PRINT           reduce using rule 90 (funSinSalidaArg -> FUN VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE .)
    PRINTLN         reduce using rule 90 (funSinSalidaArg -> FUN VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE .)
    RETURN          reduce using rule 90 (funSinSalidaArg -> FUN VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE .)
    VAR             reduce using rule 90 (funSinSalidaArg -> FUN VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE .)
    VAL             reduce using rule 90 (funSinSalidaArg -> FUN VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE .)
    STRINGPALABRA   reduce using rule 90 (funSinSalidaArg -> FUN VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE .)
    FUN             reduce using rule 90 (funSinSalidaArg -> FUN VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE .)
    IF              reduce using rule 90 (funSinSalidaArg -> FUN VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE .)
    WHEN            reduce using rule 90 (funSinSalidaArg -> FUN VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE .)
    FOR             reduce using rule 90 (funSinSalidaArg -> FUN VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE .)
    $end            reduce using rule 90 (funSinSalidaArg -> FUN VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE .)
    RLLAVE          reduce using rule 90 (funSinSalidaArg -> FUN VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE .)


state 202

    (87) funConSalida -> FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato . LLLAVE repetodo RLLAVE

    LLLAVE          shift and go to state 218


state 203

    (88) funSinSalida -> FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo . RLLAVE

    RLLAVE          shift and go to state 219


state 204

    (76) ifBoolean -> IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE .

    VARIABLE        reduce using rule 76 (ifBoolean -> IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE .)
    PRINT           reduce using rule 76 (ifBoolean -> IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE .)
    PRINTLN         reduce using rule 76 (ifBoolean -> IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE .)
    RETURN          reduce using rule 76 (ifBoolean -> IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE .)
    VAR             reduce using rule 76 (ifBoolean -> IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE .)
    VAL             reduce using rule 76 (ifBoolean -> IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE .)
    STRINGPALABRA   reduce using rule 76 (ifBoolean -> IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE .)
    FUN             reduce using rule 76 (ifBoolean -> IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE .)
    IF              reduce using rule 76 (ifBoolean -> IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE .)
    WHEN            reduce using rule 76 (ifBoolean -> IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE .)
    FOR             reduce using rule 76 (ifBoolean -> IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE .)
    $end            reduce using rule 76 (ifBoolean -> IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE .)
    RLLAVE          reduce using rule 76 (ifBoolean -> IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE .)


state 205

    (77) ifComparacion -> IF LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE .

    VARIABLE        reduce using rule 77 (ifComparacion -> IF LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE .)
    PRINT           reduce using rule 77 (ifComparacion -> IF LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE .)
    PRINTLN         reduce using rule 77 (ifComparacion -> IF LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE .)
    RETURN          reduce using rule 77 (ifComparacion -> IF LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE .)
    VAR             reduce using rule 77 (ifComparacion -> IF LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE .)
    VAL             reduce using rule 77 (ifComparacion -> IF LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE .)
    STRINGPALABRA   reduce using rule 77 (ifComparacion -> IF LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE .)
    FUN             reduce using rule 77 (ifComparacion -> IF LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE .)
    IF              reduce using rule 77 (ifComparacion -> IF LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE .)
    WHEN            reduce using rule 77 (ifComparacion -> IF LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE .)
    FOR             reduce using rule 77 (ifComparacion -> IF LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE .)
    $end            reduce using rule 77 (ifComparacion -> IF LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE .)
    RLLAVE          reduce using rule 77 (ifComparacion -> IF LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE .)


state 206

    (78) ifVariable -> IF LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE .

    VARIABLE        reduce using rule 78 (ifVariable -> IF LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    PRINT           reduce using rule 78 (ifVariable -> IF LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    PRINTLN         reduce using rule 78 (ifVariable -> IF LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    RETURN          reduce using rule 78 (ifVariable -> IF LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    VAR             reduce using rule 78 (ifVariable -> IF LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    VAL             reduce using rule 78 (ifVariable -> IF LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    STRINGPALABRA   reduce using rule 78 (ifVariable -> IF LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    FUN             reduce using rule 78 (ifVariable -> IF LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    IF              reduce using rule 78 (ifVariable -> IF LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    WHEN            reduce using rule 78 (ifVariable -> IF LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    FOR             reduce using rule 78 (ifVariable -> IF LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    $end            reduce using rule 78 (ifVariable -> IF LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    RLLAVE          reduce using rule 78 (ifVariable -> IF LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)


state 207

    (79) whenVariable -> WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE .

    VARIABLE        reduce using rule 79 (whenVariable -> WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    PRINT           reduce using rule 79 (whenVariable -> WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    PRINTLN         reduce using rule 79 (whenVariable -> WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    RETURN          reduce using rule 79 (whenVariable -> WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    VAR             reduce using rule 79 (whenVariable -> WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    VAL             reduce using rule 79 (whenVariable -> WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    STRINGPALABRA   reduce using rule 79 (whenVariable -> WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    FUN             reduce using rule 79 (whenVariable -> WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    IF              reduce using rule 79 (whenVariable -> WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    WHEN            reduce using rule 79 (whenVariable -> WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    FOR             reduce using rule 79 (whenVariable -> WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    $end            reduce using rule 79 (whenVariable -> WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    RLLAVE          reduce using rule 79 (whenVariable -> WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)


state 208

    (81) forVariable -> FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE . repetodo RLLAVE
    (14) repetodo -> . todo
    (15) repetodo -> . todo repetodo
    (2) todo -> . lista
    (3) todo -> . variable
    (4) todo -> . conjunto
    (5) todo -> . pair
    (6) todo -> . control
    (7) todo -> . adicionales
    (8) todo -> . funcion
    (9) todo -> . sublist
    (10) todo -> . readline
    (11) todo -> . prin
    (12) todo -> . contador
    (13) todo -> . retor
    (16) lista -> . ListaConTipo
    (17) lista -> . ListaSinTipo
    (18) variable -> . variableConTipo
    (19) variable -> . variableSinTipo
    (20) conjunto -> . ConjuntoConTipo
    (21) conjunto -> . ConjuntoSinTipo
    (34) pair -> . valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN
    (66) control -> . if
    (67) control -> . when
    (68) control -> . for
    (91) adicionales -> . size
    (92) adicionales -> . rindex
    (93) adicionales -> . sublist
    (94) adicionales -> . contains
    (83) funcion -> . funConSalidaArg
    (84) funcion -> . funConSalida
    (85) funcion -> . funSinSalidaArg
    (86) funcion -> . funSinSalida
    (102) sublist -> . sublistIndex
    (103) sublist -> . sublistInicio
    (104) sublist -> . sublistFinal
    (108) readline -> . VARIABLE IGUAL READLINE
    (109) readline -> . valovar VARIABLE IGUAL READLINE
    (110) prin -> . PRINT LPAREN datosprimitivos RPAREN
    (111) prin -> . PRINTLN LPAREN datosprimitivos RPAREN
    (112) contador -> . VARIABLE PLUS PLUS
    (113) retor -> . RETURN VARIABLE
    (26) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN
    (27) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN
    (28) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN
    (29) ListaSinTipo -> . valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN
    (22) variableConTipo -> . valovar VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA
    (23) variableConTipo -> . valovar VARIABLE DOSPUNTOS INT IGUAL NUMBER
    (24) variableConTipo -> . valovar VARIABLE DOSPUNTOS BOOLEAN IGUAL
    (25) variableSinTipo -> . valovar VARIABLE IGUAL datosprimitivos
    (30) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN
    (31) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN
    (32) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN
    (33) ConjuntoSinTipo -> . valovar VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN
    (39) valovar -> . VAR
    (40) valovar -> . VAL
    (69) if -> . ifBoolean
    (70) if -> . ifComparacion
    (71) if -> . ifVariable
    (72) when -> . whenVacio
    (73) when -> . whenVariable
    (74) for -> . forRango
    (75) for -> . forVariable
    (95) size -> . VARIABLE PUNTO SIZE
    (100) rindex -> . STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier RPAREN
    (101) rindex -> . VARIABLE PUNTO RINDEX LPAREN repeCualquier RPAREN
    (96) contains -> .
    (97) contains -> . VARIABLE PUNTO CONTAINS LPAREN datosprimitivos RPAREN
    (98) contains -> . STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN
    (99) contains -> . STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE RPAREN
    (89) funConSalidaArg -> . FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (87) funConSalida -> . FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (90) funSinSalidaArg -> . FUN VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE
    (88) funSinSalida -> . FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE
    (105) sublistIndex -> . lista LCLASP INT DOSPUNTOS INT RCLASP
    (106) sublistInicio -> . lista LCLASP DOSPUNTOS INT RCLASP
    (107) sublistFinal -> . lista LCLASP INT DOSPUNTOS RCLASP
    (76) ifBoolean -> . IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE
    (77) ifComparacion -> . IF LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE
    (78) ifVariable -> . IF LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE
    (80) whenVacio -> . WHEN LLLAVE repetodo RLLAVE
    (79) whenVariable -> . WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE
    (82) forRango -> . FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE
    (81) forVariable -> . FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for STRINGPALABRA resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHEN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    VARIABLE        shift and go to state 23
    PRINT           shift and go to state 37
    PRINTLN         shift and go to state 38
    RETURN          shift and go to state 39
    VAR             shift and go to state 41
    VAL             shift and go to state 42
    STRINGPALABRA   shift and go to state 40
    RLLAVE          reduce using rule 96 (contains -> .)
    FUN             shift and go to state 50
    IF              shift and go to state 51
    WHEN            shift and go to state 52
    FOR             shift and go to state 53

  ! VARIABLE        [ reduce using rule 96 (contains -> .) ]
  ! PRINT           [ reduce using rule 96 (contains -> .) ]
  ! PRINTLN         [ reduce using rule 96 (contains -> .) ]
  ! RETURN          [ reduce using rule 96 (contains -> .) ]
  ! VAR             [ reduce using rule 96 (contains -> .) ]
  ! VAL             [ reduce using rule 96 (contains -> .) ]
  ! STRINGPALABRA   [ reduce using rule 96 (contains -> .) ]
  ! FUN             [ reduce using rule 96 (contains -> .) ]
  ! IF              [ reduce using rule 96 (contains -> .) ]
  ! WHEN            [ reduce using rule 96 (contains -> .) ]
  ! FOR             [ reduce using rule 96 (contains -> .) ]

    repetodo                       shift and go to state 220
    todo                           shift and go to state 3
    lista                          shift and go to state 4
    variable                       shift and go to state 5
    conjunto                       shift and go to state 6
    pair                           shift and go to state 7
    control                        shift and go to state 8
    adicionales                    shift and go to state 9
    funcion                        shift and go to state 10
    sublist                        shift and go to state 11
    readline                       shift and go to state 12
    prin                           shift and go to state 13
    contador                       shift and go to state 14
    retor                          shift and go to state 15
    ListaConTipo                   shift and go to state 16
    ListaSinTipo                   shift and go to state 17
    variableConTipo                shift and go to state 18
    variableSinTipo                shift and go to state 19
    ConjuntoConTipo                shift and go to state 20
    ConjuntoSinTipo                shift and go to state 21
    valovar                        shift and go to state 22
    if                             shift and go to state 24
    when                           shift and go to state 25
    for                            shift and go to state 26
    size                           shift and go to state 27
    rindex                         shift and go to state 28
    contains                       shift and go to state 29
    funConSalidaArg                shift and go to state 30
    funConSalida                   shift and go to state 31
    funSinSalidaArg                shift and go to state 32
    funSinSalida                   shift and go to state 33
    sublistIndex                   shift and go to state 34
    sublistInicio                  shift and go to state 35
    sublistFinal                   shift and go to state 36
    ifBoolean                      shift and go to state 43
    ifComparacion                  shift and go to state 44
    ifVariable                     shift and go to state 45
    whenVacio                      shift and go to state 46
    whenVariable                   shift and go to state 47
    forRango                       shift and go to state 48
    forVariable                    shift and go to state 49

state 209

    (82) forRango -> FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO . NUMBER RPAREN LLLAVE repetodo RLLAVE

    NUMBER          shift and go to state 221


state 210

    (34) pair -> valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos . RPAREN

    RPAREN          shift and go to state 222


state 211

    (26) ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL . LISTOF LPAREN repeInt RPAREN

    LISTOF          shift and go to state 223


state 212

    (27) ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL . LISTOF LPAREN repeString RPAREN

    LISTOF          shift and go to state 224


state 213

    (28) ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL . LISTOF repeBool LPAREN RPAREN

    LISTOF          shift and go to state 225


state 214

    (30) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL . SETOF LPAREN repeInt RPAREN

    SETOF           shift and go to state 226


state 215

    (31) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL . SETOF LPAREN repeString RPAREN

    SETOF           shift and go to state 227


state 216

    (32) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL . SETOF LPAREN repeBool RPAREN

    SETOF           shift and go to state 228


state 217

    (89) funConSalidaArg -> FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo . RLLAVE

    RLLAVE          shift and go to state 229


state 218

    (87) funConSalida -> FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE . repetodo RLLAVE
    (14) repetodo -> . todo
    (15) repetodo -> . todo repetodo
    (2) todo -> . lista
    (3) todo -> . variable
    (4) todo -> . conjunto
    (5) todo -> . pair
    (6) todo -> . control
    (7) todo -> . adicionales
    (8) todo -> . funcion
    (9) todo -> . sublist
    (10) todo -> . readline
    (11) todo -> . prin
    (12) todo -> . contador
    (13) todo -> . retor
    (16) lista -> . ListaConTipo
    (17) lista -> . ListaSinTipo
    (18) variable -> . variableConTipo
    (19) variable -> . variableSinTipo
    (20) conjunto -> . ConjuntoConTipo
    (21) conjunto -> . ConjuntoSinTipo
    (34) pair -> . valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN
    (66) control -> . if
    (67) control -> . when
    (68) control -> . for
    (91) adicionales -> . size
    (92) adicionales -> . rindex
    (93) adicionales -> . sublist
    (94) adicionales -> . contains
    (83) funcion -> . funConSalidaArg
    (84) funcion -> . funConSalida
    (85) funcion -> . funSinSalidaArg
    (86) funcion -> . funSinSalida
    (102) sublist -> . sublistIndex
    (103) sublist -> . sublistInicio
    (104) sublist -> . sublistFinal
    (108) readline -> . VARIABLE IGUAL READLINE
    (109) readline -> . valovar VARIABLE IGUAL READLINE
    (110) prin -> . PRINT LPAREN datosprimitivos RPAREN
    (111) prin -> . PRINTLN LPAREN datosprimitivos RPAREN
    (112) contador -> . VARIABLE PLUS PLUS
    (113) retor -> . RETURN VARIABLE
    (26) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN
    (27) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN
    (28) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN
    (29) ListaSinTipo -> . valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN
    (22) variableConTipo -> . valovar VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA
    (23) variableConTipo -> . valovar VARIABLE DOSPUNTOS INT IGUAL NUMBER
    (24) variableConTipo -> . valovar VARIABLE DOSPUNTOS BOOLEAN IGUAL
    (25) variableSinTipo -> . valovar VARIABLE IGUAL datosprimitivos
    (30) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN
    (31) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN
    (32) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN
    (33) ConjuntoSinTipo -> . valovar VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN
    (39) valovar -> . VAR
    (40) valovar -> . VAL
    (69) if -> . ifBoolean
    (70) if -> . ifComparacion
    (71) if -> . ifVariable
    (72) when -> . whenVacio
    (73) when -> . whenVariable
    (74) for -> . forRango
    (75) for -> . forVariable
    (95) size -> . VARIABLE PUNTO SIZE
    (100) rindex -> . STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier RPAREN
    (101) rindex -> . VARIABLE PUNTO RINDEX LPAREN repeCualquier RPAREN
    (96) contains -> .
    (97) contains -> . VARIABLE PUNTO CONTAINS LPAREN datosprimitivos RPAREN
    (98) contains -> . STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN
    (99) contains -> . STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE RPAREN
    (89) funConSalidaArg -> . FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (87) funConSalida -> . FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (90) funSinSalidaArg -> . FUN VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE
    (88) funSinSalida -> . FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE
    (105) sublistIndex -> . lista LCLASP INT DOSPUNTOS INT RCLASP
    (106) sublistInicio -> . lista LCLASP DOSPUNTOS INT RCLASP
    (107) sublistFinal -> . lista LCLASP INT DOSPUNTOS RCLASP
    (76) ifBoolean -> . IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE
    (77) ifComparacion -> . IF LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE
    (78) ifVariable -> . IF LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE
    (80) whenVacio -> . WHEN LLLAVE repetodo RLLAVE
    (79) whenVariable -> . WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE
    (82) forRango -> . FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE
    (81) forVariable -> . FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for STRINGPALABRA resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHEN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    VARIABLE        shift and go to state 23
    PRINT           shift and go to state 37
    PRINTLN         shift and go to state 38
    RETURN          shift and go to state 39
    VAR             shift and go to state 41
    VAL             shift and go to state 42
    STRINGPALABRA   shift and go to state 40
    RLLAVE          reduce using rule 96 (contains -> .)
    FUN             shift and go to state 50
    IF              shift and go to state 51
    WHEN            shift and go to state 52
    FOR             shift and go to state 53

  ! VARIABLE        [ reduce using rule 96 (contains -> .) ]
  ! PRINT           [ reduce using rule 96 (contains -> .) ]
  ! PRINTLN         [ reduce using rule 96 (contains -> .) ]
  ! RETURN          [ reduce using rule 96 (contains -> .) ]
  ! VAR             [ reduce using rule 96 (contains -> .) ]
  ! VAL             [ reduce using rule 96 (contains -> .) ]
  ! STRINGPALABRA   [ reduce using rule 96 (contains -> .) ]
  ! FUN             [ reduce using rule 96 (contains -> .) ]
  ! IF              [ reduce using rule 96 (contains -> .) ]
  ! WHEN            [ reduce using rule 96 (contains -> .) ]
  ! FOR             [ reduce using rule 96 (contains -> .) ]

    repetodo                       shift and go to state 230
    todo                           shift and go to state 3
    lista                          shift and go to state 4
    variable                       shift and go to state 5
    conjunto                       shift and go to state 6
    pair                           shift and go to state 7
    control                        shift and go to state 8
    adicionales                    shift and go to state 9
    funcion                        shift and go to state 10
    sublist                        shift and go to state 11
    readline                       shift and go to state 12
    prin                           shift and go to state 13
    contador                       shift and go to state 14
    retor                          shift and go to state 15
    ListaConTipo                   shift and go to state 16
    ListaSinTipo                   shift and go to state 17
    variableConTipo                shift and go to state 18
    variableSinTipo                shift and go to state 19
    ConjuntoConTipo                shift and go to state 20
    ConjuntoSinTipo                shift and go to state 21
    valovar                        shift and go to state 22
    if                             shift and go to state 24
    when                           shift and go to state 25
    for                            shift and go to state 26
    size                           shift and go to state 27
    rindex                         shift and go to state 28
    contains                       shift and go to state 29
    funConSalidaArg                shift and go to state 30
    funConSalida                   shift and go to state 31
    funSinSalidaArg                shift and go to state 32
    funSinSalida                   shift and go to state 33
    sublistIndex                   shift and go to state 34
    sublistInicio                  shift and go to state 35
    sublistFinal                   shift and go to state 36
    ifBoolean                      shift and go to state 43
    ifComparacion                  shift and go to state 44
    ifVariable                     shift and go to state 45
    whenVacio                      shift and go to state 46
    whenVariable                   shift and go to state 47
    forRango                       shift and go to state 48
    forVariable                    shift and go to state 49

state 219

    (88) funSinSalida -> FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE .

    VARIABLE        reduce using rule 88 (funSinSalida -> FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE .)
    PRINT           reduce using rule 88 (funSinSalida -> FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE .)
    PRINTLN         reduce using rule 88 (funSinSalida -> FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE .)
    RETURN          reduce using rule 88 (funSinSalida -> FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE .)
    VAR             reduce using rule 88 (funSinSalida -> FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE .)
    VAL             reduce using rule 88 (funSinSalida -> FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE .)
    STRINGPALABRA   reduce using rule 88 (funSinSalida -> FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE .)
    FUN             reduce using rule 88 (funSinSalida -> FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE .)
    IF              reduce using rule 88 (funSinSalida -> FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE .)
    WHEN            reduce using rule 88 (funSinSalida -> FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE .)
    FOR             reduce using rule 88 (funSinSalida -> FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE .)
    $end            reduce using rule 88 (funSinSalida -> FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE .)
    RLLAVE          reduce using rule 88 (funSinSalida -> FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE .)


state 220

    (81) forVariable -> FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo . RLLAVE

    RLLAVE          shift and go to state 231


state 221

    (82) forRango -> FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER . RPAREN LLLAVE repetodo RLLAVE

    RPAREN          shift and go to state 232


state 222

    (34) pair -> valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN .

    VARIABLE        reduce using rule 34 (pair -> valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN .)
    PRINT           reduce using rule 34 (pair -> valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN .)
    PRINTLN         reduce using rule 34 (pair -> valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN .)
    RETURN          reduce using rule 34 (pair -> valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN .)
    VAR             reduce using rule 34 (pair -> valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN .)
    VAL             reduce using rule 34 (pair -> valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN .)
    STRINGPALABRA   reduce using rule 34 (pair -> valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN .)
    FUN             reduce using rule 34 (pair -> valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN .)
    IF              reduce using rule 34 (pair -> valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN .)
    WHEN            reduce using rule 34 (pair -> valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN .)
    FOR             reduce using rule 34 (pair -> valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN .)
    $end            reduce using rule 34 (pair -> valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN .)
    RLLAVE          reduce using rule 34 (pair -> valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN .)


state 223

    (26) ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF . LPAREN repeInt RPAREN

    LPAREN          shift and go to state 233


state 224

    (27) ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF . LPAREN repeString RPAREN

    LPAREN          shift and go to state 234


state 225

    (28) ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF . repeBool LPAREN RPAREN
    (49) repeBool -> . bool
    (50) repeBool -> . bool COMA repeBool
    (51) bool -> . BOOLEANPALABRA
    (52) bool -> . VARIABLE

    BOOLEANPALABRA  shift and go to state 238
    VARIABLE        shift and go to state 235

    repeBool                       shift and go to state 236
    bool                           shift and go to state 237

state 226

    (30) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF . LPAREN repeInt RPAREN

    LPAREN          shift and go to state 239


state 227

    (31) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF . LPAREN repeString RPAREN

    LPAREN          shift and go to state 240


state 228

    (32) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF . LPAREN repeBool RPAREN

    LPAREN          shift and go to state 241


state 229

    (89) funConSalidaArg -> FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE .

    VARIABLE        reduce using rule 89 (funConSalidaArg -> FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE .)
    PRINT           reduce using rule 89 (funConSalidaArg -> FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE .)
    PRINTLN         reduce using rule 89 (funConSalidaArg -> FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE .)
    RETURN          reduce using rule 89 (funConSalidaArg -> FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE .)
    VAR             reduce using rule 89 (funConSalidaArg -> FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE .)
    VAL             reduce using rule 89 (funConSalidaArg -> FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE .)
    STRINGPALABRA   reduce using rule 89 (funConSalidaArg -> FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE .)
    FUN             reduce using rule 89 (funConSalidaArg -> FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE .)
    IF              reduce using rule 89 (funConSalidaArg -> FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE .)
    WHEN            reduce using rule 89 (funConSalidaArg -> FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE .)
    FOR             reduce using rule 89 (funConSalidaArg -> FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE .)
    $end            reduce using rule 89 (funConSalidaArg -> FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE .)
    RLLAVE          reduce using rule 89 (funConSalidaArg -> FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE .)


state 230

    (87) funConSalida -> FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo . RLLAVE

    RLLAVE          shift and go to state 242


state 231

    (81) forVariable -> FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE .

    VARIABLE        reduce using rule 81 (forVariable -> FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    PRINT           reduce using rule 81 (forVariable -> FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    PRINTLN         reduce using rule 81 (forVariable -> FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    RETURN          reduce using rule 81 (forVariable -> FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    VAR             reduce using rule 81 (forVariable -> FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    VAL             reduce using rule 81 (forVariable -> FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    STRINGPALABRA   reduce using rule 81 (forVariable -> FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    FUN             reduce using rule 81 (forVariable -> FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    IF              reduce using rule 81 (forVariable -> FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    WHEN            reduce using rule 81 (forVariable -> FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    FOR             reduce using rule 81 (forVariable -> FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    $end            reduce using rule 81 (forVariable -> FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)
    RLLAVE          reduce using rule 81 (forVariable -> FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE .)


state 232

    (82) forRango -> FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN . LLLAVE repetodo RLLAVE

    LLLAVE          shift and go to state 243


state 233

    (26) ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN . repeInt RPAREN
    (41) repeInt -> . valor
    (42) repeInt -> . valor COMA repeInt
    (43) valor -> . NUMBER
    (44) valor -> . VARIABLE

    NUMBER          shift and go to state 91
    VARIABLE        shift and go to state 157

    repeInt                        shift and go to state 244
    valor                          shift and go to state 245

state 234

    (27) ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN . repeString RPAREN
    (45) repeString -> . String
    (46) repeString -> . String COMA repeString
    (47) String -> . STRINGPALABRA
    (48) String -> . VARIABLE

    STRINGPALABRA   shift and go to state 249
    VARIABLE        shift and go to state 246

    repeString                     shift and go to state 247
    String                         shift and go to state 248

state 235

    (52) bool -> VARIABLE .

    COMA            reduce using rule 52 (bool -> VARIABLE .)
    LPAREN          reduce using rule 52 (bool -> VARIABLE .)
    RPAREN          reduce using rule 52 (bool -> VARIABLE .)


state 236

    (28) ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool . LPAREN RPAREN

    LPAREN          shift and go to state 250


state 237

    (49) repeBool -> bool .
    (50) repeBool -> bool . COMA repeBool

    LPAREN          reduce using rule 49 (repeBool -> bool .)
    RPAREN          reduce using rule 49 (repeBool -> bool .)
    COMA            shift and go to state 251


state 238

    (51) bool -> BOOLEANPALABRA .

    COMA            reduce using rule 51 (bool -> BOOLEANPALABRA .)
    LPAREN          reduce using rule 51 (bool -> BOOLEANPALABRA .)
    RPAREN          reduce using rule 51 (bool -> BOOLEANPALABRA .)


state 239

    (30) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN . repeInt RPAREN
    (41) repeInt -> . valor
    (42) repeInt -> . valor COMA repeInt
    (43) valor -> . NUMBER
    (44) valor -> . VARIABLE

    NUMBER          shift and go to state 91
    VARIABLE        shift and go to state 157

    repeInt                        shift and go to state 252
    valor                          shift and go to state 245

state 240

    (31) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN . repeString RPAREN
    (45) repeString -> . String
    (46) repeString -> . String COMA repeString
    (47) String -> . STRINGPALABRA
    (48) String -> . VARIABLE

    STRINGPALABRA   shift and go to state 249
    VARIABLE        shift and go to state 246

    repeString                     shift and go to state 253
    String                         shift and go to state 248

state 241

    (32) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN . repeBool RPAREN
    (49) repeBool -> . bool
    (50) repeBool -> . bool COMA repeBool
    (51) bool -> . BOOLEANPALABRA
    (52) bool -> . VARIABLE

    BOOLEANPALABRA  shift and go to state 238
    VARIABLE        shift and go to state 235

    repeBool                       shift and go to state 254
    bool                           shift and go to state 237

state 242

    (87) funConSalida -> FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE .

    VARIABLE        reduce using rule 87 (funConSalida -> FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE .)
    PRINT           reduce using rule 87 (funConSalida -> FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE .)
    PRINTLN         reduce using rule 87 (funConSalida -> FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE .)
    RETURN          reduce using rule 87 (funConSalida -> FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE .)
    VAR             reduce using rule 87 (funConSalida -> FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE .)
    VAL             reduce using rule 87 (funConSalida -> FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE .)
    STRINGPALABRA   reduce using rule 87 (funConSalida -> FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE .)
    FUN             reduce using rule 87 (funConSalida -> FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE .)
    IF              reduce using rule 87 (funConSalida -> FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE .)
    WHEN            reduce using rule 87 (funConSalida -> FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE .)
    FOR             reduce using rule 87 (funConSalida -> FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE .)
    $end            reduce using rule 87 (funConSalida -> FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE .)
    RLLAVE          reduce using rule 87 (funConSalida -> FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE .)


state 243

    (82) forRango -> FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE . repetodo RLLAVE
    (14) repetodo -> . todo
    (15) repetodo -> . todo repetodo
    (2) todo -> . lista
    (3) todo -> . variable
    (4) todo -> . conjunto
    (5) todo -> . pair
    (6) todo -> . control
    (7) todo -> . adicionales
    (8) todo -> . funcion
    (9) todo -> . sublist
    (10) todo -> . readline
    (11) todo -> . prin
    (12) todo -> . contador
    (13) todo -> . retor
    (16) lista -> . ListaConTipo
    (17) lista -> . ListaSinTipo
    (18) variable -> . variableConTipo
    (19) variable -> . variableSinTipo
    (20) conjunto -> . ConjuntoConTipo
    (21) conjunto -> . ConjuntoSinTipo
    (34) pair -> . valovar VARIABLE IGUAL PAIR LPAREN datosprimitivos COMA datosprimitivos RPAREN
    (66) control -> . if
    (67) control -> . when
    (68) control -> . for
    (91) adicionales -> . size
    (92) adicionales -> . rindex
    (93) adicionales -> . sublist
    (94) adicionales -> . contains
    (83) funcion -> . funConSalidaArg
    (84) funcion -> . funConSalida
    (85) funcion -> . funSinSalidaArg
    (86) funcion -> . funSinSalida
    (102) sublist -> . sublistIndex
    (103) sublist -> . sublistInicio
    (104) sublist -> . sublistFinal
    (108) readline -> . VARIABLE IGUAL READLINE
    (109) readline -> . valovar VARIABLE IGUAL READLINE
    (110) prin -> . PRINT LPAREN datosprimitivos RPAREN
    (111) prin -> . PRINTLN LPAREN datosprimitivos RPAREN
    (112) contador -> . VARIABLE PLUS PLUS
    (113) retor -> . RETURN VARIABLE
    (26) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN
    (27) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN
    (28) ListaConTipo -> . valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN
    (29) ListaSinTipo -> . valovar VARIABLE IGUAL LISTOF LPAREN repeCualquier RPAREN
    (22) variableConTipo -> . valovar VARIABLE DOSPUNTOS STRING IGUAL STRINGPALABRA
    (23) variableConTipo -> . valovar VARIABLE DOSPUNTOS INT IGUAL NUMBER
    (24) variableConTipo -> . valovar VARIABLE DOSPUNTOS BOOLEAN IGUAL
    (25) variableSinTipo -> . valovar VARIABLE IGUAL datosprimitivos
    (30) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN
    (31) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN
    (32) ConjuntoConTipo -> . valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN
    (33) ConjuntoSinTipo -> . valovar VARIABLE IGUAL SETOF LPAREN repeCualquier RPAREN
    (39) valovar -> . VAR
    (40) valovar -> . VAL
    (69) if -> . ifBoolean
    (70) if -> . ifComparacion
    (71) if -> . ifVariable
    (72) when -> . whenVacio
    (73) when -> . whenVariable
    (74) for -> . forRango
    (75) for -> . forVariable
    (95) size -> . VARIABLE PUNTO SIZE
    (100) rindex -> . STRINGPALABRA PUNTO RINDEX LPAREN repeCualquier RPAREN
    (101) rindex -> . VARIABLE PUNTO RINDEX LPAREN repeCualquier RPAREN
    (96) contains -> .
    (97) contains -> . VARIABLE PUNTO CONTAINS LPAREN datosprimitivos RPAREN
    (98) contains -> . STRINGPALABRA PUNTO CONTAINS LPAREN STRINGPALABRA RPAREN
    (99) contains -> . STRINGPALABRA PUNTO CONTAINS LPAREN VARIABLE RPAREN
    (89) funConSalidaArg -> . FUN VARIABLE LPAREN RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (87) funConSalida -> . FUN VARIABLE LPAREN repeArg RPAREN DOSPUNTOS tipoDato LLLAVE repetodo RLLAVE
    (90) funSinSalidaArg -> . FUN VARIABLE LPAREN RPAREN LLLAVE repetodo RLLAVE
    (88) funSinSalida -> . FUN VARIABLE LPAREN repeArg RPAREN LLLAVE repetodo RLLAVE
    (105) sublistIndex -> . lista LCLASP INT DOSPUNTOS INT RCLASP
    (106) sublistInicio -> . lista LCLASP DOSPUNTOS INT RCLASP
    (107) sublistFinal -> . lista LCLASP INT DOSPUNTOS RCLASP
    (76) ifBoolean -> . IF LPAREN BOOLEANPALABRA RPAREN LLLAVE repetodo RLLAVE
    (77) ifComparacion -> . IF LPAREN comparacion RPAREN LLLAVE repetodo RLLAVE
    (78) ifVariable -> . IF LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE
    (80) whenVacio -> . WHEN LLLAVE repetodo RLLAVE
    (79) whenVariable -> . WHEN LPAREN VARIABLE RPAREN LLLAVE repetodo RLLAVE
    (82) forRango -> . FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE
    (81) forVariable -> . FOR LPAREN VARIABLE IN VARIABLE RPAREN LLLAVE repetodo RLLAVE

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for STRINGPALABRA resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHEN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    VARIABLE        shift and go to state 23
    PRINT           shift and go to state 37
    PRINTLN         shift and go to state 38
    RETURN          shift and go to state 39
    VAR             shift and go to state 41
    VAL             shift and go to state 42
    STRINGPALABRA   shift and go to state 40
    RLLAVE          reduce using rule 96 (contains -> .)
    FUN             shift and go to state 50
    IF              shift and go to state 51
    WHEN            shift and go to state 52
    FOR             shift and go to state 53

  ! VARIABLE        [ reduce using rule 96 (contains -> .) ]
  ! PRINT           [ reduce using rule 96 (contains -> .) ]
  ! PRINTLN         [ reduce using rule 96 (contains -> .) ]
  ! RETURN          [ reduce using rule 96 (contains -> .) ]
  ! VAR             [ reduce using rule 96 (contains -> .) ]
  ! VAL             [ reduce using rule 96 (contains -> .) ]
  ! STRINGPALABRA   [ reduce using rule 96 (contains -> .) ]
  ! FUN             [ reduce using rule 96 (contains -> .) ]
  ! IF              [ reduce using rule 96 (contains -> .) ]
  ! WHEN            [ reduce using rule 96 (contains -> .) ]
  ! FOR             [ reduce using rule 96 (contains -> .) ]

    repetodo                       shift and go to state 255
    todo                           shift and go to state 3
    lista                          shift and go to state 4
    variable                       shift and go to state 5
    conjunto                       shift and go to state 6
    pair                           shift and go to state 7
    control                        shift and go to state 8
    adicionales                    shift and go to state 9
    funcion                        shift and go to state 10
    sublist                        shift and go to state 11
    readline                       shift and go to state 12
    prin                           shift and go to state 13
    contador                       shift and go to state 14
    retor                          shift and go to state 15
    ListaConTipo                   shift and go to state 16
    ListaSinTipo                   shift and go to state 17
    variableConTipo                shift and go to state 18
    variableSinTipo                shift and go to state 19
    ConjuntoConTipo                shift and go to state 20
    ConjuntoSinTipo                shift and go to state 21
    valovar                        shift and go to state 22
    if                             shift and go to state 24
    when                           shift and go to state 25
    for                            shift and go to state 26
    size                           shift and go to state 27
    rindex                         shift and go to state 28
    contains                       shift and go to state 29
    funConSalidaArg                shift and go to state 30
    funConSalida                   shift and go to state 31
    funSinSalidaArg                shift and go to state 32
    funSinSalida                   shift and go to state 33
    sublistIndex                   shift and go to state 34
    sublistInicio                  shift and go to state 35
    sublistFinal                   shift and go to state 36
    ifBoolean                      shift and go to state 43
    ifComparacion                  shift and go to state 44
    ifVariable                     shift and go to state 45
    whenVacio                      shift and go to state 46
    whenVariable                   shift and go to state 47
    forRango                       shift and go to state 48
    forVariable                    shift and go to state 49

state 244

    (26) ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt . RPAREN

    RPAREN          shift and go to state 256


state 245

    (41) repeInt -> valor .
    (42) repeInt -> valor . COMA repeInt

    RPAREN          reduce using rule 41 (repeInt -> valor .)
    COMA            shift and go to state 257


state 246

    (48) String -> VARIABLE .

    COMA            reduce using rule 48 (String -> VARIABLE .)
    RPAREN          reduce using rule 48 (String -> VARIABLE .)


state 247

    (27) ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString . RPAREN

    RPAREN          shift and go to state 258


state 248

    (45) repeString -> String .
    (46) repeString -> String . COMA repeString

    RPAREN          reduce using rule 45 (repeString -> String .)
    COMA            shift and go to state 259


state 249

    (47) String -> STRINGPALABRA .

    COMA            reduce using rule 47 (String -> STRINGPALABRA .)
    RPAREN          reduce using rule 47 (String -> STRINGPALABRA .)


state 250

    (28) ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN . RPAREN

    RPAREN          shift and go to state 260


state 251

    (50) repeBool -> bool COMA . repeBool
    (49) repeBool -> . bool
    (50) repeBool -> . bool COMA repeBool
    (51) bool -> . BOOLEANPALABRA
    (52) bool -> . VARIABLE

    BOOLEANPALABRA  shift and go to state 238
    VARIABLE        shift and go to state 235

    bool                           shift and go to state 237
    repeBool                       shift and go to state 261

state 252

    (30) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt . RPAREN

    RPAREN          shift and go to state 262


state 253

    (31) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString . RPAREN

    RPAREN          shift and go to state 263


state 254

    (32) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool . RPAREN

    RPAREN          shift and go to state 264


state 255

    (82) forRango -> FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo . RLLAVE

    RLLAVE          shift and go to state 265


state 256

    (26) ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN .

    LCLASP          reduce using rule 26 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN .)
    VARIABLE        reduce using rule 26 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN .)
    PRINT           reduce using rule 26 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN .)
    PRINTLN         reduce using rule 26 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN .)
    RETURN          reduce using rule 26 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN .)
    VAR             reduce using rule 26 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN .)
    VAL             reduce using rule 26 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN .)
    STRINGPALABRA   reduce using rule 26 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN .)
    FUN             reduce using rule 26 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN .)
    IF              reduce using rule 26 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN .)
    WHEN            reduce using rule 26 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN .)
    FOR             reduce using rule 26 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN .)
    $end            reduce using rule 26 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN .)
    RLLAVE          reduce using rule 26 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE INT MAYORQUE IGUAL LISTOF LPAREN repeInt RPAREN .)


state 257

    (42) repeInt -> valor COMA . repeInt
    (41) repeInt -> . valor
    (42) repeInt -> . valor COMA repeInt
    (43) valor -> . NUMBER
    (44) valor -> . VARIABLE

    NUMBER          shift and go to state 91
    VARIABLE        shift and go to state 157

    valor                          shift and go to state 245
    repeInt                        shift and go to state 266

state 258

    (27) ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN .

    LCLASP          reduce using rule 27 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN .)
    VARIABLE        reduce using rule 27 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN .)
    PRINT           reduce using rule 27 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN .)
    PRINTLN         reduce using rule 27 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN .)
    RETURN          reduce using rule 27 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN .)
    VAR             reduce using rule 27 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN .)
    VAL             reduce using rule 27 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN .)
    STRINGPALABRA   reduce using rule 27 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN .)
    FUN             reduce using rule 27 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN .)
    IF              reduce using rule 27 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN .)
    WHEN            reduce using rule 27 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN .)
    FOR             reduce using rule 27 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN .)
    $end            reduce using rule 27 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN .)
    RLLAVE          reduce using rule 27 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE STRING MAYORQUE IGUAL LISTOF LPAREN repeString RPAREN .)


state 259

    (46) repeString -> String COMA . repeString
    (45) repeString -> . String
    (46) repeString -> . String COMA repeString
    (47) String -> . STRINGPALABRA
    (48) String -> . VARIABLE

    STRINGPALABRA   shift and go to state 249
    VARIABLE        shift and go to state 246

    String                         shift and go to state 248
    repeString                     shift and go to state 267

state 260

    (28) ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN .

    LCLASP          reduce using rule 28 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN .)
    VARIABLE        reduce using rule 28 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN .)
    PRINT           reduce using rule 28 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN .)
    PRINTLN         reduce using rule 28 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN .)
    RETURN          reduce using rule 28 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN .)
    VAR             reduce using rule 28 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN .)
    VAL             reduce using rule 28 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN .)
    STRINGPALABRA   reduce using rule 28 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN .)
    FUN             reduce using rule 28 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN .)
    IF              reduce using rule 28 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN .)
    WHEN            reduce using rule 28 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN .)
    FOR             reduce using rule 28 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN .)
    $end            reduce using rule 28 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN .)
    RLLAVE          reduce using rule 28 (ListaConTipo -> valovar VARIABLE DOSPUNTOS LIST MENORQUE BOOLEAN MAYORQUE IGUAL LISTOF repeBool LPAREN RPAREN .)


state 261

    (50) repeBool -> bool COMA repeBool .

    LPAREN          reduce using rule 50 (repeBool -> bool COMA repeBool .)
    RPAREN          reduce using rule 50 (repeBool -> bool COMA repeBool .)


state 262

    (30) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN .

    VARIABLE        reduce using rule 30 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN .)
    PRINT           reduce using rule 30 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN .)
    PRINTLN         reduce using rule 30 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN .)
    RETURN          reduce using rule 30 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN .)
    VAR             reduce using rule 30 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN .)
    VAL             reduce using rule 30 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN .)
    STRINGPALABRA   reduce using rule 30 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN .)
    FUN             reduce using rule 30 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN .)
    IF              reduce using rule 30 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN .)
    WHEN            reduce using rule 30 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN .)
    FOR             reduce using rule 30 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN .)
    $end            reduce using rule 30 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN .)
    RLLAVE          reduce using rule 30 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE INT MAYORQUE IGUAL SETOF LPAREN repeInt RPAREN .)


state 263

    (31) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN .

    VARIABLE        reduce using rule 31 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN .)
    PRINT           reduce using rule 31 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN .)
    PRINTLN         reduce using rule 31 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN .)
    RETURN          reduce using rule 31 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN .)
    VAR             reduce using rule 31 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN .)
    VAL             reduce using rule 31 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN .)
    STRINGPALABRA   reduce using rule 31 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN .)
    FUN             reduce using rule 31 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN .)
    IF              reduce using rule 31 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN .)
    WHEN            reduce using rule 31 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN .)
    FOR             reduce using rule 31 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN .)
    $end            reduce using rule 31 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN .)
    RLLAVE          reduce using rule 31 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE STRING MAYORQUE IGUAL SETOF LPAREN repeString RPAREN .)


state 264

    (32) ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN .

    VARIABLE        reduce using rule 32 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN .)
    PRINT           reduce using rule 32 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN .)
    PRINTLN         reduce using rule 32 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN .)
    RETURN          reduce using rule 32 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN .)
    VAR             reduce using rule 32 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN .)
    VAL             reduce using rule 32 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN .)
    STRINGPALABRA   reduce using rule 32 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN .)
    FUN             reduce using rule 32 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN .)
    IF              reduce using rule 32 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN .)
    WHEN            reduce using rule 32 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN .)
    FOR             reduce using rule 32 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN .)
    $end            reduce using rule 32 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN .)
    RLLAVE          reduce using rule 32 (ConjuntoConTipo -> valovar VARIABLE DOSPUNTOS SET MENORQUE BOOLEAN MAYORQUE IGUAL SETOF LPAREN repeBool RPAREN .)


state 265

    (82) forRango -> FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE .

    VARIABLE        reduce using rule 82 (forRango -> FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE .)
    PRINT           reduce using rule 82 (forRango -> FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE .)
    PRINTLN         reduce using rule 82 (forRango -> FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE .)
    RETURN          reduce using rule 82 (forRango -> FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE .)
    VAR             reduce using rule 82 (forRango -> FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE .)
    VAL             reduce using rule 82 (forRango -> FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE .)
    STRINGPALABRA   reduce using rule 82 (forRango -> FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE .)
    FUN             reduce using rule 82 (forRango -> FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE .)
    IF              reduce using rule 82 (forRango -> FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE .)
    WHEN            reduce using rule 82 (forRango -> FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE .)
    FOR             reduce using rule 82 (forRango -> FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE .)
    $end            reduce using rule 82 (forRango -> FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE .)
    RLLAVE          reduce using rule 82 (forRango -> FOR LPAREN VARIABLE IN NUMBER PUNTO PUNTO NUMBER RPAREN LLLAVE repetodo RLLAVE .)


state 266

    (42) repeInt -> valor COMA repeInt .

    RPAREN          reduce using rule 42 (repeInt -> valor COMA repeInt .)


state 267

    (46) repeString -> String COMA repeString .

    RPAREN          reduce using rule 46 (repeString -> String COMA repeString .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VARIABLE in state 0 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 0 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 0 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 0 resolved as shift
WARNING: shift/reduce conflict for VAR in state 0 resolved as shift
WARNING: shift/reduce conflict for VAL in state 0 resolved as shift
WARNING: shift/reduce conflict for STRINGPALABRA in state 0 resolved as shift
WARNING: shift/reduce conflict for FUN in state 0 resolved as shift
WARNING: shift/reduce conflict for IF in state 0 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 0 resolved as shift
WARNING: shift/reduce conflict for FOR in state 0 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 3 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 3 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 3 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 3 resolved as shift
WARNING: shift/reduce conflict for VAR in state 3 resolved as shift
WARNING: shift/reduce conflict for VAL in state 3 resolved as shift
WARNING: shift/reduce conflict for STRINGPALABRA in state 3 resolved as shift
WARNING: shift/reduce conflict for FUN in state 3 resolved as shift
WARNING: shift/reduce conflict for IF in state 3 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 3 resolved as shift
WARNING: shift/reduce conflict for FOR in state 3 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 66 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 66 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 66 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 66 resolved as shift
WARNING: shift/reduce conflict for VAR in state 66 resolved as shift
WARNING: shift/reduce conflict for VAL in state 66 resolved as shift
WARNING: shift/reduce conflict for STRINGPALABRA in state 66 resolved as shift
WARNING: shift/reduce conflict for FUN in state 66 resolved as shift
WARNING: shift/reduce conflict for IF in state 66 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 66 resolved as shift
WARNING: shift/reduce conflict for FOR in state 66 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 149 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 149 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 149 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 149 resolved as shift
WARNING: shift/reduce conflict for VAR in state 149 resolved as shift
WARNING: shift/reduce conflict for VAL in state 149 resolved as shift
WARNING: shift/reduce conflict for STRINGPALABRA in state 149 resolved as shift
WARNING: shift/reduce conflict for FUN in state 149 resolved as shift
WARNING: shift/reduce conflict for IF in state 149 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 149 resolved as shift
WARNING: shift/reduce conflict for FOR in state 149 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 153 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 153 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 153 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 153 resolved as shift
WARNING: shift/reduce conflict for VAR in state 153 resolved as shift
WARNING: shift/reduce conflict for VAL in state 153 resolved as shift
WARNING: shift/reduce conflict for STRINGPALABRA in state 153 resolved as shift
WARNING: shift/reduce conflict for FUN in state 153 resolved as shift
WARNING: shift/reduce conflict for IF in state 153 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 153 resolved as shift
WARNING: shift/reduce conflict for FOR in state 153 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 154 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 154 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 154 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 154 resolved as shift
WARNING: shift/reduce conflict for VAR in state 154 resolved as shift
WARNING: shift/reduce conflict for VAL in state 154 resolved as shift
WARNING: shift/reduce conflict for STRINGPALABRA in state 154 resolved as shift
WARNING: shift/reduce conflict for FUN in state 154 resolved as shift
WARNING: shift/reduce conflict for IF in state 154 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 154 resolved as shift
WARNING: shift/reduce conflict for FOR in state 154 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 155 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 155 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 155 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 155 resolved as shift
WARNING: shift/reduce conflict for VAR in state 155 resolved as shift
WARNING: shift/reduce conflict for VAL in state 155 resolved as shift
WARNING: shift/reduce conflict for STRINGPALABRA in state 155 resolved as shift
WARNING: shift/reduce conflict for FUN in state 155 resolved as shift
WARNING: shift/reduce conflict for IF in state 155 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 155 resolved as shift
WARNING: shift/reduce conflict for FOR in state 155 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 158 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 158 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 158 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 158 resolved as shift
WARNING: shift/reduce conflict for VAR in state 158 resolved as shift
WARNING: shift/reduce conflict for VAL in state 158 resolved as shift
WARNING: shift/reduce conflict for STRINGPALABRA in state 158 resolved as shift
WARNING: shift/reduce conflict for FUN in state 158 resolved as shift
WARNING: shift/reduce conflict for IF in state 158 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 158 resolved as shift
WARNING: shift/reduce conflict for FOR in state 158 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 182 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 182 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 182 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 182 resolved as shift
WARNING: shift/reduce conflict for VAR in state 182 resolved as shift
WARNING: shift/reduce conflict for VAL in state 182 resolved as shift
WARNING: shift/reduce conflict for STRINGPALABRA in state 182 resolved as shift
WARNING: shift/reduce conflict for FUN in state 182 resolved as shift
WARNING: shift/reduce conflict for IF in state 182 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 182 resolved as shift
WARNING: shift/reduce conflict for FOR in state 182 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 200 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 200 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 200 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 200 resolved as shift
WARNING: shift/reduce conflict for VAR in state 200 resolved as shift
WARNING: shift/reduce conflict for VAL in state 200 resolved as shift
WARNING: shift/reduce conflict for STRINGPALABRA in state 200 resolved as shift
WARNING: shift/reduce conflict for FUN in state 200 resolved as shift
WARNING: shift/reduce conflict for IF in state 200 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 200 resolved as shift
WARNING: shift/reduce conflict for FOR in state 200 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 208 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 208 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 208 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 208 resolved as shift
WARNING: shift/reduce conflict for VAR in state 208 resolved as shift
WARNING: shift/reduce conflict for VAL in state 208 resolved as shift
WARNING: shift/reduce conflict for STRINGPALABRA in state 208 resolved as shift
WARNING: shift/reduce conflict for FUN in state 208 resolved as shift
WARNING: shift/reduce conflict for IF in state 208 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 208 resolved as shift
WARNING: shift/reduce conflict for FOR in state 208 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 218 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 218 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 218 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 218 resolved as shift
WARNING: shift/reduce conflict for VAR in state 218 resolved as shift
WARNING: shift/reduce conflict for VAL in state 218 resolved as shift
WARNING: shift/reduce conflict for STRINGPALABRA in state 218 resolved as shift
WARNING: shift/reduce conflict for FUN in state 218 resolved as shift
WARNING: shift/reduce conflict for IF in state 218 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 218 resolved as shift
WARNING: shift/reduce conflict for FOR in state 218 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 243 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 243 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 243 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 243 resolved as shift
WARNING: shift/reduce conflict for VAR in state 243 resolved as shift
WARNING: shift/reduce conflict for VAL in state 243 resolved as shift
WARNING: shift/reduce conflict for STRINGPALABRA in state 243 resolved as shift
WARNING: shift/reduce conflict for FUN in state 243 resolved as shift
WARNING: shift/reduce conflict for IF in state 243 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 243 resolved as shift
WARNING: shift/reduce conflict for FOR in state 243 resolved as shift
WARNING: reduce/reduce conflict in state 3 resolved using rule (repetodo -> todo)
WARNING: rejected rule (contains -> <empty>) in state 3
WARNING: reduce/reduce conflict in state 11 resolved using rule (todo -> sublist)
WARNING: rejected rule (adicionales -> sublist) in state 11
WARNING: Rule (adicionales -> sublist) is never reduced
